<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/6/2017 10:49:42 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="OMNI-LAP11"
  DTS:CreatorName="LPC\dkowalski"
  DTS:DTSID="{1BF41C1B-D1E1-45E8-B456-21CF416215DC}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.0800.90"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="73"
  DTS:VersionGUID="{4CE2D866-C75F-4E2F-82FA-61B5635AC872}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Different Address File]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{2F742E09-9176-40C0-B769-135BB375AB7A}"
      DTS:ObjectName="Different Address File">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="\\plinkdc1\home\IT\Development\Data Validation\Different_Address_Dup_Vin2.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="vin_dup"
              DTS:DTSID="{17F59AD0-67D1-4407-BE72-DAD180814FA0}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="status_dup"
              DTS:DTSID="{D1F672BC-5BCB-4562-9A83-4718619F43F8}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="insured_dup"
              DTS:DTSID="{BADA9579-3DA6-4F4D-89F2-7FB4C7545828}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="address1_dup"
              DTS:DTSID="{27659E2D-7AED-43AB-967D-125F14113523}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="address2_dup"
              DTS:DTSID="{BE14E21F-95F6-48B7-85C5-0D50F418DBC4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="city_dup"
              DTS:DTSID="{96CC3308-B548-4E7B-A091-87925967FE7E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="state_dup"
              DTS:DTSID="{542D23E9-33BD-4AEA-85AF-2EF900EFDC3B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="zip_dup"
              DTS:DTSID="{39BC29BB-7E6C-479F-8F87-D46A31AFB317}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="vehicle_year_dup"
              DTS:DTSID="{A9B87483-4EC7-4742-93E0-2AC383C1E132}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="VEHICLE_make_dup"
              DTS:DTSID="{A7A026F3-8171-4682-B092-F40375626D29}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="VEHICLE_model_dup"
              DTS:DTSID="{10A2924A-A37A-4454-86B8-924BB6CC3214}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="agent_name_dup"
              DTS:DTSID="{545CB57A-43D5-4113-8AC6-FD7A0EB948C6}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="company_name_dup"
              DTS:DTSID="{0B0435F5-33B6-4594-BD6D-40850D16EB80}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="coverage_dup"
              DTS:DTSID="{E0307B2B-1B38-46C6-8E6C-6750504CA583}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="company_cancel_date_dup"
              DTS:DTSID="{8B4D2FC2-950A-4D94-8E8C-9F52463E3647}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="cancel_date_dup"
              DTS:DTSID="{49CD68D5-9FA0-4818-AE97-15D8608B3C22}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="eff_date_dup"
              DTS:DTSID="{2766028C-54C2-4E81-8A20-4B048E9636AC}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="create_date_dup"
              DTS:DTSID="{3DEDEDFB-6105-4993-9498-5C9A3CB2D22D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="policy_num_dup"
              DTS:DTSID="{0C5AD6F5-3FB5-4712-99F1-C9893FCB6DA7}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="installments_dup"
              DTS:DTSID="{CB6A447A-8A08-43B8-A453-F1861D03ED83}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="payments_made_dup"
              DTS:DTSID="{1B1EA327-A341-477C-9717-7335646C0C08}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="payments_remaining_dup"
              DTS:DTSID="{82F3DAE2-3B03-46E6-A7D8-5D70FF17D55B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="phone_dup"
              DTS:DTSID="{BA8DF374-6108-4F43-9465-80E52218711D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="ACCT_NUM_dup"
              DTS:DTSID="{C5BE939C-185A-43C9-B997-EC3831ADC215}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Dup_Reason"
              DTS:DTSID="{32039BD7-2920-41FD-B6E8-7CEF47A590CD}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Different Address File 3 or More]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{B115AD74-DB14-48B6-83D2-81625138C5D3}"
      DTS:ObjectName="Different Address File 3 or More">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="\\plinkdc1\home\IT\Development\Data Validation\Different_Address_Dup_Vin3.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="vin_dup"
              DTS:DTSID="{7AA5961D-4105-4DF7-B2F0-12EB9A263E22}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="ACCT_NUM_dup"
              DTS:DTSID="{B64285DF-4FA8-4AEE-B041-C5D48BACA084}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="status_dup"
              DTS:DTSID="{6EF07988-70CF-4736-8A01-0106DF263F67}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="insured_dup"
              DTS:DTSID="{ACEA4C7F-0DEC-4EF0-A6E3-BACB13F87CE6}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="address1_dup"
              DTS:DTSID="{984F2421-BD71-4B08-B114-3DA42877CAD3}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="address2_dup"
              DTS:DTSID="{498952BC-0836-497E-AE93-736D77E476E1}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="city_dup"
              DTS:DTSID="{19E846DF-F810-4ECC-9022-5A260824C649}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="state_dup"
              DTS:DTSID="{CBFC6682-FBEA-4EE5-AAAC-ECCF70D44650}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="zip_dup"
              DTS:DTSID="{3FC692DA-700C-42C6-9E1B-3C039C6FB2A9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="vehicle_year_dup"
              DTS:DTSID="{C4138ADF-C4B6-41B6-A7C4-31E3E1DB72C6}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="VEHICLE_Make_dup"
              DTS:DTSID="{9BEA714B-8340-4061-AD38-33BD68B8A142}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="VEHICLE_Model_dup"
              DTS:DTSID="{A8904C12-034C-4E2E-8FF5-94526442FFEC}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="agent_name_dup"
              DTS:DTSID="{AC1F40FF-79A9-4B45-8A54-AC01FDDACB7A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="company_name_dup"
              DTS:DTSID="{548EE7CF-BBC3-4274-8807-B7E57B8B480F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="coverage_dup"
              DTS:DTSID="{CEE55C25-5F19-4704-BA78-D194ACDAD091}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="company_cancel_date_dup"
              DTS:DTSID="{AEB5E772-6C14-4D2B-82CD-27C8A4825694}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="cancel_date_dup"
              DTS:DTSID="{3D9CEE9C-E7B8-4EF2-8695-49F63DC66296}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="eff_date_dup"
              DTS:DTSID="{8044782F-7E63-40A4-9F88-B360FC80AAEE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="create_date_dup"
              DTS:DTSID="{17E3A963-F2CD-45ED-AC47-0D0500D89E81}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="policy_num_dup"
              DTS:DTSID="{7499AFC6-71D0-4741-A9A5-EFE20AF904B0}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="installments_dup"
              DTS:DTSID="{2951634A-543C-4079-A5C0-2D39947FDD84}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="payments_made_dup"
              DTS:DTSID="{60334A35-0366-4B9A-9C91-E4D534260815}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="payments_remaining_dup"
              DTS:DTSID="{2EB722CB-4561-4A65-8945-DF8F4DA49206}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="phone_dup"
              DTS:DTSID="{C03E2121-12B3-403A-B43C-147A9A7EBD07}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Dup Reason"
              DTS:DTSID="{40703E89-56CD-40BE-A8E8-BC76CB05E073}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Different Seller File]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{CCB6324A-05E9-411A-8A78-2DFBDDC4A670}"
      DTS:ObjectName="Different Seller File">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="\\plinkdc1\home\IT\Development\Data Validation\Different_Seller_Dup_Vin2.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="vin_dup"
              DTS:DTSID="{6A54F0AF-306F-4454-8816-55B6C13F0A59}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="status_dup"
              DTS:DTSID="{451BC4FA-2FA5-438B-9E45-74D752D93F79}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="insured_dup"
              DTS:DTSID="{8054C517-36A4-474D-AD89-62573281AF79}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="address1_dup"
              DTS:DTSID="{D1B39F5A-0275-4518-9BA4-D9A2D75D0F7A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="address2_dup"
              DTS:DTSID="{0E2528A2-08F0-48CC-9694-A21A158F68BC}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="city_dup"
              DTS:DTSID="{DD656C11-E634-48BC-BEC3-A8D229F99849}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="state_dup"
              DTS:DTSID="{2190AD35-4549-43B9-8BE0-062E9B6416CC}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="zip_dup"
              DTS:DTSID="{284DB99F-1686-4F4A-B630-FFA89E687FDE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="vehicle_year_dup"
              DTS:DTSID="{70C9F0BF-0514-4C1C-B2CB-323EF66248D9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="VEHICLE_make_dup"
              DTS:DTSID="{423CBFBE-1863-46DD-9C54-C8BB2369400D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="VEHICLE_model_dup"
              DTS:DTSID="{8CC961C7-537B-4B80-B94B-029B2C0FB626}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="agent_name_dup"
              DTS:DTSID="{45B8A5A9-316D-4F12-BD3F-725E08DA1793}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="company_name_dup"
              DTS:DTSID="{308FE61A-4234-4514-A554-956E48362E26}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="coverage_dup"
              DTS:DTSID="{7A8BA56B-B46E-4147-9783-307F52A1D31B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="company_cancel_date_dup"
              DTS:DTSID="{536C487C-DB4B-453B-A971-1AE8A7BDAB07}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="cancel_date_dup"
              DTS:DTSID="{94B9023D-218F-48A0-95F9-E2C5486E730A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="eff_date_dup"
              DTS:DTSID="{60357476-756C-4A53-809C-2B34829045EC}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="create_date_dup"
              DTS:DTSID="{490CB44D-47AE-42DB-9F9F-2397E2591ADA}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="policy_num_dup"
              DTS:DTSID="{606FB073-C037-4C00-903B-CF449E5CDD0F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="installments_dup"
              DTS:DTSID="{923B4E4E-5355-4527-AB62-15E7CB1F65CD}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="payments_made_dup"
              DTS:DTSID="{8A358E62-06EC-4392-A521-32530AA53908}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="payments_remaining_dup"
              DTS:DTSID="{C0602205-B169-4110-BEC7-23AF189C9A60}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="phone_dup"
              DTS:DTSID="{46B49107-7A6F-44BF-B283-766BAEFF41D2}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="ACCT_NUM_dup"
              DTS:DTSID="{8D8B6803-EDEE-4C0A-A299-86D85ED61653}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Dup_Reason"
              DTS:DTSID="{667A9914-0F62-469C-8DB9-5220E8DEB98C}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Different Seller File 3 or More]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{DBCCFC88-269C-4BCE-AC26-FD6BF58CA857}"
      DTS:ObjectName="Different Seller File 3 or More">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="\\plinkdc1\home\IT\Development\Data Validation\Different_Seller_Dup_Vin3.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="vin_dup"
              DTS:DTSID="{A2B2799F-AD2B-4313-AB06-527F81C5E23C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="ACCT_NUM_dup"
              DTS:DTSID="{4C665C86-1008-469F-A1ED-CC4372C4BBFD}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="status_dup"
              DTS:DTSID="{BF89F70F-6FC8-4213-8E54-D8998D1AC93C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="insured_dup"
              DTS:DTSID="{1CF53C69-407D-41EC-BA62-61E7A04E95B3}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="address1_dup"
              DTS:DTSID="{EE69A314-DAAB-4032-B699-BCF096F83981}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="address2_dup"
              DTS:DTSID="{34793D14-804A-42F4-A7DD-F459AB0890CE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="city_dup"
              DTS:DTSID="{65F7AFEA-6D0A-4AE8-82F2-FDA4BC2D7D7E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="state_dup"
              DTS:DTSID="{94786211-3336-4D84-91D4-E0269361B2D7}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="zip_dup"
              DTS:DTSID="{2D6EB076-12E5-433D-A7F9-07EF86E0EC5B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="vehicle_year_dup"
              DTS:DTSID="{30467B2A-AA05-415A-9161-333CF02365C6}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="VEHICLE_Make_dup"
              DTS:DTSID="{E162E630-0BAE-43DC-89E7-E5F71869611C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="VEHICLE_Model_dup"
              DTS:DTSID="{7564C572-42F5-4EE8-A1A0-9F9116571B19}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="agent_name_dup"
              DTS:DTSID="{36DE3132-8B70-4447-92A7-FD8E9330E02F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="company_name_dup"
              DTS:DTSID="{3064886E-9977-43E6-BE41-8EB3DF9C6DBC}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="coverage_dup"
              DTS:DTSID="{B2BB5470-055C-42BA-9B40-25F1883308EC}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="company_cancel_date_dup"
              DTS:DTSID="{43870896-E538-4871-9575-33BC98A0E130}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="cancel_date_dup"
              DTS:DTSID="{F1D1CCBA-503C-4057-9848-91A24EDAC105}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="eff_date_dup"
              DTS:DTSID="{41856376-8A9B-46A1-81E1-31A422EC8B14}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="create_date_dup"
              DTS:DTSID="{4BA8C2D3-1BBD-46F6-BA4A-CCE6A774FAF2}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="policy_num_dup"
              DTS:DTSID="{71D7E4A4-8C42-479A-83D5-FB701AC910B7}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="installments_dup"
              DTS:DTSID="{370875FC-6C03-4DDC-AB84-3AA1DA208633}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="payments_made_dup"
              DTS:DTSID="{5ECD86E7-F4E6-48F2-BBC2-3D1B1D0A4BCA}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="payments_remaining_dup"
              DTS:DTSID="{82B5E89D-288D-462B-A010-1C8B86127BCA}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="phone_dup"
              DTS:DTSID="{32472AA7-4C1A-47B7-9F1E-D729F573ABF3}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Dup Reason"
              DTS:DTSID="{DE19F004-9E71-4FF0-B1B8-CC9626FAB7E9}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[PLINKDB1.WF_AccountNet]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{4DD77B27-B207-4C95-88FD-5563F562EDE7}"
      DTS:ObjectName="PLINKDB1.WF_AccountNet">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=PLINKDB1;Initial Catalog=WF_AccountNet;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Same Seller File 3 Or More]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{78EEADF5-9D6B-4D1F-A7AB-36FA4FED11AD}"
      DTS:ObjectName="Same Seller File 3 Or More">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="\\plinkdc1\home\IT\Development\Data Validation\Same_Seller_Dup_Vin3.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="vin_dup"
              DTS:DTSID="{435E95F3-B9B3-4826-B823-7F968F55B1A8}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="ACCT_NUM_dup"
              DTS:DTSID="{3AE165ED-9113-4E69-A8BA-8ECD8AA2E14D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="status_dup"
              DTS:DTSID="{4DBF5252-6CB8-4FF0-9043-5334320DD25D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="insured_dup"
              DTS:DTSID="{D8D12A6E-B9D9-4409-921A-CAC22D385378}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="address1_dup"
              DTS:DTSID="{EC5BC136-60DB-41C0-B483-37139C4255BF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="address2_dup"
              DTS:DTSID="{E6DF3BE1-E795-4A06-99CB-6640E057A136}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="city_dup"
              DTS:DTSID="{8333D083-383D-4B0E-B42E-E8D6179F2C81}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="state_dup"
              DTS:DTSID="{688AC772-3603-40CA-BD5C-6FA2AB99F3C4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="zip_dup"
              DTS:DTSID="{6A4758C6-B405-4163-B4B9-C3ECE1CDCDEC}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="vehicle_year_dup"
              DTS:DTSID="{C1E5355C-C074-4AC7-952E-86BBD33728DF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="VEHICLE_Make_dup"
              DTS:DTSID="{FABB8625-E975-46D9-A2BF-761D1F7F91B4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="VEHICLE_Model_dup"
              DTS:DTSID="{D7A2D5E1-41BA-43FA-8196-792409CAD803}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="agent_name_dup"
              DTS:DTSID="{BF9CBB4F-35A9-4BB4-8731-2C3E863A9FF1}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="company_name_dup"
              DTS:DTSID="{904B73A9-D8AB-4D4B-926D-B9CD240E1224}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="coverage_dup"
              DTS:DTSID="{C1F320B6-4607-4496-88FB-89446F8D8510}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="company_cancel_date_dup"
              DTS:DTSID="{87DBDAD1-B1F3-474D-96A7-C6624308647E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="cancel_date_dup"
              DTS:DTSID="{536C2609-EB22-4FF4-A9A5-B5D443F7450A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="eff_date_dup"
              DTS:DTSID="{416F5374-5832-4134-8E78-A2706C1CBE3C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="create_date_dup"
              DTS:DTSID="{F14CA055-3AFF-43A7-9FCA-CA9DD03C2058}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="policy_num_dup"
              DTS:DTSID="{4DC0D81F-5E57-4DA4-A9C9-DA02F37F7907}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="installments_dup"
              DTS:DTSID="{18857A98-B462-4824-8D82-C559EBF8F838}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="payments_made_dup"
              DTS:DTSID="{AF5E82C9-479F-4A81-A9EF-ADF0878AEF4D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="payments_remaining_dup"
              DTS:DTSID="{BDAB0846-F2DD-4765-9E05-5B285D3FF2FF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="phone_dup"
              DTS:DTSID="{FE41ACBC-5C29-4616-9E0B-4BC6C355BE26}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Dup Reason"
              DTS:DTSID="{90FFD1C5-DC75-4A55-A23D-A5FD384CCFDA}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Same Seller Records]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{C5C64FE6-583B-4926-A856-F0ECE48A4CBE}"
      DTS:ObjectName="Same Seller Records">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="\\plinkdc1\home\IT\Development\Data Validation\Same_Seller_Dup_Vin2.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="vin_dup"
              DTS:DTSID="{A4F49597-3876-4EDB-8F0B-A732B3D7C682}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="status_dup"
              DTS:DTSID="{6C50DEC9-C254-4CE1-862D-45A57CD9E34D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="insured_dup"
              DTS:DTSID="{433EFE59-87ED-43DE-B92D-1291A7118B45}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="address1_dup"
              DTS:DTSID="{C4B1BB0B-2788-4135-8FE7-B82616F4D30E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="address2_dup"
              DTS:DTSID="{FEBE4842-07B3-49D2-90E8-3D72C3B45361}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="city_dup"
              DTS:DTSID="{527463EA-94AC-4587-8E55-0513CF34D8AE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="state_dup"
              DTS:DTSID="{69206D43-CF61-4BF7-88B1-1908E3ADE0A0}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="zip_dup"
              DTS:DTSID="{F8F416F9-B906-4B06-9F81-183EAE0592CD}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="vehicle_year_dup"
              DTS:DTSID="{A2333020-4C7D-48E3-80FD-802F2B4C87F3}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="VEHICLE_make_dup"
              DTS:DTSID="{B1BD5666-F82E-4EA6-B1F1-12673343B285}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="VEHICLE_model_dup"
              DTS:DTSID="{D526DBDA-2D68-4485-8B37-70FDA851841B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="agent_name_dup"
              DTS:DTSID="{F7376029-7D6D-4042-9568-B1E7E1268BB8}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="company_name_dup"
              DTS:DTSID="{4C92DF6E-EC9B-4535-A3A7-6D6B8A1B4A47}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="coverage_dup"
              DTS:DTSID="{1E24D615-C80E-4ABB-B2AD-AEBD95E0ACF3}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="company_cancel_date_dup"
              DTS:DTSID="{331182FF-2674-42F0-A79C-92C2B72C9519}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="cancel_date_dup"
              DTS:DTSID="{AC4DB184-15A1-416B-A376-C05CDB0E64DD}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="eff_date_dup"
              DTS:DTSID="{24C9F808-C102-4375-ABA9-3F98F0D1BC94}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="create_date_dup"
              DTS:DTSID="{98EAE76F-D644-4FB3-90BB-6C652E989A2B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="policy_num_dup"
              DTS:DTSID="{52E84989-DAC3-4AC4-A17E-F777EA3EE0B7}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="installments_dup"
              DTS:DTSID="{37DB8D61-6EA6-4FE5-A5A1-B8E387B58F1B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="payments_made_dup"
              DTS:DTSID="{7DB60ADA-C473-4569-8242-2A9EC19BB4AA}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="payments_remaining_dup"
              DTS:DTSID="{673C25A3-10AB-489C-ABFD-2C239B854BAD}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="phone_dup"
              DTS:DTSID="{97E16524-BDE2-42EE-9EC0-869713439302}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="ACCT_NUM_dup"
              DTS:DTSID="{5CA606B3-9F77-41BD-B6AE-704A7A798D8C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Dup_Reason"
              DTS:DTSID="{2ADA0A61-99B2-4686-A834-E0D7B03CDB6E}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1330E27B-C263-408E-B192-8D2599F2129E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Dup_Vin_Query_Two">
      <DTS:VariableValue
        DTS:DataType="8">select w3.vin, v2.ACCT_NUM, asd.description as status, v2.insured, v2.address1, v2.address2, v2.city, v2.state, v2.zip, w3.vehicle_year, w3.VEHICLE_Make, w3.VEHICLE_Model, v2.agent_name, p2.company_name, p2.coverage, p2.company_cancel_date, c2.cancel_date, p2.eff_date, v2.create_date, p2.policy_num, c2.installments, c2.payments_made, c2.payments_remaining, a2.phone  from(  select distinct x.vin from( select w.vin,count(*) as total from a_ascii_war w with(noexpand)  Inner join a_ascii_vit v with(noexpand) on w.acct_num=v.acct_num   INNER JOIN Account_Status [as] with(nolock) on w.acct_num = [as].acct_num where [As].status_id in(1,2,3) and v.create_date&lt;= '10/5/2017' group by  w.vin having count(vin)=2) as x  inner join a_ascii_war w2 on w2.vin=x.vin inner join a_ascii_vit with(noexpand) on a_ascii_vit.acct_num=w2.acct_num   where  a_ascii_vit.create_date between '9/29/2017' and '10/5/2017') as y  inner join a_ascii_war w3 with(noexpand) on w3.vin=y.vin inner join a_ascii_vit v2 with(noexpand) on v2.acct_num=w3.acct_num inner join a_ascii_con c2 with(noexpand) on c2.acct_num=w3.acct_num inner join a_ascii_pol p2 with(noexpand) on p2.acct_num=w3.acct_num inner join ascii_agt a2 with(nolock) on v2.business=a2.business and v2.agent_code = a2.code INNER JOIN Account_Status sts with(nolock) on v2.acct_num = sts.acct_num inner join AccountStatusDescription asd with(nolock) ON sts.Status_ID = asd.ID where sts.status_id not in(5,7) and create_date&lt;= '10/5/2017'  order by w3.vin</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BAFE3AB9-4332-4F0D-84E8-5276F808F1AD}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Dup_Vin_Three_or_More">
      <DTS:VariableValue
        DTS:DataType="8">select w3.vin, v2.ACCT_NUM, asd.description as status, v2.insured, v2.address1, v2.address2, v2.city, v2.state, v2.zip, w3.vehicle_year, w3.VEHICLE_Make, w3.VEHICLE_Model, v2.agent_name, p2.company_name, p2.coverage, p2.company_cancel_date, c2.cancel_date, p2.eff_date, v2.create_date, p2.policy_num, c2.installments, c2.payments_made, c2.payments_remaining, a2.phone  from(  select distinct x.vin from( select w.vin,count(*) as total from a_ascii_war w with(noexpand)  Inner join a_ascii_vit v with(noexpand) on w.acct_num=v.acct_num   INNER JOIN Account_Status [as] with(nolock) on w.acct_num = [as].acct_num where [As].status_id in(1,2,3) and v.create_date&lt;= '10/5/2017' group by  w.vin having count(vin)&gt;2) as x  inner join a_ascii_war w2 on w2.vin=x.vin inner join a_ascii_vit with(noexpand) on a_ascii_vit.acct_num=w2.acct_num   where  a_ascii_vit.create_date between '9/29/2017' and '10/5/2017') as y  inner join a_ascii_war w3 with(noexpand) on w3.vin=y.vin inner join a_ascii_vit v2 with(noexpand) on v2.acct_num=w3.acct_num inner join a_ascii_con c2 with(noexpand) on c2.acct_num=w3.acct_num inner join a_ascii_pol p2 with(noexpand) on p2.acct_num=w3.acct_num inner join ascii_agt a2 with(nolock) on v2.business=a2.business and v2.agent_code = a2.code INNER JOIN Account_Status sts with(nolock) on v2.acct_num = sts.acct_num inner join AccountStatusDescription asd with(nolock) ON sts.Status_ID = asd.ID where sts.status_id not in(5,7) and create_date&lt;= '10/5/2017'  order by w3.vin</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Create Group 2 Dup Vin Excel"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{5781F542-19FD-4CBB-BC8B-0754ACF74446}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create Group 2 Dup Vin Excel"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Create Group 2 Dup Vin Excel\Conditional Split"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Conditional Split"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Create Group 2 Dup Vin Excel\Conditional Split.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Conditional Split.Inputs[Conditional Split Input].Columns[Dup_Reason]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="Dup_Reason"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Dup_Reason]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create Group 2 Dup Vin Excel\Conditional Split.Outputs[Same Seller]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Same Seller"
                  synchronousInputId="Package\Create Group 2 Dup Vin Excel\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Dup_Reason]} == "Same Seller"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">Dup_Reason == "Same Seller"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Create Group 2 Dup Vin Excel\Conditional Split.Outputs[Not Same Seller]"
                  description="Output 2 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Not Same Seller"
                  synchronousInputId="Package\Create Group 2 Dup Vin Excel\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Dup_Reason]} == "Different Seller"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">Dup_Reason == "Different Seller"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">1</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Create Group 2 Dup Vin Excel\Conditional Split.Outputs[Different Address]"
                  description="Output 3 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Different Address"
                  synchronousInputId="Package\Create Group 2 Dup Vin Excel\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Dup_Reason]} == "Different Address"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">Dup_Reason == "Different Address"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">2</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Create Group 2 Dup Vin Excel\Conditional Split.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Create Group 2 Dup Vin Excel\Conditional Split.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Create Group 2 Dup Vin Excel\Conditional Split.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Create Group 2 Dup Vin Excel\Conditional Split.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create Group 2 Dup Vin Excel\Different Address"
              componentClassID="Microsoft.FlatFileDestination"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Flat File Destination"
              localeId="1033"
              name="Different Address">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">true</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
              </properties>
              <connections>
                <connection
                  refId="Package\Create Group 2 Dup Vin Excel\Different Address.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Different Address File]"
                  connectionManagerRefId="Package.ConnectionManagers[Different Address File]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[vin_dup]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="vin_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[vin_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[vin_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[status_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="status_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[status_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[status_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[insured_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="insured_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[insured_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[insured_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[address1_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="address1_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[address1_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[address1_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[address2_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="address2_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[address2_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[address2_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[city_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="city_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[city_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[city_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[state_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="state_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[state_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[state_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[zip_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="zip_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[zip_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[zip_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[vehicle_year_dup]"
                      cachedDataType="i4"
                      cachedName="vehicle_year_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[vehicle_year_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[vehicle_year_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[VEHICLE_make_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="VEHICLE_make_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[VEHICLE_make_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[VEHICLE_make_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[VEHICLE_model_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="VEHICLE_model_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[VEHICLE_model_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[VEHICLE_model_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[agent_name_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="agent_name_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[agent_name_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[agent_name_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[company_name_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="company_name_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[company_name_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[company_name_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[coverage_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="coverage_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[coverage_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[coverage_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[company_cancel_date_dup]"
                      cachedDataType="dbTimeStamp"
                      cachedName="company_cancel_date_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[company_cancel_date_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[company_cancel_date_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[cancel_date_dup]"
                      cachedDataType="dbTimeStamp"
                      cachedName="cancel_date_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[cancel_date_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[cancel_date_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[eff_date_dup]"
                      cachedDataType="dbTimeStamp"
                      cachedName="eff_date_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[eff_date_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[eff_date_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[create_date_dup]"
                      cachedDataType="dbTimeStamp"
                      cachedName="create_date_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[create_date_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[create_date_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[policy_num_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="policy_num_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[policy_num_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[policy_num_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[installments_dup]"
                      cachedDataType="i4"
                      cachedName="installments_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[installments_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[installments_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[payments_made_dup]"
                      cachedDataType="i4"
                      cachedName="payments_made_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[payments_made_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[payments_made_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[payments_remaining_dup]"
                      cachedDataType="i4"
                      cachedName="payments_remaining_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[payments_remaining_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[payments_remaining_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[phone_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="phone_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[phone_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[phone_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[ACCT_NUM_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="ACCT_NUM_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[ACCT_NUM_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[ACCT_NUM_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[Dup_Reason]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="Dup_Reason"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Dup_Reason]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Dup_Reason]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[vin_dup]"
                      dataType="wstr"
                      length="50"
                      name="vin_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[status_dup]"
                      dataType="wstr"
                      length="150"
                      name="status_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[insured_dup]"
                      dataType="wstr"
                      length="150"
                      name="insured_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[address1_dup]"
                      dataType="wstr"
                      length="150"
                      name="address1_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[address2_dup]"
                      dataType="wstr"
                      length="150"
                      name="address2_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[city_dup]"
                      dataType="wstr"
                      length="150"
                      name="city_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[state_dup]"
                      dataType="wstr"
                      length="150"
                      name="state_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[zip_dup]"
                      dataType="wstr"
                      length="150"
                      name="zip_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[vehicle_year_dup]"
                      dataType="i4"
                      name="vehicle_year_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[VEHICLE_make_dup]"
                      dataType="wstr"
                      length="150"
                      name="VEHICLE_make_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[VEHICLE_model_dup]"
                      dataType="wstr"
                      length="150"
                      name="VEHICLE_model_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[agent_name_dup]"
                      dataType="wstr"
                      length="150"
                      name="agent_name_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[company_name_dup]"
                      dataType="wstr"
                      length="150"
                      name="company_name_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[coverage_dup]"
                      dataType="wstr"
                      length="150"
                      name="coverage_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[company_cancel_date_dup]"
                      dataType="dbTimeStamp"
                      name="company_cancel_date_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[cancel_date_dup]"
                      dataType="dbTimeStamp"
                      name="cancel_date_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[eff_date_dup]"
                      dataType="dbTimeStamp"
                      name="eff_date_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[create_date_dup]"
                      dataType="dbTimeStamp"
                      name="create_date_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[policy_num_dup]"
                      dataType="wstr"
                      length="150"
                      name="policy_num_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[installments_dup]"
                      dataType="i4"
                      name="installments_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[payments_made_dup]"
                      dataType="i4"
                      name="payments_made_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[payments_remaining_dup]"
                      dataType="i4"
                      name="payments_remaining_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[phone_dup]"
                      dataType="wstr"
                      length="150"
                      name="phone_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[ACCT_NUM_dup]"
                      dataType="wstr"
                      length="150"
                      name="ACCT_NUM_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Dup_Reason]"
                      dataType="wstr"
                      length="150"
                      name="Dup_Reason" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Create Group 2 Dup Vin Excel\Different Seller File"
              componentClassID="Microsoft.FlatFileDestination"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Flat File Destination"
              localeId="1033"
              name="Different Seller File">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">true</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
              </properties>
              <connections>
                <connection
                  refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Different Seller File]"
                  connectionManagerRefId="Package.ConnectionManagers[Different Seller File]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[vin_dup]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="vin_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[vin_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[vin_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[status_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="status_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[status_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[status_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[insured_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="insured_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[insured_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[insured_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[address1_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="address1_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[address1_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[address1_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[address2_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="address2_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[address2_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[address2_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[city_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="city_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[city_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[city_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[state_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="state_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[state_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[state_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[zip_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="zip_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[zip_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[zip_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[vehicle_year_dup]"
                      cachedDataType="i4"
                      cachedName="vehicle_year_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[vehicle_year_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[vehicle_year_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[VEHICLE_make_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="VEHICLE_make_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[VEHICLE_make_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[VEHICLE_make_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[VEHICLE_model_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="VEHICLE_model_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[VEHICLE_model_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[VEHICLE_model_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[agent_name_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="agent_name_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[agent_name_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[agent_name_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[company_name_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="company_name_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[company_name_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[company_name_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[coverage_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="coverage_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[coverage_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[coverage_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[company_cancel_date_dup]"
                      cachedDataType="dbTimeStamp"
                      cachedName="company_cancel_date_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[company_cancel_date_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[company_cancel_date_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[cancel_date_dup]"
                      cachedDataType="dbTimeStamp"
                      cachedName="cancel_date_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[cancel_date_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[cancel_date_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[eff_date_dup]"
                      cachedDataType="dbTimeStamp"
                      cachedName="eff_date_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[eff_date_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[eff_date_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[create_date_dup]"
                      cachedDataType="dbTimeStamp"
                      cachedName="create_date_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[create_date_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[create_date_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[policy_num_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="policy_num_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[policy_num_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[policy_num_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[installments_dup]"
                      cachedDataType="i4"
                      cachedName="installments_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[installments_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[installments_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[payments_made_dup]"
                      cachedDataType="i4"
                      cachedName="payments_made_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[payments_made_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[payments_made_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[payments_remaining_dup]"
                      cachedDataType="i4"
                      cachedName="payments_remaining_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[payments_remaining_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[payments_remaining_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[phone_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="phone_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[phone_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[phone_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[ACCT_NUM_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="ACCT_NUM_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[ACCT_NUM_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[ACCT_NUM_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[Dup_Reason]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="Dup_Reason"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Dup_Reason]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Dup_Reason]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[vin_dup]"
                      dataType="wstr"
                      length="50"
                      name="vin_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[status_dup]"
                      dataType="wstr"
                      length="150"
                      name="status_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[insured_dup]"
                      dataType="wstr"
                      length="150"
                      name="insured_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[address1_dup]"
                      dataType="wstr"
                      length="150"
                      name="address1_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[address2_dup]"
                      dataType="wstr"
                      length="150"
                      name="address2_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[city_dup]"
                      dataType="wstr"
                      length="150"
                      name="city_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[state_dup]"
                      dataType="wstr"
                      length="150"
                      name="state_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[zip_dup]"
                      dataType="wstr"
                      length="150"
                      name="zip_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[vehicle_year_dup]"
                      dataType="i4"
                      name="vehicle_year_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[VEHICLE_make_dup]"
                      dataType="wstr"
                      length="150"
                      name="VEHICLE_make_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[VEHICLE_model_dup]"
                      dataType="wstr"
                      length="150"
                      name="VEHICLE_model_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[agent_name_dup]"
                      dataType="wstr"
                      length="150"
                      name="agent_name_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[company_name_dup]"
                      dataType="wstr"
                      length="150"
                      name="company_name_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[coverage_dup]"
                      dataType="wstr"
                      length="150"
                      name="coverage_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[company_cancel_date_dup]"
                      dataType="dbTimeStamp"
                      name="company_cancel_date_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[cancel_date_dup]"
                      dataType="dbTimeStamp"
                      name="cancel_date_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[eff_date_dup]"
                      dataType="dbTimeStamp"
                      name="eff_date_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[create_date_dup]"
                      dataType="dbTimeStamp"
                      name="create_date_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[policy_num_dup]"
                      dataType="wstr"
                      length="150"
                      name="policy_num_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[installments_dup]"
                      dataType="i4"
                      name="installments_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[payments_made_dup]"
                      dataType="i4"
                      name="payments_made_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[payments_remaining_dup]"
                      dataType="i4"
                      name="payments_remaining_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[phone_dup]"
                      dataType="wstr"
                      length="150"
                      name="phone_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[ACCT_NUM_dup]"
                      dataType="wstr"
                      length="150"
                      name="ACCT_NUM_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Dup_Reason]"
                      dataType="wstr"
                      length="150"
                      name="Dup_Reason" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get Dup Vins in Groups of Two"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select w3.vin, w3.business, v2.acct_num, asd.description as status, v2.insured, v2.address1, v2.address2, v2.city, v2.state, v2.zip, w3.vehicle_year, w3.VEHICLE_Make, w3.VEHICLE_Model, v2.agent_name, p2.company_name, p2.coverage, p2.company_cancel_date, c2.cancel_date, p2.eff_date, v2.create_date, p2.policy_num, c2.installments, c2.payments_made, c2.payments_remaining, a2.phone from(select distinct x.vin from(select w.vin, count(*) as total from a_ascii_war w with(noexpand) Inner join a_ascii_vit v with(noexpand) on w.acct_num = v.acct_num INNER JOIN Account_Status[as] with(nolock) on w.acct_num = [as].acct_num where [As].status_id in(1, 2, 3) and v.create_date &lt;= '10/9/2017' group by  W.VIN having count(vin) &gt; 2) as x inner join a_ascii_war w2 on w2.vin = x.vin inner join a_ascii_vit with(noexpand)on a_ascii_vit.acct_num = w2.acct_num where a_ascii_vit.create_date between '10/3/2017' and '10/9/2017') as y inner join a_ascii_war w3 with(noexpand) on w3.vin = y.vin inner join a_ascii_vit v2 with(noexpand) on v2.acct_num = w3.acct_num inner join a_ascii_con c2 with(noexpand) on c2.acct_num = w3.acct_num inner join a_ascii_pol p2 with(noexpand) on p2.acct_num = w3.acct_num inner join ascii_agt a2 with(nolock) on v2.business = a2.business and v2.agent_code = a2.code INNER JOIN Account_Status sts with(nolock) on v2.acct_num = sts.acct_num inner join AccountStatusDescription asd with(nolock) ON sts.Status_ID = asd.ID where sts.status_id not in(5,7) and create_date&lt;= '10/9/2017' order by w3.vin</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable">User::Dup_Vin_Query_Two</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[PLINKDB1.WF_AccountNet]"
                  connectionManagerRefId="Package.ConnectionManagers[PLINKDB1.WF_AccountNet]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[vin]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[vin]"
                      length="50"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[vin]"
                      name="vin"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[status]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[status]"
                      length="50"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[status]"
                      name="status"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[insured]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[insured]"
                      length="100"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[insured]"
                      name="insured"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[address1]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[address1]"
                      length="150"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[address1]"
                      name="address1"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[address2]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[address2]"
                      length="150"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[address2]"
                      name="address2"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[city]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[city]"
                      length="50"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[city]"
                      name="city"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[state]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[state]"
                      length="50"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[state]"
                      name="state"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[zip]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[zip]"
                      length="50"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[zip]"
                      name="zip"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[vehicle_year]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[vehicle_year]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[vehicle_year]"
                      name="vehicle_year"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[VEHICLE_Make]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[VEHICLE_Make]"
                      length="50"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[VEHICLE_Make]"
                      name="VEHICLE_Make"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[VEHICLE_Model]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[VEHICLE_Model]"
                      length="50"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[VEHICLE_Model]"
                      name="VEHICLE_Model"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[agent_name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[agent_name]"
                      length="100"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[agent_name]"
                      name="agent_name"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[company_name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[company_name]"
                      length="100"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[company_name]"
                      name="company_name"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[coverage]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[coverage]"
                      length="50"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[coverage]"
                      name="coverage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[company_cancel_date]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[company_cancel_date]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[company_cancel_date]"
                      name="company_cancel_date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[cancel_date]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[cancel_date]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[cancel_date]"
                      name="cancel_date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[eff_date]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[eff_date]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[eff_date]"
                      name="eff_date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[create_date]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[create_date]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[create_date]"
                      name="create_date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[policy_num]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[policy_num]"
                      length="50"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[policy_num]"
                      name="policy_num"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[installments]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[installments]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[installments]"
                      name="installments"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[payments_made]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[payments_made]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[payments_made]"
                      name="payments_made"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[payments_remaining]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[payments_remaining]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[payments_remaining]"
                      name="payments_remaining"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[phone]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[phone]"
                      length="50"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[phone]"
                      name="phone"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[ACCT_NUM]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[ACCT_NUM]"
                      length="10"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[ACCT_NUM]"
                      name="ACCT_NUM"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[vin]"
                      dataType="wstr"
                      length="50"
                      name="vin" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[status]"
                      dataType="wstr"
                      length="50"
                      name="status" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[insured]"
                      dataType="wstr"
                      length="100"
                      name="insured" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[address1]"
                      dataType="wstr"
                      length="150"
                      name="address1" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[address2]"
                      dataType="wstr"
                      length="150"
                      name="address2" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[city]"
                      dataType="wstr"
                      length="50"
                      name="city" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[state]"
                      dataType="wstr"
                      length="50"
                      name="state" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[zip]"
                      dataType="wstr"
                      length="50"
                      name="zip" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[vehicle_year]"
                      dataType="i4"
                      name="vehicle_year" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[VEHICLE_Make]"
                      dataType="wstr"
                      length="50"
                      name="VEHICLE_Make" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[VEHICLE_Model]"
                      dataType="wstr"
                      length="50"
                      name="VEHICLE_Model" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[agent_name]"
                      dataType="wstr"
                      length="100"
                      name="agent_name" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[company_name]"
                      dataType="wstr"
                      length="100"
                      name="company_name" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[coverage]"
                      dataType="wstr"
                      length="50"
                      name="coverage" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[company_cancel_date]"
                      dataType="dbTimeStamp"
                      name="company_cancel_date" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[cancel_date]"
                      dataType="dbTimeStamp"
                      name="cancel_date" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[eff_date]"
                      dataType="dbTimeStamp"
                      name="eff_date" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[create_date]"
                      dataType="dbTimeStamp"
                      name="create_date" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[policy_num]"
                      dataType="wstr"
                      length="50"
                      name="policy_num" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[installments]"
                      dataType="i4"
                      name="installments" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[payments_made]"
                      dataType="i4"
                      name="payments_made" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[payments_remaining]"
                      dataType="i4"
                      name="payments_remaining" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[phone]"
                      dataType="wstr"
                      length="50"
                      name="phone" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[ACCT_NUM]"
                      dataType="wstr"
                      length="10"
                      name="ACCT_NUM" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[vin]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[vin]"
                      name="vin" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[ACCT_NUM]"
                      dataType="wstr"
                      length="10"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[ACCT_NUM]"
                      name="ACCT_NUM" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[status]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[status]"
                      name="status" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[insured]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[insured]"
                      name="insured" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[address1]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[address1]"
                      name="address1" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[address2]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[address2]"
                      name="address2" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[city]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[city]"
                      name="city" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[state]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[state]"
                      name="state" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[zip]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[zip]"
                      name="zip" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[vehicle_year]"
                      dataType="i4"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[vehicle_year]"
                      name="vehicle_year" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[VEHICLE_Make]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[VEHICLE_Make]"
                      name="VEHICLE_Make" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[VEHICLE_Model]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[VEHICLE_Model]"
                      name="VEHICLE_Model" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[agent_name]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[agent_name]"
                      name="agent_name" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[company_name]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[company_name]"
                      name="company_name" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[coverage]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[coverage]"
                      name="coverage" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[company_cancel_date]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[company_cancel_date]"
                      name="company_cancel_date" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[cancel_date]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[cancel_date]"
                      name="cancel_date" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[eff_date]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[eff_date]"
                      name="eff_date" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[create_date]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[create_date]"
                      name="create_date" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[policy_num]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[policy_num]"
                      name="policy_num" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[installments]"
                      dataType="i4"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[installments]"
                      name="installments" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[payments_made]"
                      dataType="i4"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[payments_made]"
                      name="payments_made" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[payments_remaining]"
                      dataType="i4"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[payments_remaining]"
                      name="payments_remaining" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[phone]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[phone]"
                      name="phone" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create Group 2 Dup Vin Excel\Same Seller File"
              componentClassID="Microsoft.FlatFileDestination"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Flat File Destination"
              localeId="1033"
              name="Same Seller File">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">true</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
              </properties>
              <connections>
                <connection
                  refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Same Seller Records]"
                  connectionManagerRefId="Package.ConnectionManagers[Same Seller Records]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[vin_dup]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="vin_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[vin_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[vin_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[status_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="status_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[status_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[status_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[insured_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="insured_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[insured_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[insured_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[address1_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="address1_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[address1_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[address1_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[address2_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="address2_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[address2_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[address2_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[city_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="city_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[city_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[city_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[state_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="state_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[state_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[state_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[zip_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="zip_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[zip_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[zip_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[vehicle_year_dup]"
                      cachedDataType="i4"
                      cachedName="vehicle_year_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[vehicle_year_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[vehicle_year_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[VEHICLE_make_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="VEHICLE_make_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[VEHICLE_make_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[VEHICLE_make_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[VEHICLE_model_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="VEHICLE_model_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[VEHICLE_model_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[VEHICLE_model_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[agent_name_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="agent_name_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[agent_name_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[agent_name_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[company_name_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="company_name_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[company_name_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[company_name_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[coverage_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="coverage_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[coverage_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[coverage_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[company_cancel_date_dup]"
                      cachedDataType="dbTimeStamp"
                      cachedName="company_cancel_date_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[company_cancel_date_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[company_cancel_date_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[cancel_date_dup]"
                      cachedDataType="dbTimeStamp"
                      cachedName="cancel_date_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[cancel_date_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[cancel_date_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[eff_date_dup]"
                      cachedDataType="dbTimeStamp"
                      cachedName="eff_date_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[eff_date_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[eff_date_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[create_date_dup]"
                      cachedDataType="dbTimeStamp"
                      cachedName="create_date_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[create_date_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[create_date_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[policy_num_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="policy_num_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[policy_num_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[policy_num_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[installments_dup]"
                      cachedDataType="i4"
                      cachedName="installments_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[installments_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[installments_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[payments_made_dup]"
                      cachedDataType="i4"
                      cachedName="payments_made_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[payments_made_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[payments_made_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[payments_remaining_dup]"
                      cachedDataType="i4"
                      cachedName="payments_remaining_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[payments_remaining_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[payments_remaining_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[phone_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="phone_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[phone_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[phone_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[ACCT_NUM_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="ACCT_NUM_dup"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[ACCT_NUM_dup]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[ACCT_NUM_dup]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Dup_Reason]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="Dup_Reason"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Dup_Reason]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Dup_Reason]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[vin_dup]"
                      dataType="wstr"
                      length="50"
                      name="vin_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[status_dup]"
                      dataType="wstr"
                      length="150"
                      name="status_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[insured_dup]"
                      dataType="wstr"
                      length="150"
                      name="insured_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[address1_dup]"
                      dataType="wstr"
                      length="150"
                      name="address1_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[address2_dup]"
                      dataType="wstr"
                      length="150"
                      name="address2_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[city_dup]"
                      dataType="wstr"
                      length="150"
                      name="city_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[state_dup]"
                      dataType="wstr"
                      length="150"
                      name="state_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[zip_dup]"
                      dataType="wstr"
                      length="150"
                      name="zip_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[vehicle_year_dup]"
                      dataType="i4"
                      name="vehicle_year_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[VEHICLE_make_dup]"
                      dataType="wstr"
                      length="150"
                      name="VEHICLE_make_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[VEHICLE_model_dup]"
                      dataType="wstr"
                      length="150"
                      name="VEHICLE_model_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[agent_name_dup]"
                      dataType="wstr"
                      length="150"
                      name="agent_name_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[company_name_dup]"
                      dataType="wstr"
                      length="150"
                      name="company_name_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[coverage_dup]"
                      dataType="wstr"
                      length="150"
                      name="coverage_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[company_cancel_date_dup]"
                      dataType="dbTimeStamp"
                      name="company_cancel_date_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[cancel_date_dup]"
                      dataType="dbTimeStamp"
                      name="cancel_date_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[eff_date_dup]"
                      dataType="dbTimeStamp"
                      name="eff_date_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[create_date_dup]"
                      dataType="dbTimeStamp"
                      name="create_date_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[policy_num_dup]"
                      dataType="wstr"
                      length="150"
                      name="policy_num_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[installments_dup]"
                      dataType="i4"
                      name="installments_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[payments_made_dup]"
                      dataType="i4"
                      name="payments_made_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[payments_remaining_dup]"
                      dataType="i4"
                      name="payments_remaining_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[phone_dup]"
                      dataType="wstr"
                      length="150"
                      name="phone_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[ACCT_NUM_dup]"
                      dataType="wstr"
                      length="150"
                      name="ACCT_NUM_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Dup_Reason]"
                      dataType="wstr"
                      length="150"
                      name="Dup_Reason" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Create Group 2 Dup Vin Excel\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="11">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Collections.Generic;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    List<RowList> ListofRows = new List<RowList>();
    int RowNum = 0;
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        RowList RowTemp = new RowList();

        if (RowNum != 0)RowTemp = ListofRows[RowNum - 1];
        else RowTemp.vin = "1";
        
        if(ListofRows.Count == 0 || !RowTemp.checkVin(Row.vin))
        {
            RowList tempRow = new RowList();
            updateRowInformation(tempRow, Row);

            ListofRows.Add(tempRow);
            RowNum++;
        }
        else if (RowTemp.checkVin(Row.vin) && RowTemp.checkSeller(Row.agentname))
        {
            bool addresscheck = false;
            RowList tempRow = new RowList();
            updateRowInformation(tempRow, Row);

            ListofRows.Add(tempRow);

            if (!RowTemp.checkAddress(Row.address1 + " " + Row.address2))
                addresscheck = true;

            foreach (RowList rowx in ListofRows)
            {
                if(addresscheck)
                    UpdateOutput(rowx, "Different Address");
                else
                    UpdateOutput(rowx, "Same Seller");
            }

            ListofRows.Clear();
            RowNum = 0;
        }
        else if (RowTemp.checkVin(Row.vin) && !RowTemp.checkSeller(Row.agentname))
        {
            bool addresscheck = false;
            RowList tempRow = new RowList();
            updateRowInformation(tempRow, Row);

            ListofRows.Add(tempRow);

            if (!RowTemp.checkAddress(Row.address1 + " " + Row.address2))
                addresscheck = true;
            
            foreach (RowList rowx in ListofRows)
            {
                if(addresscheck)
                    UpdateOutput(rowx, "Different Address");
                else
                    UpdateOutput(rowx, "Different Seller");
            }

            ListofRows.Clear();
            RowNum = 0;
        }
    }

    public class RowList
    {
        public string ACCTNUM = "";
        public string address1 = "";
        public string address2 = "";
        public string agentname = "";
        public DateTime canceldate = DateTime.Today;
        public string city = "";
        public DateTime companycanceldate = DateTime.Today;
        public string companyname = "";
        public string coverage = "";
        public DateTime createdate = DateTime.Today;
        public DateTime effdate = DateTime.Today;
        public int installments = 0;
        public string insured = "";
        public int paymentsmade = 0;
        public int paymentsremaining = 0;
        public string phone = "";
        public string policynum = "";
        public string state = "";
        public string status = "";
        public string VEHICLEMake = "";
        public string VEHICLEModel = "";
        public int vehicleyear = 0;
        public string vin = "";
        public string zip = "";

        public bool checkVin(string sentVin)
        {
            return sentVin == this.vin ? true : false;
        }

        public bool checkSeller(string sentSeller)
        {
            return sentSeller == this.agentname ? true : false;
        }

        public bool checkAddress(string sentAddress)
        {
            string combinedAddress = this.address1 + " " + this.address2;
            return sentAddress == combinedAddress ? true : false;
        }
    }

    public void updateRowInformation(RowList row, Input0Buffer input)
    {
        if (!input.ACCTNUM_IsNull)
            row.ACCTNUM = input.ACCTNUM;
        if (!input.address1_IsNull)
            row.address1 = input.address1;
        if (!input.address2_IsNull)
            row.address2 = input.address2;
        if (!input.agentname_IsNull)
            row.agentname = input.agentname;
        if (!input.canceldate_IsNull)
            row.canceldate = input.canceldate;
        if (!input.city_IsNull)
            row.city = input.city;
        if (!input.companycanceldate_IsNull)
            row.companycanceldate = input.companycanceldate;
        if (!input.companyname_IsNull)
            row.companyname = input.companyname;
        if (!input.coverage_IsNull)
            row.coverage = input.coverage;
        if (!input.createdate_IsNull)
            row.createdate = input.createdate;
        if (!input.effdate_IsNull)
            row.effdate = input.effdate;
        if (!input.installments_IsNull)
            row.installments = input.installments;
        if (!input.insured_IsNull)
            row.insured = input.insured;
        if (!input.paymentsmade_IsNull)
            row.paymentsmade = input.paymentsmade;
        if (!input.paymentsremaining_IsNull)
            row.paymentsremaining = input.paymentsremaining;
        if (!input.phone_IsNull)
            row.phone = input.phone;
        if (!input.policynum_IsNull)
            row.policynum = input.policynum;
        if (!input.state_IsNull)
            row.state = input.state;
        if (!input.status_IsNull)
            row.status = input.status;
        if (!input.VEHICLEMake_IsNull)
            row.VEHICLEMake = input.VEHICLEMake;
        if (!input.VEHICLEModel_IsNull)
            row.VEHICLEModel = input.VEHICLEModel;
        if (!input.vehicleyear_IsNull)
            row.vehicleyear = input.vehicleyear;
        if (!input.vin_IsNull)
            row.vin = input.vin;
        if (!input.zip_IsNull)
            row.zip = input.zip;
    }

    public void UpdateOutput(RowList rowx, string Reason)
    {
        Output0Buffer.AddRow();
        Output0Buffer.ACCTNUMdup = rowx.ACCTNUM;
        Output0Buffer.address1dup = rowx.address1;
        Output0Buffer.address2dup = rowx.address2;
        Output0Buffer.agentnamedup = rowx.agentname;
        Output0Buffer.canceldatedup = rowx.canceldate;
        Output0Buffer.citydup = rowx.city;
        Output0Buffer.companycanceldatedup = rowx.companycanceldate;
        Output0Buffer.companynamedup = rowx.companyname;
        Output0Buffer.coveragedup = rowx.coverage;
        Output0Buffer.createdatedup = rowx.createdate;
        Output0Buffer.effdatedup = rowx.effdate;
        Output0Buffer.installmentsdup = rowx.installments;
        Output0Buffer.insureddup = rowx.insured;
        Output0Buffer.paymentsmadedup = rowx.paymentsmade;
        Output0Buffer.paymentsremainingdup = rowx.paymentsremaining;
        Output0Buffer.phonedup = rowx.phone;
        Output0Buffer.policynumdup = rowx.policynum;
        Output0Buffer.statedup = rowx.state;
        Output0Buffer.statusdup = rowx.status;
        Output0Buffer.VEHICLEmakedup = rowx.VEHICLEMake;
        Output0Buffer.VEHICLEmodeldup = rowx.VEHICLEModel;
        Output0Buffer.vehicleyeardup = rowx.vehicleyear;
        Output0Buffer.vindup = rowx.vin;
        Output0Buffer.zipdup = rowx.zip;
        Output0Buffer.DupReason = Reason;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String vin
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool vin_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String status
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool status_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String insured
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool insured_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String address1
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool address1_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String address2
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool address2_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String city
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool city_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String state
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool state_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public String zip
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[7]);
        }
    }
    public bool zip_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    public Int32 vehicleyear
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[8]);
        }
    }
    public bool vehicleyear_IsNull
    {
        get
        {
            return IsNull(8);
        }
    }

    public String VEHICLEMake
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[9]);
        }
    }
    public bool VEHICLEMake_IsNull
    {
        get
        {
            return IsNull(9);
        }
    }

    public String VEHICLEModel
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[10]);
        }
    }
    public bool VEHICLEModel_IsNull
    {
        get
        {
            return IsNull(10);
        }
    }

    public String agentname
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[11]);
        }
    }
    public bool agentname_IsNull
    {
        get
        {
            return IsNull(11);
        }
    }

    public String companyname
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[12]);
        }
    }
    public bool companyname_IsNull
    {
        get
        {
            return IsNull(12);
        }
    }

    public String coverage
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[13]);
        }
    }
    public bool coverage_IsNull
    {
        get
        {
            return IsNull(13);
        }
    }

    public DateTime companycanceldate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[14]);
        }
    }
    public bool companycanceldate_IsNull
    {
        get
        {
            return IsNull(14);
        }
    }

    public DateTime canceldate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[15]);
        }
    }
    public bool canceldate_IsNull
    {
        get
        {
            return IsNull(15);
        }
    }

    public DateTime effdate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[16]);
        }
    }
    public bool effdate_IsNull
    {
        get
        {
            return IsNull(16);
        }
    }

    public DateTime createdate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[17]);
        }
    }
    public bool createdate_IsNull
    {
        get
        {
            return IsNull(17);
        }
    }

    public String policynum
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[18]);
        }
    }
    public bool policynum_IsNull
    {
        get
        {
            return IsNull(18);
        }
    }

    public Int32 installments
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[19]);
        }
    }
    public bool installments_IsNull
    {
        get
        {
            return IsNull(19);
        }
    }

    public Int32 paymentsmade
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[20]);
        }
    }
    public bool paymentsmade_IsNull
    {
        get
        {
            return IsNull(20);
        }
    }

    public Int32 paymentsremaining
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[21]);
        }
    }
    public bool paymentsremaining_IsNull
    {
        get
        {
            return IsNull(21);
        }
    }

    public String phone
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[22]);
        }
    }
    public bool phone_IsNull
    {
        get
        {
            return IsNull(22);
        }
    }

    public String ACCTNUM
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[23]);
        }
    }
    public bool ACCTNUM_IsNull
    {
        get
        {
            return IsNull(23);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String vindup
    {
        set
        {
            this[0] = value;
        }
    }
    public bool vindup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String statusdup
    {
        set
        {
            this[1] = value;
        }
    }
    public bool statusdup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String insureddup
    {
        set
        {
            this[2] = value;
        }
    }
    public bool insureddup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String address1dup
    {
        set
        {
            this[3] = value;
        }
    }
    public bool address1dup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String address2dup
    {
        set
        {
            this[4] = value;
        }
    }
    public bool address2dup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String citydup
    {
        set
        {
            this[5] = value;
        }
    }
    public bool citydup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String statedup
    {
        set
        {
            this[6] = value;
        }
    }
    public bool statedup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String zipdup
    {
        set
        {
            this[7] = value;
        }
    }
    public bool zipdup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 vehicleyeardup
    {
        set
        {
            this[8] = value;
        }
    }
    public bool vehicleyeardup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String VEHICLEmakedup
    {
        set
        {
            this[9] = value;
        }
    }
    public bool VEHICLEmakedup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String VEHICLEmodeldup
    {
        set
        {
            this[10] = value;
        }
    }
    public bool VEHICLEmodeldup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String agentnamedup
    {
        set
        {
            this[11] = value;
        }
    }
    public bool agentnamedup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String companynamedup
    {
        set
        {
            this[12] = value;
        }
    }
    public bool companynamedup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String coveragedup
    {
        set
        {
            this[13] = value;
        }
    }
    public bool coveragedup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime companycanceldatedup
    {
        set
        {
            this[14] = value;
        }
    }
    public bool companycanceldatedup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime canceldatedup
    {
        set
        {
            this[15] = value;
        }
    }
    public bool canceldatedup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime effdatedup
    {
        set
        {
            this[16] = value;
        }
    }
    public bool effdatedup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime createdatedup
    {
        set
        {
            this[17] = value;
        }
    }
    public bool createdatedup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(17);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String policynumdup
    {
        set
        {
            this[18] = value;
        }
    }
    public bool policynumdup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(18);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 installmentsdup
    {
        set
        {
            this[19] = value;
        }
    }
    public bool installmentsdup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(19);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 paymentsmadedup
    {
        set
        {
            this[20] = value;
        }
    }
    public bool paymentsmadedup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(20);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 paymentsremainingdup
    {
        set
        {
            this[21] = value;
        }
    }
    public bool paymentsremainingdup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(21);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String phonedup
    {
        set
        {
            this[22] = value;
        }
    }
    public bool phonedup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(22);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ACCTNUMdup
    {
        set
        {
            this[23] = value;
        }
    }
    public bool ACCTNUMdup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(23);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String DupReason
    {
        set
        {
            this[24] = value;
        }
    }
    public bool DupReason_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(24);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_453430f54c8543d1b09ff998df0c86cb.Properties.Settings.get_Default():SC_453430f54c8543d1b09ff998df0c86cb.Properties.Sett" +
    "ings")]

namespace SC_453430f54c8543d1b09ff998df0c86cb.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_453430f54c8543d1b09ff998df0c86cb</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_453430f54c8543d1b09ff998df0c86cb</msb:DisplayName>
		<msb:ProjectId>{53BF5AAA-819B-4EA5-B26D-666DED29C55A}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_453430f54c8543d1b09ff998df0c86cb.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_453430f54c8543d1b09ff998df0c86cb.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{71dace45-009b-4797-a0a0-9f1f5f9b8f05}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_453430f54c8543d1b09ff998df0c86cb</RootNamespace>
    <AssemblyName>SC_453430f54c8543d1b09ff998df0c86cb</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_453430f54c8543d1b09ff998df0c86cb" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_453430f54c8543d1b09ff998df0c86cb")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_453430f54c8543d1b09ff998df0c86cb")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_453430f54c8543d1b09ff998df0c86cb.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_453430f54c8543d1b09ff998df0c86cb.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_453430f54c8543d1b09ff998df0c86cb.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_453430f54c8543d1b09ff998df0c86cb.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_453430f54c8543d1b09ff998df0c86cb.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_453430f54c8543d1b09ff998df0c86cb.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAIbU3FkAAAAAAAAAAOAAIiALATAAADgAAAAIAAAAAAAAplYA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFRWAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAArDYAAAAgAAAAOAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAA6AAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAQAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACI
VgAAAAAAAEgAAAACAAUAnC8AAAAmAAABAAAAAAAAAJxVAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACiobMAQA+wEAAAEAABFzhAAABgoC
ewIAAAQsFgJ7AQAABAJ7AgAABBdZbxIAAAoKKwsGcgEAAHB9IgAABAJ7AQAABG8TAAAKLA4GA28I
AAAGb4EAAAYtKXOEAAAGCwIHAygEAAAGAnsBAAAEB28UAAAKAgJ7AgAABBdYfQIAAAQqBgNvCAAA
Bm+BAAAGObAAAAAGA28eAAAGb4IAAAY5nwAAABYMc4QAAAYNAgkDKAQAAAYCewEAAAQJbxQAAAoG
A28OAAAGcgUAAHADbxAAAAYoFQAACm+DAAAGLQIXDAJ7AQAABG8WAAAKEwQrKBIEKBcAAAoTBQgs
DwIRBXIJAABwKAUAAAYrDQIRBXItAABwKAUAAAYSBCgYAAAKLc/eDhIE/hYCAAAbbxkAAArcAnsB
AAAEbxoAAAoCFn0CAAAEKgYDbwgAAAZvgQAABjm1AAAABgNvHgAABm+CAAAGOqQAAAAWEwZzhAAA
BhMHAhEHAygEAAAGAnsBAAAEEQdvFAAACgYDbw4AAAZyBQAAcANvEAAABigVAAAKb4MAAAYtAxcT
BgJ7AQAABG8WAAAKEwQrKRIEKBcAAAoTCBEGLA8CEQhyCQAAcCgFAAAGKw0CEQhyRQAAcCgFAAAG
EgQoGAAACi3O3g4SBP4WAgAAG28ZAAAK3AJ7AQAABG8aAAAKAhZ9AgAABCoAARwAAAIA3gA1EwEO
AAAAAAIApAE22gEOAAAAABMwAgDhAQAAAAAAAARvNwAABi0MAwRvNgAABn0MAAAEBG8PAAAGLQwD
BG8OAAAGfQ0AAAQEbxEAAAYtDAMEbxAAAAZ9DgAABARvHwAABi0MAwRvHgAABn0PAAAEBG8nAAAG
LQwDBG8mAAAGfRAAAAQEbxMAAAYtDAMEbxIAAAZ9EQAABARvJQAABi0MAwRvJAAABn0SAAAEBG8h
AAAGLQwDBG8gAAAGfRMAAAQEbyMAAAYtDAMEbyIAAAZ9FAAABARvKwAABi0MAwRvKgAABn0VAAAE
BG8pAAAGLQwDBG8oAAAGfRYAAAQEby8AAAYtDAMEby4AAAZ9FwAABARvDQAABi0MAwRvDAAABn0Y
AAAEBG8xAAAGLQwDBG8wAAAGfRkAAAQEbzMAAAYtDAMEbzIAAAZ9GgAABARvNQAABi0MAwRvNAAA
Bn0bAAAEBG8tAAAGLQwDBG8sAAAGfRwAAAQEbxUAAAYtDAMEbxQAAAZ9HQAABARvCwAABi0MAwRv
CgAABn0eAAAEBG8bAAAGLQwDBG8aAAAGfR8AAAQEbx0AAAYtDAMEbxwAAAZ9IAAABARvGQAABi0M
AwRvGAAABn0hAAAEBG8JAAAGLQwDBG8IAAAGfSIAAAQEbxcAAAYtDAMEbxYAAAZ9IwAABCoAAAAT
MAIAsAEAAAAAAAACewUAAARvbQAABgJ7BQAABAN7DAAABG9pAAAGAnsFAAAEA3sNAAAEb0EAAAYC
ewUAAAQDew4AAARvQwAABgJ7BQAABAN7DwAABG9RAAAGAnsFAAAEA3sQAAAEb1kAAAYCewUAAAQD
exEAAARvRQAABgJ7BQAABAN7EgAABG9XAAAGAnsFAAAEA3sTAAAEb1MAAAYCewUAAAQDexQAAARv
VQAABgJ7BQAABAN7FQAABG9dAAAGAnsFAAAEA3sWAAAEb1sAAAYCewUAAAQDexcAAARvYQAABgJ7
BQAABAN7GAAABG8/AAAGAnsFAAAEA3sZAAAEb2MAAAYCewUAAAQDexoAAARvZQAABgJ7BQAABAN7
GwAABG9nAAAGAnsFAAAEA3scAAAEb18AAAYCewUAAAQDex0AAARvRwAABgJ7BQAABAN7HgAABG89
AAAGAnsFAAAEA3sfAAAEb00AAAYCewUAAAQDeyAAAARvTwAABgJ7BQAABAN7IQAABG9LAAAGAnsF
AAAEA3siAAAEbzsAAAYCewUAAAQDeyMAAARvSQAABgJ7BQAABARvawAABipKAnMbAAAKfQEAAAQC
KHAAAAYqKgIDBAUoHAAACipSAnsdAAAKAnseAAAKFpRvHwAACioiAhYoIAAACipSAnsdAAAKAnse
AAAKF5RvHwAACioiAhcoIAAACipSAnsdAAAKAnseAAAKGJRvHwAACioiAhgoIAAACipSAnsdAAAK
AnseAAAKGZRvHwAACioiAhkoIAAACipSAnsdAAAKAnseAAAKGpRvHwAACioiAhooIAAACipSAnsd
AAAKAnseAAAKG5RvHwAACioiAhsoIAAACipSAnsdAAAKAnseAAAKHJRvHwAACioiAhwoIAAACipS
AnsdAAAKAnseAAAKHZRvHwAACioiAh0oIAAACipSAnsdAAAKAnseAAAKHpRvIQAACioiAh4oIAAA
CipWAnsdAAAKAnseAAAKHwmUbx8AAAoqJgIfCSggAAAKKlYCex0AAAoCex4AAAofCpRvHwAACiom
Ah8KKCAAAAoqVgJ7HQAACgJ7HgAACh8LlG8fAAAKKiYCHwsoIAAACipWAnsdAAAKAnseAAAKHwyU
bx8AAAoqJgIfDCggAAAKKlYCex0AAAoCex4AAAofDZRvHwAACiomAh8NKCAAAAoqVgJ7HQAACgJ7
HgAACh8OlG8iAAAKKiYCHw4oIAAACipWAnsdAAAKAnseAAAKHw+UbyIAAAoqJgIfDyggAAAKKlYC
ex0AAAoCex4AAAofEJRvIgAACiomAh8QKCAAAAoqVgJ7HQAACgJ7HgAACh8RlG8iAAAKKiYCHxEo
IAAACipWAnsdAAAKAnseAAAKHxKUbx8AAAoqJgIfEiggAAAKKlYCex0AAAoCex4AAAofE5RvIQAA
CiomAh8TKCAAAAoqVgJ7HQAACgJ7HgAACh8UlG8hAAAKKiYCHxQoIAAACipWAnsdAAAKAnseAAAK
HxWUbyEAAAoqJgIfFSggAAAKKlYCex0AAAoCex4AAAofFpRvHwAACiomAh8WKCAAAAoqVgJ7HQAA
CgJ7HgAACh8XlG8fAAAKKiYCHxcoIAAACioeAigjAAAKKh4CKCQAAAoqJgIWAyglAAAKKloDLAgC
FigmAAAKKnJnAABwcycAAAp6JgIXAyglAAAKKloDLAgCFygmAAAKKnJnAABwcycAAAp6JgIYAygl
AAAKKloDLAgCGCgmAAAKKnJnAABwcycAAAp6JgIZAyglAAAKKloDLAgCGSgmAAAKKnJnAABwcycA
AAp6JgIaAyglAAAKKloDLAgCGigmAAAKKnJnAABwcycAAAp6JgIbAyglAAAKKloDLAgCGygmAAAK
KnJnAABwcycAAAp6JgIcAyglAAAKKloDLAgCHCgmAAAKKnJnAABwcycAAAp6JgIdAyglAAAKKloD
LAgCHSgmAAAKKnJnAABwcycAAAp6OgIeA4wgAAABKCUAAAoqWgMsCAIeKCYAAAoqcmcAAHBzJwAA
CnoqAh8JAyglAAAKKl4DLAkCHwkoJgAACipyZwAAcHMnAAAKeioCHwoDKCUAAAoqXgMsCQIfCigm
AAAKKnJnAABwcycAAAp6KgIfCwMoJQAACipeAywJAh8LKCYAAAoqcmcAAHBzJwAACnoqAh8MAygl
AAAKKl4DLAkCHwwoJgAACipyZwAAcHMnAAAKeioCHw0DKCUAAAoqXgMsCQIfDSgmAAAKKnJnAABw
cycAAAp6PgIfDgOMEQAAASglAAAKKl4DLAkCHw4oJgAACipyZwAAcHMnAAAKej4CHw8DjBEAAAEo
JQAACipeAywJAh8PKCYAAAoqcmcAAHBzJwAACno+Ah8QA4wRAAABKCUAAAoqXgMsCQIfECgmAAAK
KnJnAABwcycAAAp6PgIfEQOMEQAAASglAAAKKl4DLAkCHxEoJgAACipyZwAAcHMnAAAKeioCHxID
KCUAAAoqXgMsCQIfEigmAAAKKnJnAABwcycAAAp6PgIfEwOMIAAAASglAAAKKl4DLAkCHxMoJgAA
CipyZwAAcHMnAAAKej4CHxQDjCAAAAEoJQAACipeAywJAh8UKCYAAAoqcmcAAHBzJwAACno+Ah8V
A4wgAAABKCUAAAoqXgMsCQIfFSgmAAAKKnJnAABwcycAAAp6KgIfFgMoJQAACipeAywJAh8WKCYA
AAoqcmcAAHBzJwAACnoqAh8XAyglAAAKKl4DLAkCHxcoJgAACipyZwAAcHMnAAAKeioCHxgDKCUA
AAoqXgMsCQIfGCgmAAAKKnJnAABwcycAAAp6HgIoKAAACioeAigpAAAKKn4CKCoAAAoCAnN4AAAG
fQMAAAQCAnN5AAAGfQQAAAQqAAAAEzAEAE8AAAAAAAAABHIEAQBwGm8rAAAKLBUCBQIDKCwAAAoO
BHMHAAAGb3YAAAYFby0AAAosIwICewYAAAQXWH0GAAAEAnsGAAAEFzMMAm9yAAAGAihzAAAGKgYq
bgJ7BQAABCwSAnsFAAAEb24AAAYCFH0FAAAEKgAAABMwBQA9AAAAAgAAERYKKy4EBpQOBHIUAQBw
KC4AAAozGQIFBpoCBAaUKCwAAAoOBHM6AAAGfQUAAAQGF1gKBgMyzgJvdQAABipKKwcCA293AAAG
A284AAAGLfEqOgIoLwAACgIDfQcAAAQqOgIoLwAACgIDfQgAAAQqHgIoLwAACiqufgkAAAQtHnIm
AQBw0AgAAAIoMAAACm8xAAAKczIAAAqACQAABH4JAAAEKhp+CgAABCoeAoAKAAAEKhp+CwAABCoe
AigzAAAKKi5zfwAABoALAAAEKkoDAnsiAAAEKDQAAAotAhYqFypKAwJ7DwAABCg0AAAKLQIWKhcq
AAATMAMAJAAAAAMAABECew0AAARyBQAAcAJ7DgAABCgVAAAKCgMGKDQAAAotAhYqFyoTMAIA4wAA
AAAAAAACcpgBAHB9DAAABAJymAEAcH0NAAAEAnKYAQBwfQ4AAAQCcpgBAHB9DwAABAIoNQAACn0Q
AAAEAnKYAQBwfREAAAQCKDUAAAp9EgAABAJymAEAcH0TAAAEAnKYAQBwfRQAAAQCKDUAAAp9FQAA
BAIoNQAACn0WAAAEAnKYAQBwfRgAAAQCcpgBAHB9GwAABAJymAEAcH0cAAAEAnKYAQBwfR0AAAQC
cpgBAHB9HgAABAJymAEAcH0fAAAEAnKYAQBwfSAAAAQCcpgBAHB9IgAABAJymAEAcH0jAAAEAigv
AAAKKgBCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAACUEgAAI34AAAATAAD0DgAA
I1N0cmluZ3MAAAAA9CEAAJwBAAAjVVMAkCMAABAAAAAjR1VJRAAAAKAjAABgAgAAI0Jsb2IAAAAA
AAAAAgAAAVcVogkJAwAAAPoBMwAWAAABAAAAJAAAAAoAAAAjAAAAhAAAAE0AAAA1AAAAEAAAAAMA
AAAEAAAAZQAAAGYAAAACAAAAAQAAAAQAAAABAAAAAQAAAAAAZAQBAAAAAAAGADQDMQwGAMgDMQwG
AIACHgwPAKUMAAAGAK0CdgkGABcDdgkGAPgCdgkGAK8DdgkGAFQDdgkGAG0DdgkGAMQCdgkGAN8C
GQQKAIgDcQEGAAEAgQA7APwLAAAGAJ8N6wgGAGgB6wgKAMELcQEOALILcQEKAM0JcQEKAO8NcQEG
AGMCHgwGANILUQwGAMEJYQkSACkCTgQSAJQCTgQSAMkBTAkGAEgCMQwGADYE6wgGAA0B6wgGAIgJ
6wgGABgA6wgGALAJ6wgGAJwB6wgGABkB6wgGANQOdgkAAAAAKwAAAAAAAQABAAEAEAAkCQAAFAAB
AAEAAQAQAJcLAABJAAMABwABABAApAsAAEkAAwA6AAEAEADRDQAAVQADAHAAAQAQACINAABBAAcA
eAABABAA4wwAAEEACAB5AAAAEABYDLQMQQAJAHoAAAEQABINtAxtAAsAfgACABAAMg4AAEEADACB
AAEAeQ3nAAEA8gjvAAYAIg3yAAYA4wz2AAYApAv6AAEAoADvAAEA3w3+AAEA3w3+ABEABwkCAREA
uQEGAREAzwAKAQYATAAOAQYADAAOAQYAIgAOAQYASwEOAQYAHgIRAQYA4Q4OAQYAFwIRAQYAWQEO
AQYA9AAOAQYA7QERAQYA/AERAQYAUw3vAAYAxwAOAQYA4wDvAAYABwTvAAYAlgEOAQYA/QgOAQYA
QgIOAQYAcg0OAQYAAQEOAQYAQQQOAQYAiwvvAAYAMwkOAQYA6QkOAVAgAAAAAMYA5gMGAAEAWCAA
AAAAxgDxAwYAAQBgIAAAAADGAJ4OFQEBAIQiAAAAAIYANwkbAQIAdCQAAAAAhgCBDiMBBAAwJgAA
AACGGAcMBgAGAEMmAAAAAIYYBwxpAAYATiYAAAAAhggvCSoBCQBjJgAAAACGCBEGZQAJAGwmAAAA
AIYIbg0qAQkAgSYAAAAAhgivCGUACQCKJgAAAACGCMMAKgEJAJ8mAAAAAIYIxwRlAAkAqCYAAAAA
hggIACoBCQC9JgAAAACGCIwEZQAJAMYmAAAAAIYIHgAqAQkA2yYAAAAAhgigBGUACQDkJgAAAACG
CN0OKgEJAPkmAAAAAIYIwQhlAAkAAicAAAAAhgg+AioBCQAXJwAAAACGCLYFZQAJACAnAAAAAIYI
5QkqAQkANScAAAAAhgg1BmUACQA+JwAAAACGCIcLPwAJAFMnAAAAAIYIgAhlAAkAXCcAAAAAhgj9
ACoBCQByJwAAAACGCAYFZQAJAHwnAAAAAIYIPQQqAQkAkicAAAAAhgjkBWUACQCcJwAAAACGCEcB
KgEJALInAAAAAIYIHQVlAAkAvCcAAAAAhghVASoBCQDSJwAAAACGCDIFZQAJANwnAAAAAIYI8AAq
AQkA8icAAAAAhgjyBGUACQD8JwAAAACGCBMCLgEJABIoAAAAAIYImQVlAAkAHCgAAAAAhggEAi4B
CQAyKAAAAACGCIMFZQAJADwoAAAAAIYI+AEuAQkAUigAAAAAhghwBWUACQBcKAAAAACGCOkBLgEJ
AHIoAAAAAIYIWgVlAAkAfCgAAAAAhgj5CCoBCQCSKAAAAACGCPwFZQAJAJwoAAAAAIYITw0/AAkA
sigAAAAAhgiXCGUACQC8KAAAAACGCN8APwAJANIoAAAAAIYI2gRlAAkA3CgAAAAAhggDBD8ACQDy
KAAAAACGCMcFZQAJAPwoAAAAAIYIkgEqAQkAEikAAAAAhghJBWUACQAcKQAAAACGCEgAKgEJADIp
AAAAAIYItARlAAkAPCkAAAAAhgC1DmUACQBEKQAAAACGALkNZQAJAEMmAAAAAIYYBwxpAAkATCkA
AAAAhggqCxAADABWKQAAAACGCP8HMwENAG0pAAAAAIYIZwsQAA4AdykAAAAAhghYCDMBDwCOKQAA
AACGCBwKEAAQAJgpAAAAAIYIiAYzAREArykAAAAAhgjtCRAAEgC5KQAAAACGCEQGMwETANApAAAA
AIYI/QkQABQA2ikAAAAAhghbBjMBFQDxKQAAAACGCHULEAAWAPspAAAAAIYIbQgzARcAEioAAAAA
hgjfChAAGAAcKgAAAACGCJgHMwEZADMqAAAAAIYINQsQABoAPSoAAAAAhggRCDMBGwBUKgAAAACG
CEALAQAcAGMqAAAAAIYIIwgzAR0AeioAAAAAhghPChAAHgCFKgAAAACGCNAGMwEfAJ0qAAAAAIYI
BQsQACAAqCoAAAAAhgjMBzMBIQDAKgAAAACGCGIKEAAiAMsqAAAAAIYI6gYzASMA4yoAAAAAhghz
ChAAJADuKgAAAACGCAIHMwElAAYrAAAAAIYIPwoQACYAESsAAAAAhgi5BjMBJwApKwAAAACGCMYK
OAEoADkrAAAAAIYIeAczASkAUSsAAAAAhgi0CjgBKgBhKwAAAACGCF8HMwErAHkrAAAAAIYIpQo4
ASwAiSsAAAAAhghJBzMBLQChKwAAAACGCJMKOAEuALErAAAAAIYIMAczAS8AySsAAAAAhggZCxAA
MADUKwAAAACGCOcHMwExAOwrAAAAAIYIUwsBADIA/CsAAAAAhgg9CDMBMwAULAAAAACGCCsKAQA0
ACQsAAAAAIYIngYzATUAPCwAAAAAhgjsCgEANgBMLAAAAACGCKwHMwE3AGQsAAAAAIYIhgoQADgA
bywAAAAAhggcBzMBOQCHLAAAAACGCA0KEAA6AJIsAAAAAIYIcgYzATsAqiwAAAAAhgiiCRAAPAC1
LAAAAACGCCAGMwE9AM0sAAAAAIYAlw4GAD4A1SwAAAAAhgC2DQYAPgBEKQAAAACGALkNZQA+AN0s
AAAAAIYYBwwGAD4AAC0AAAAAxgBiDj4BPgBbLQAAAADGAWANBgBCAF0tAAAAAIEArwAGAEIAfC0A
AAAAxgB1DkgBQgBbLQAAAADGAYQNBgBGAMUtAAAAAMYBWw4VAUYAWy0AAAAAxgGeDhUBRwDYLQAA
AACGGAcMVAFIAOctAAAAAIYYBwxUAUkA9i0AAAAAgxgHDAYASgD+LQAAAACTCM4LWgFKACouAAAA
AJMIoQFfAUoAMS4AAAAAkwitAWQBSgA5LgAAAACWCMUNagFLAEAuAAAAAIYYBwwGAEsASC4AAAAA
kRgNDG8BSwBULgAAAACGABMJcwFLAGcuAAAAAIYA4gtzAUwAfC4AAAAAhgA2DXMBTQCsLgAAAACG
GAcMBgBOAAAAAQC5DgAAAQC9DgAAAgBvDgAAAQDBDgAAAgCpCQAAAQDHCwAAAgDtDAAAAwDbCQAA
AQDHCwAAAgDtDAAAAwDbCQAAAQD9AwAAAQD9AwAAAQD9AwAAAQD9AwAAAQD9AwAAAQD9AwAAAQD9
AwAAAQD9AwAAAQD9AwAAAQD9AwAAAQD9AwAAAQD9AwAAAQD9AwAAAQD9AwAAAQD9AwAAAQD9AwAA
AQD9AwAAAQD9AwAAAQD9AwAAAQD9AwAAAQD9AwAAAQD9AwAAAQD9AwAAAQD9AwAAAQD9AwAAAQD9
AwAAAQD9AwAAAQD9AwAAAQD9AwAAAQD9AwAAAQD9AwAAAQD9AwAAAQD9AwAAAQD9AwAAAQD9AwAA
AQD9AwAAAQD9AwAAAQD9AwAAAQD9AwAAAQD9AwAAAQD9AwAAAQD9AwAAAQD9AwAAAQD9AwAAAQD9
AwAAAQD9AwAAAQD9AwAAAQD9AwAAAQD9AwAAAQD9AwAAAQA0AAAAAgA9AQAAAwDHCwAABADbCQAA
AQBmDQAAAgAUDAAAAwAuDQAABADbCQAAAQDHCwAAAQC5DgAAAQD1DQAAAQD1DQAAAQD9AwAAAQAc
CQAAAQDuCwAAAQBDDQkABwwBABEABwwGABkABwwKACkABwwQADEABwwQADkABwwQAEEABwwQAEkA
BwwQAFEABwwQAFkABwwQAGEABwwQAGkABwwGALEABwwGANEABwwVAOEABwwGAKkA5gMGAKkA8QMG
AAwA2Qg5AAwACw4/AAwAnABDAOkAmA1JAAwA+QtQABQA/w1gABQAjg5lAPEA4QEGAAwAgQsGAAwA
BwwGAJEABwxpAJEAxwtzAJEA7Qx3AJkAMwR7AJEAygiAAJkAFQCFAJkAZQGKAJEAtQ5lAJEAuQ1l
AJEA4giQAJEA0QgBAPkABwwQAJEAlw4GAJEAtg0GAKkABwwGAOkAGw2WAKkAAQ2eAJkApg1lAKkA
PACoAIEABwwGABEBKwGvABEB0A64ALkABwy+ANkABwwGAOkA5g7GAIkAxg7QAC4ACwCYAS4AEwCh
AS4AGwDAAS4AIwDJAS4AKwDyAS4AMwDyAS4AOwDyAS4AQwDJAS4ASwD4AS4AUwDyAS4AWwAPAkMA
YwBZAgMBawBZAmEBewBZAmkMcwDAAYkMcwDAARsApADMAAMAAQAEADEACABjAAkAZQAAADMJeAEA
ABUGfAEAAHINeAEAALMIfAEAAMcAeAEAAMsEfAEAAAwAeAEAAJAEfAEAACIAeAEAAKQEfAEAAOEO
eAEAAMUIfAEAAEICeAEAALoFfAEAAOkJeAEAADkGfAEAAIsLgAEAAIQIfAEAAAEBeAEAAAoFfAEA
AEEEeAEAAOgFfAEAAEsBeAEAACEFfAEAAFkBeAEAADYFfAEAAPQAeAEAAPYEfAEAABcChAEAAJ0F
fAEAAB4ChAEAAKQFfAEAAPwBhAEAAHQFfAEAAO0BhAEAAF4FfAEAAP0IeAEAAAAGfAEAAFMNgAEA
AJsIfAEAAOMAgAEAAN4EfAEAAAcEgAEAAMsFfAEAAJYBeAEAAE0FfAEAAEwAeAEAALgEfAEAAC4L
eAEAAAMIfAEAAGsLeAEAAFwIfAEAACAKeAEAAIwGfAEAAPEJeAEAAEgGfAEAAAEKeAEAAF8GfAEA
AHkLeAEAAHEIfAEAAOMKeAEAAJwHfAEAADkLeAEAABUIfAEAAEQLgAEAACcIfAEAAFMKeAEAANQG
fAEAAAkLeAEAANAHfAEAAGYKeAEAAO4GfAEAAHcKeAEAAAYHfAEAAEMKeAEAAL0GfAEAAMoKhAEA
AHwHfAEAANEKhAEAAIMHfAEAAKkKhAEAAE0HfAEAAJcKhAEAADQHfAEAAB0LeAEAAOsHfAEAAFcL
gAEAAEEIfAEAAC8KgAEAAKIGfAEAAPAKgAEAALAHfAEAAIoKeAEAACAHfAEAABEKeAEAAHYGfAEA
AKYJeAEAACQGfAEAANILiQEAAMEBjgEAAMkNkwECAAgAAwACAAkABQACAAoABwACAAsACQACAAwA
CwACAA0ADQACAA4ADwACAA8AEQACABAAEwACABEAFQACABIAFwACABMAGQACABQAGwACABUAHQAC
ABYAHwACABcAIQACABgAIwACABkAJQACABoAJwACABsAKQACABwAKwACAB0ALQACAB4ALwACAB8A
MQACACAAMwACACEANQACACIANwACACMAOQACACQAOwACACUAPQACACYAPwACACcAQQACACgAQwAC
ACkARQACACoARwACACsASQACACwASwACAC0ATQACAC4ATwACAC8AUQACADAAUwACADEAVQACADIA
VwACADMAWQACADQAWwACADUAXQACADYAXwACADcAYQABADsAYwABADwAZQABAD0AZwABAD4AaQAB
AD8AawABAEAAbQABAEEAbwABAEIAcQABAEMAcwABAEQAdQABAEUAdwABAEYAeQABAEcAewABAEgA
fQABAEkAfwABAEoAgQABAEsAgwABAEwAhQABAE0AhwABAE4AiQABAE8AiwABAFAAjQABAFEAjwAB
AFIAkQABAFMAkwABAFQAlQABAFUAlwABAFYAmQABAFcAmwABAFgAnQABAFkAnwABAFoAoQABAFsA
owABAFwApQABAF0ApwABAF4AqQABAF8AqwABAGAArQABAGEArwABAGIAsQABAGMAswABAGQAtQAB
AGUAtwABAGYAuQABAGcAuwABAGgAvQABAGkAvwABAGoAwQABAGsAwwABAGwAxQACAHsAxwACAHwA
yQABAH0AyQACAH4AywAyAFkABIAAAAEAAAAAAAAAAAAAAAAAVAAAAAQAAAAAAAAAAAAAANUAeAAA
AAAADgAAAAAAAAAAAAAA3gAVDgAAAAAOAAAAAAAAAAAAAADeADoOAAAAAAQAAAAAAAAAAAAAANUA
6wgAAAAAAAAAAAEAAABiDAAACgACAAAAAExpc3RgMQBnZXRfYWRkcmVzczEAR2V0SW50MzIAZ2V0
X2FkZHJlc3MyADxNb2R1bGU+AElucHV0SUQAR2V0T3V0cHV0SUQAZ2V0X0FDQ1ROVU0AU0NfNDUz
NDMwZjU0Yzg1NDNkMWIwOWZmOTk4ZGYwYzg2Y2IAbXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rpb25z
LkdlbmVyaWMAQWRkAElucHV0c0ZpbmlzaGVkAE1hcmtPdXRwdXRzRmluaXNoZWQAZ2V0X2luc3Vy
ZWQAZGVmYXVsdEluc3RhbmNlAGdldF9wYXltZW50c21hZGUAZ2V0X2NvdmVyYWdlAGdldF9WRUhJ
Q0xFTWFrZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBJ
bnB1dE5hbWUAZ2V0X2FnZW50bmFtZQBnZXRfY29tcGFueW5hbWUAR2V0RGF0ZVRpbWUATWljcm9z
b2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAZ2V0X3Bob25lAFR5cGUAZ2V0X0N1bHR1cmUAc2V0
X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAERpc3Bvc2UA
Z2V0X2NyZWF0ZWRhdGUAZ2V0X2VmZmRhdGUAZ2V0X2NhbmNlbGRhdGUAZ2V0X2NvbXBhbnljYW5j
ZWxkYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAGdldF9zdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0
dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUA
RWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlU
cmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmln
dXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9u
UmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29w
eXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFz
c2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVF
eGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVlAGdldF9wYXltZW50c3JlbWFpbmluZwBTeXN0ZW0uUnVu
dGltZS5WZXJzaW9uaW5nAEdldFN0cmluZwBnZXRfVkVISUNMRU1vZGVsAFN5c3RlbS5Db21wb25l
bnRNb2RlbABTQ180NTM0MzBmNTRjODU0M2QxYjA5ZmY5OThkZjBjODZjYi5kbGwAZ2V0X2FkZHJl
c3MxX0lzTnVsbABnZXRfYWRkcmVzczJfSXNOdWxsAGdldF9BQ0NUTlVNX0lzTnVsbABnZXRfaW5z
dXJlZF9Jc051bGwAZ2V0X3BheW1lbnRzbWFkZV9Jc051bGwAZ2V0X2NvdmVyYWdlX0lzTnVsbABn
ZXRfVkVISUNMRU1ha2VfSXNOdWxsAGdldF9hZ2VudG5hbWVfSXNOdWxsAGdldF9jb21wYW55bmFt
ZV9Jc051bGwAZ2V0X3Bob25lX0lzTnVsbABnZXRfY3JlYXRlZGF0ZV9Jc051bGwAZ2V0X2VmZmRh
dGVfSXNOdWxsAGdldF9jYW5jZWxkYXRlX0lzTnVsbABnZXRfY29tcGFueWNhbmNlbGRhdGVfSXNO
dWxsAGdldF9zdGF0ZV9Jc051bGwAZ2V0X3BheW1lbnRzcmVtYWluaW5nX0lzTnVsbABnZXRfVkVI
SUNMRU1vZGVsX0lzTnVsbABnZXRfcG9saWN5bnVtX0lzTnVsbABnZXRfdmluX0lzTnVsbABzZXRf
RHVwUmVhc29uX0lzTnVsbABnZXRfemlwX0lzTnVsbABzZXRfYWRkcmVzczFkdXBfSXNOdWxsAHNl
dF9hZGRyZXNzMmR1cF9Jc051bGwAc2V0X0FDQ1ROVU1kdXBfSXNOdWxsAHNldF9pbnN1cmVkZHVw
X0lzTnVsbABzZXRfcGF5bWVudHNtYWRlZHVwX0lzTnVsbABzZXRfY292ZXJhZ2VkdXBfSXNOdWxs
AHNldF9WRUhJQ0xFbWFrZWR1cF9Jc051bGwAc2V0X2FnZW50bmFtZWR1cF9Jc051bGwAc2V0X2Nv
bXBhbnluYW1lZHVwX0lzTnVsbABzZXRfcGhvbmVkdXBfSXNOdWxsAHNldF9jcmVhdGVkYXRlZHVw
X0lzTnVsbABzZXRfZWZmZGF0ZWR1cF9Jc051bGwAc2V0X2NhbmNlbGRhdGVkdXBfSXNOdWxsAHNl
dF9jb21wYW55Y2FuY2VsZGF0ZWR1cF9Jc051bGwAc2V0X3N0YXRlZHVwX0lzTnVsbABzZXRfcGF5
bWVudHNyZW1haW5pbmdkdXBfSXNOdWxsAHNldF9WRUhJQ0xFbW9kZWxkdXBfSXNOdWxsAHNldF9w
b2xpY3ludW1kdXBfSXNOdWxsAHNldF92aW5kdXBfSXNOdWxsAHNldF96aXBkdXBfSXNOdWxsAHNl
dF92ZWhpY2xleWVhcmR1cF9Jc051bGwAc2V0X2luc3RhbGxtZW50c2R1cF9Jc051bGwAc2V0X3N0
YXR1c2R1cF9Jc051bGwAc2V0X2NpdHlkdXBfSXNOdWxsAGdldF92ZWhpY2xleWVhcl9Jc051bGwA
Z2V0X2luc3RhbGxtZW50c19Jc051bGwAZ2V0X3N0YXR1c19Jc051bGwAZ2V0X2NpdHlfSXNOdWxs
AFNldE51bGwAZ2V0X0l0ZW0Ac2V0X0l0ZW0AU3lzdGVtAFJvd051bQBnZXRfcG9saWN5bnVtAHJl
c291cmNlTWFuAGNoZWNrVmluAHNlbnRWaW4AU2NyaXB0TWFpbgBnZXRfdmluAHVwZGF0ZVJvd0lu
Zm9ybWF0aW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3Rl
bS5SZWZsZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24Ac2V0X0R1cFJlYXNvbgBTdHJp
bmdDb21wYXJpc29uAEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAGdldF96aXAA
c2V0X2FkZHJlc3MxZHVwAHNldF9hZGRyZXNzMmR1cABzZXRfQUNDVE5VTWR1cABzZXRfaW5zdXJl
ZGR1cABzZXRfcGF5bWVudHNtYWRlZHVwAHNldF9jb3ZlcmFnZWR1cABzZXRfVkVISUNMRW1ha2Vk
dXAAc2V0X2FnZW50bmFtZWR1cABzZXRfY29tcGFueW5hbWVkdXAAc2V0X3Bob25lZHVwAHNldF9j
cmVhdGVkYXRlZHVwAHNldF9lZmZkYXRlZHVwAHNldF9jYW5jZWxkYXRlZHVwAHNldF9jb21wYW55
Y2FuY2VsZGF0ZWR1cABzZXRfc3RhdGVkdXAAc2V0X3BheW1lbnRzcmVtYWluaW5nZHVwAHNldF9W
RUhJQ0xFbW9kZWxkdXAAc2V0X3BvbGljeW51bWR1cABzZXRfdmluZHVwAHNldF96aXBkdXAAc2V0
X3ZlaGljbGV5ZWFyZHVwAHNldF9pbnN0YWxsbWVudHNkdXAAc2V0X3N0YXR1c2R1cABzZXRfY2l0
eWR1cABDbGVhcgBnZXRfdmVoaWNsZXllYXIASW5wdXQwQnVmZmVyAE91dHB1dDBCdWZmZXIAUGlw
ZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIAY2hlY2tTZWxsZXIA
c2VudFNlbGxlcgBHZXRFbnVtZXJhdG9yAC5jdG9yAC5jY3RvcgBPdXRwdXRJRHMAU3lzdGVtLkRp
YWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNl
cwBTQ180NTM0MzBmNTRjODU0M2QxYjA5ZmY5OThkZjBjODZjYi5Qcm9wZXJ0aWVzLlJlc291cmNl
cy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfNDUzNDMwZjU0Yzg1NDNkMWIwOWZmOTk4ZGYw
Yzg2Y2IuUHJvcGVydGllcwBWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5J
bmRleGVzAFNldHRpbmdzAEVxdWFscwBDb25uZWN0aW9ucwBCdWZmZXJzAGNoZWNrQWRkcmVzcwBz
ZW50QWRkcmVzcwBnZXRfaW5zdGFsbG1lbnRzAEZpbmlzaE91dHB1dHMAZ2V0X3N0YXR1cwBMaXN0
b2ZSb3dzAENyZWF0ZU5ld091dHB1dFJvd3MAQ29uY2F0AE9iamVjdABnZXRfRW5kT2ZSb3dzZXQA
U2V0RW5kT2ZSb3dzZXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQA
U2NyaXB0Q29tcG9uZW50AGdldF9DdXJyZW50AGdldF9Db3VudABNaWNyb3NvZnQuU3FsU2VydmVy
LlR4U2NyaXB0AFJvd0xpc3QATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QASW5wdXQw
X1Byb2Nlc3NJbnB1dABpbnB1dABQcmltZU91dHB1dABVcGRhdGVPdXRwdXQATW92ZU5leHQAQWRk
Um93AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cATmV4dFJvdwByb3cAcm93eABnZXRfVG9kYXkAZ2V0
X0Fzc2VtYmx5AGdldF9jaXR5AG9wX0VxdWFsaXR5AAAAAAMxAAADIAAAI0QAaQBmAGYAZQByAGUA
bgB0ACAAQQBkAGQAcgBlAHMAcwAAF1MAYQBtAGUAIABTAGUAbABsAGUAcgAAIUQAaQBmAGYAZQBy
AGUAbgB0ACAAUwBlAGwAbABlAHIAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABj
AGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcA
bgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABl
AGEAZAAuAAAPSQBuAHAAdQB0ACAAMAAAEU8AdQB0AHAAdQB0ACAAMAAAcVMAQwBfADQANQAzADQA
MwAwAGYANQA0AGMAOAA1ADQAMwBkADEAYgAwADkAZgBmADkAOQA4AGQAZgAwAGMAOAA2AGMAYgAu
AFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAQAAAE2xhQfW+UtIsl/1
um7r8x0ABCABAQgDIAABBSABARERBCABAQ4FIAEBEWUWBwkSKBIoAhIoFRE9ARIoEigCEigSKAYV
EjkBEigFIAETAAgDIAAIBSABARMABgADDg4ODgggABURPQETAAYVET0BEigEIAATAAMgAAIJIAMB
Ek0dCBJRAwYSTQMGHQgEIAEOCAQgAQIIBCABCAgFIAERRQgFIAIBCBwHIAICDhGAhQUgAR0ICAMH
AQgGAAIIElEOCAABEoCJEYCNBSAAEoCRByACAQ4SgJEFAAICDg4DBwEOBAAAEUUIt3pcVhk04IkI
iYRdzYCAzJEHBhUSOQESKAIGCAMGEhgDBhIcAwYSEAMGElUDBhJdAwYSYQMGEiQCBg4DBhFFBSAB
ARIMByACARIoEgwGIAIBEigOAyAADgQgABFFBCABAQIFIAEBEUUJIAQBCA4STRJRCyAEAQgdCB0S
TRJRBSABARJVBAAAEl0EAAASYQUAAQESYQQAABIkAwAAAQQgAQIOAygADgMoAAIDKAAIBCgAEUUE
CAASXQQIABJhBAgAEiQIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEA
AgAAAAAAKAEAI1NDXzQ1MzQzMGY1NGM4NTQzZDFiMDlmZjk5OGRmMGM4NmNiAAAFAQAAAAAWAQAR
Q29weXJpZ2h0IEAgIDIwMTcAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJh
bWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41BAEAAAAAALQAAADOyu++AQAAAJEA
AABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4w
LjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5
c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAB8
VgAAAAAAAAAAAACWVgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiFYAAAAAAAAAAAAAAABfQ29y
RGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAA
AAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADsAwAAAAAAAAAA
AADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEAAAAA
AAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUA
SQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAETAMAAAEAUwB0
AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAwAAAAGgABAAEA
QwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAAAAAA
AHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwA0ADUAMwA0ADMA
MABmADUANABjADgANQA0ADMAZAAxAGIAMAA5AGYAZgA5ADkAOABkAGYAMABjADgANgBjAGIAAAAw
AAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABwACgAAQBJAG4A
dABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADQANQAzADQAMwAwAGYANQA0AGMAOAA1ADQAMwBk
ADEAYgAwADkAZgBmADkAOQA4AGQAZgAwAGMAOAA2AGMAYgAuAGQAbABsAAAASAASAAEATABlAGcA
YQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA3
AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIA
aQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8ANAA1ADMANAAzADAAZgA1ADQAYwA4
ADUANAAzAGQAMQBiADAAOQBmAGYAOQA5ADgAZABmADAAYwA4ADYAYwBiAC4AZABsAGwAAABoACQA
AQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADQANQAzADQAMwAwAGYANQA0AGMAOAA1
ADQAMwBkADEAYgAwADkAZgBmADkAOQA4AGQAZgAwAGMAOAA2AGMAYgAAADQACAABAFAAcgBvAGQA
dQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBlAG0AYgBs
AHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAMAAAAqDYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_453430f54c8543d1b09ff998df0c86cb</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">3E</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[vin]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="vin"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[vin]"
                      name="vin" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[status]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="status"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[status]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[insured]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="insured"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[insured]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[address1]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="address1"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[address1]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[address2]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="address2"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[address2]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[city]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="city"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[city]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[state]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="state"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[state]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[zip]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="zip"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[zip]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[vehicle_year]"
                      cachedDataType="i4"
                      cachedName="vehicle_year"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[vehicle_year]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[VEHICLE_Make]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="VEHICLE_Make"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[VEHICLE_Make]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[VEHICLE_Model]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="VEHICLE_Model"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[VEHICLE_Model]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[agent_name]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="agent_name"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[agent_name]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[company_name]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="company_name"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[company_name]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[coverage]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="coverage"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[coverage]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[company_cancel_date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="company_cancel_date"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[company_cancel_date]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[cancel_date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="cancel_date"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[cancel_date]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[eff_date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="eff_date"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[eff_date]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[create_date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="create_date"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[create_date]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[policy_num]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="policy_num"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[policy_num]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[installments]"
                      cachedDataType="i4"
                      cachedName="installments"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[installments]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[payments_made]"
                      cachedDataType="i4"
                      cachedName="payments_made"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[payments_made]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[payments_remaining]"
                      cachedDataType="i4"
                      cachedName="payments_remaining"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[payments_remaining]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[phone]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="phone"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[phone]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[ACCT_NUM]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ACCT_NUM"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[ACCT_NUM]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0]"
                  hasSideEffects="true"
                  name="Output 0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[vin_dup]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[vin_dup]"
                      name="vin_dup" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[status_dup]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[status_dup]"
                      name="status_dup" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[insured_dup]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[insured_dup]"
                      name="insured_dup" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[address1_dup]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[address1_dup]"
                      name="address1_dup" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[address2_dup]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[address2_dup]"
                      name="address2_dup" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[city_dup]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[city_dup]"
                      name="city_dup" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[state_dup]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[state_dup]"
                      name="state_dup" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[zip_dup]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[zip_dup]"
                      name="zip_dup" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[vehicle_year_dup]"
                      dataType="i4"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[vehicle_year_dup]"
                      name="vehicle_year_dup" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[VEHICLE_make_dup]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[VEHICLE_make_dup]"
                      name="VEHICLE_make_dup" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[VEHICLE_model_dup]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[VEHICLE_model_dup]"
                      name="VEHICLE_model_dup" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[agent_name_dup]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[agent_name_dup]"
                      name="agent_name_dup" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[company_name_dup]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[company_name_dup]"
                      name="company_name_dup" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[coverage_dup]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[coverage_dup]"
                      name="coverage_dup" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[company_cancel_date_dup]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[company_cancel_date_dup]"
                      name="company_cancel_date_dup" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[cancel_date_dup]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[cancel_date_dup]"
                      name="cancel_date_dup" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[eff_date_dup]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[eff_date_dup]"
                      name="eff_date_dup" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[create_date_dup]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[create_date_dup]"
                      name="create_date_dup" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[policy_num_dup]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[policy_num_dup]"
                      name="policy_num_dup" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[installments_dup]"
                      dataType="i4"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[installments_dup]"
                      name="installments_dup" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[payments_made_dup]"
                      dataType="i4"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[payments_made_dup]"
                      name="payments_made_dup" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[payments_remaining_dup]"
                      dataType="i4"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[payments_remaining_dup]"
                      name="payments_remaining_dup" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[phone_dup]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[phone_dup]"
                      name="phone_dup" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[ACCT_NUM_dup]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[ACCT_NUM_dup]"
                      name="ACCT_NUM_dup" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Dup_Reason]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Dup_Reason]"
                      name="Dup_Reason" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Create Group 2 Dup Vin Excel.Paths[Different Address]"
              endId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input]"
              name="Different Address"
              startId="Package\Create Group 2 Dup Vin Excel\Conditional Split.Outputs[Different Address]" />
            <path
              refId="Package\Create Group 2 Dup Vin Excel.Paths[Not Same Seller]"
              endId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input]"
              name="Not Same Seller"
              startId="Package\Create Group 2 Dup Vin Excel\Conditional Split.Outputs[Not Same Seller]" />
            <path
              refId="Package\Create Group 2 Dup Vin Excel.Paths[OLE DB Source Output]"
              endId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0]"
              name="OLE DB Source Output"
              startId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Create Group 2 Dup Vin Excel.Paths[Output 0]"
              endId="Package\Create Group 2 Dup Vin Excel\Conditional Split.Inputs[Conditional Split Input]"
              name="Output 0"
              startId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0]" />
            <path
              refId="Package\Create Group 2 Dup Vin Excel.Paths[Same Seller]"
              endId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input]"
              name="Same Seller"
              startId="Package\Create Group 2 Dup Vin Excel\Conditional Split.Outputs[Same Seller]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Create Group 3 or More Dup Vin Excel"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{D2AE6667-EE72-4E1B-A485-680D3C9B3336}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create Group 3 or More Dup Vin Excel"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Create Group 3 or More Dup Vin Excel\Conditional Split"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Conditional Split"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Create Group 3 or More Dup Vin Excel\Conditional Split.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Conditional Split.Inputs[Conditional Split Input].Columns[Dup Reason]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="Dup Reason"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Dup Reason]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create Group 3 or More Dup Vin Excel\Conditional Split.Outputs[Same Seller]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Same Seller"
                  synchronousInputId="Package\Create Group 3 or More Dup Vin Excel\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Dup Reason]} == "Same Seller"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">[Dup Reason] == "Same Seller"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Create Group 3 or More Dup Vin Excel\Conditional Split.Outputs[Different Seller]"
                  description="Output 2 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Different Seller"
                  synchronousInputId="Package\Create Group 3 or More Dup Vin Excel\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Dup Reason]} == "Different Seller"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">[Dup Reason] == "Different Seller"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">1</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Create Group 3 or More Dup Vin Excel\Conditional Split.Outputs[Different Address]"
                  description="Output 3 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Different Address"
                  synchronousInputId="Package\Create Group 3 or More Dup Vin Excel\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Dup Reason]} == "Different Address"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">[Dup Reason] == "Different Address"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">2</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Create Group 3 or More Dup Vin Excel\Conditional Split.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Create Group 3 or More Dup Vin Excel\Conditional Split.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Create Group 3 or More Dup Vin Excel\Conditional Split.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Create Group 3 or More Dup Vin Excel\Conditional Split.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File"
              componentClassID="Microsoft.FlatFileDestination"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Flat File Destination"
              localeId="1033"
              name="Different Address File">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">true</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
              </properties>
              <connections>
                <connection
                  refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Different Address File 3 or More]"
                  connectionManagerRefId="Package.ConnectionManagers[Different Address File 3 or More]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].Columns[zip_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="zip_dup"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[zip_dup]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[zip_dup]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].Columns[vin_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="vin_dup"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[vin_dup]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[vin_dup]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].Columns[status_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="status_dup"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[status_dup]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[status_dup]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].Columns[state_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="state_dup"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[state_dup]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[state_dup]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].Columns[phone_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="phone_dup"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[phone_dup]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[phone_dup]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].Columns[insured_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="insured_dup"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[insured_dup]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[insured_dup]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].Columns[installments_dup]"
                      cachedDataType="i4"
                      cachedName="installments_dup"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[installments_dup]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[installments_dup]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].Columns[coverage_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="coverage_dup"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[coverage_dup]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[coverage_dup]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].Columns[city_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="city_dup"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[city_dup]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[city_dup]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].Columns[address2_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="address2_dup"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[address2_dup]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[address2_dup]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].Columns[address1_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="address1_dup"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[address1_dup]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[address1_dup]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].Columns[Dup Reason]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="Dup Reason"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Dup Reason]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Dup Reason]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[zip_dup]"
                      dataType="wstr"
                      length="150"
                      name="zip_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[vin_dup]"
                      dataType="wstr"
                      length="150"
                      name="vin_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[status_dup]"
                      dataType="wstr"
                      length="150"
                      name="status_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[state_dup]"
                      dataType="wstr"
                      length="150"
                      name="state_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[phone_dup]"
                      dataType="wstr"
                      length="150"
                      name="phone_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[insured_dup]"
                      dataType="wstr"
                      length="150"
                      name="insured_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[installments_dup]"
                      dataType="i4"
                      name="installments_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[coverage_dup]"
                      dataType="wstr"
                      length="150"
                      name="coverage_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[city_dup]"
                      dataType="wstr"
                      length="150"
                      name="city_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[address2_dup]"
                      dataType="wstr"
                      length="150"
                      name="address2_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[address1_dup]"
                      dataType="wstr"
                      length="150"
                      name="address1_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Dup Reason]"
                      dataType="wstr"
                      length="150"
                      name="Dup Reason" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[ACCT_NUM_dup]"
                      dataType="wstr"
                      length="150"
                      name="ACCT_NUM_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[vehicle_year_dup]"
                      dataType="i4"
                      name="vehicle_year_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[VEHICLE_Make_dup]"
                      dataType="wstr"
                      length="150"
                      name="VEHICLE_Make_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[VEHICLE_Model_dup]"
                      dataType="wstr"
                      length="150"
                      name="VEHICLE_Model_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[agent_name_dup]"
                      dataType="wstr"
                      length="150"
                      name="agent_name_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[company_name_dup]"
                      dataType="wstr"
                      length="150"
                      name="company_name_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[company_cancel_date_dup]"
                      dataType="dbTimeStamp"
                      name="company_cancel_date_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[cancel_date_dup]"
                      dataType="dbTimeStamp"
                      name="cancel_date_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[eff_date_dup]"
                      dataType="dbTimeStamp"
                      name="eff_date_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[create_date_dup]"
                      dataType="dbTimeStamp"
                      name="create_date_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[policy_num_dup]"
                      dataType="wstr"
                      length="150"
                      name="policy_num_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[payments_made_dup]"
                      dataType="i4"
                      name="payments_made_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[payments_remaining_dup]"
                      dataType="i4"
                      name="payments_remaining_dup" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file"
              componentClassID="Microsoft.FlatFileDestination"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Flat File Destination"
              localeId="1033"
              name="Different Seller file">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">true</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
              </properties>
              <connections>
                <connection
                  refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Different Seller File 3 or More]"
                  connectionManagerRefId="Package.ConnectionManagers[Different Seller File 3 or More]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].Columns[zip_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="zip_dup"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[zip_dup]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[zip_dup]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].Columns[vin_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="vin_dup"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[vin_dup]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[vin_dup]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].Columns[status_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="status_dup"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[status_dup]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[status_dup]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].Columns[state_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="state_dup"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[state_dup]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[state_dup]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].Columns[phone_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="phone_dup"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[phone_dup]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[phone_dup]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].Columns[insured_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="insured_dup"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[insured_dup]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[insured_dup]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].Columns[installments_dup]"
                      cachedDataType="i4"
                      cachedName="installments_dup"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[installments_dup]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[installments_dup]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].Columns[coverage_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="coverage_dup"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[coverage_dup]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[coverage_dup]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].Columns[city_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="city_dup"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[city_dup]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[city_dup]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].Columns[address2_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="address2_dup"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[address2_dup]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[address2_dup]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].Columns[address1_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="address1_dup"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[address1_dup]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[address1_dup]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].Columns[Dup Reason]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="Dup Reason"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Dup Reason]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Dup Reason]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[zip_dup]"
                      dataType="wstr"
                      length="150"
                      name="zip_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[vin_dup]"
                      dataType="wstr"
                      length="150"
                      name="vin_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[status_dup]"
                      dataType="wstr"
                      length="150"
                      name="status_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[state_dup]"
                      dataType="wstr"
                      length="150"
                      name="state_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[phone_dup]"
                      dataType="wstr"
                      length="150"
                      name="phone_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[insured_dup]"
                      dataType="wstr"
                      length="150"
                      name="insured_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[installments_dup]"
                      dataType="i4"
                      name="installments_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[coverage_dup]"
                      dataType="wstr"
                      length="150"
                      name="coverage_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[city_dup]"
                      dataType="wstr"
                      length="150"
                      name="city_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[address2_dup]"
                      dataType="wstr"
                      length="150"
                      name="address2_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[address1_dup]"
                      dataType="wstr"
                      length="150"
                      name="address1_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Dup Reason]"
                      dataType="wstr"
                      length="150"
                      name="Dup Reason" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[ACCT_NUM_dup]"
                      dataType="wstr"
                      length="150"
                      name="ACCT_NUM_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[vehicle_year_dup]"
                      dataType="i4"
                      name="vehicle_year_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[VEHICLE_Make_dup]"
                      dataType="wstr"
                      length="150"
                      name="VEHICLE_Make_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[VEHICLE_Model_dup]"
                      dataType="wstr"
                      length="150"
                      name="VEHICLE_Model_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[agent_name_dup]"
                      dataType="wstr"
                      length="150"
                      name="agent_name_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[company_name_dup]"
                      dataType="wstr"
                      length="150"
                      name="company_name_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[company_cancel_date_dup]"
                      dataType="dbTimeStamp"
                      name="company_cancel_date_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[cancel_date_dup]"
                      dataType="dbTimeStamp"
                      name="cancel_date_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[eff_date_dup]"
                      dataType="dbTimeStamp"
                      name="eff_date_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[create_date_dup]"
                      dataType="dbTimeStamp"
                      name="create_date_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[policy_num_dup]"
                      dataType="wstr"
                      length="150"
                      name="policy_num_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[payments_made_dup]"
                      dataType="i4"
                      name="payments_made_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[payments_remaining_dup]"
                      dataType="i4"
                      name="payments_remaining_dup" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get Group 3 or More Dup Vin Data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable">User::Dup_Vin_Three_or_More</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[PLINKDB1.WF_AccountNet]"
                  connectionManagerRefId="Package.ConnectionManagers[PLINKDB1.WF_AccountNet]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[vin]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[vin]"
                      length="50"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[vin]"
                      name="vin"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[ACCT_NUM]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[ACCT_NUM]"
                      length="10"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[ACCT_NUM]"
                      name="ACCT_NUM"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[status]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[status]"
                      length="50"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[status]"
                      name="status"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[insured]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[insured]"
                      length="100"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[insured]"
                      name="insured"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[address1]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[address1]"
                      length="150"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[address1]"
                      name="address1"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[address2]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[address2]"
                      length="150"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[address2]"
                      name="address2"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[city]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[city]"
                      length="50"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[city]"
                      name="city"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[state]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[state]"
                      length="50"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[state]"
                      name="state"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[zip]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[zip]"
                      length="50"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[zip]"
                      name="zip"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[vehicle_year]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[vehicle_year]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[vehicle_year]"
                      name="vehicle_year"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[VEHICLE_Make]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[VEHICLE_Make]"
                      length="50"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[VEHICLE_Make]"
                      name="VEHICLE_Make"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[VEHICLE_Model]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[VEHICLE_Model]"
                      length="50"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[VEHICLE_Model]"
                      name="VEHICLE_Model"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[agent_name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[agent_name]"
                      length="100"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[agent_name]"
                      name="agent_name"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[company_name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[company_name]"
                      length="100"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[company_name]"
                      name="company_name"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[coverage]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[coverage]"
                      length="50"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[coverage]"
                      name="coverage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[company_cancel_date]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[company_cancel_date]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[company_cancel_date]"
                      name="company_cancel_date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[cancel_date]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[cancel_date]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[cancel_date]"
                      name="cancel_date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[eff_date]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[eff_date]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[eff_date]"
                      name="eff_date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[create_date]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[create_date]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[create_date]"
                      name="create_date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[policy_num]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[policy_num]"
                      length="50"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[policy_num]"
                      name="policy_num"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[installments]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[installments]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[installments]"
                      name="installments"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[payments_made]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[payments_made]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[payments_made]"
                      name="payments_made"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[payments_remaining]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[payments_remaining]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[payments_remaining]"
                      name="payments_remaining"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[phone]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[phone]"
                      length="50"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[phone]"
                      name="phone"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[vin]"
                      dataType="wstr"
                      length="50"
                      name="vin" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[ACCT_NUM]"
                      dataType="wstr"
                      length="10"
                      name="ACCT_NUM" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[status]"
                      dataType="wstr"
                      length="50"
                      name="status" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[insured]"
                      dataType="wstr"
                      length="100"
                      name="insured" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[address1]"
                      dataType="wstr"
                      length="150"
                      name="address1" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[address2]"
                      dataType="wstr"
                      length="150"
                      name="address2" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[city]"
                      dataType="wstr"
                      length="50"
                      name="city" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[state]"
                      dataType="wstr"
                      length="50"
                      name="state" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[zip]"
                      dataType="wstr"
                      length="50"
                      name="zip" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[vehicle_year]"
                      dataType="i4"
                      name="vehicle_year" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[VEHICLE_Make]"
                      dataType="wstr"
                      length="50"
                      name="VEHICLE_Make" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[VEHICLE_Model]"
                      dataType="wstr"
                      length="50"
                      name="VEHICLE_Model" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[agent_name]"
                      dataType="wstr"
                      length="100"
                      name="agent_name" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[company_name]"
                      dataType="wstr"
                      length="100"
                      name="company_name" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[coverage]"
                      dataType="wstr"
                      length="50"
                      name="coverage" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[company_cancel_date]"
                      dataType="dbTimeStamp"
                      name="company_cancel_date" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[cancel_date]"
                      dataType="dbTimeStamp"
                      name="cancel_date" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[eff_date]"
                      dataType="dbTimeStamp"
                      name="eff_date" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[create_date]"
                      dataType="dbTimeStamp"
                      name="create_date" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[policy_num]"
                      dataType="wstr"
                      length="50"
                      name="policy_num" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[installments]"
                      dataType="i4"
                      name="installments" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[payments_made]"
                      dataType="i4"
                      name="payments_made" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[payments_remaining]"
                      dataType="i4"
                      name="payments_remaining" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[phone]"
                      dataType="wstr"
                      length="50"
                      name="phone" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[vin]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[vin]"
                      name="vin" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[ACCT_NUM]"
                      dataType="wstr"
                      length="10"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[ACCT_NUM]"
                      name="ACCT_NUM" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[status]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[status]"
                      name="status" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[insured]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[insured]"
                      name="insured" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[address1]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[address1]"
                      name="address1" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[address2]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[address2]"
                      name="address2" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[city]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[city]"
                      name="city" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[state]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[state]"
                      name="state" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[zip]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[zip]"
                      name="zip" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[vehicle_year]"
                      dataType="i4"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[vehicle_year]"
                      name="vehicle_year" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[VEHICLE_Make]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[VEHICLE_Make]"
                      name="VEHICLE_Make" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[VEHICLE_Model]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[VEHICLE_Model]"
                      name="VEHICLE_Model" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[agent_name]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[agent_name]"
                      name="agent_name" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[company_name]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[company_name]"
                      name="company_name" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[coverage]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[coverage]"
                      name="coverage" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[company_cancel_date]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[company_cancel_date]"
                      name="company_cancel_date" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[cancel_date]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[cancel_date]"
                      name="cancel_date" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[eff_date]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[eff_date]"
                      name="eff_date" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[create_date]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[create_date]"
                      name="create_date" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[policy_num]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[policy_num]"
                      name="policy_num" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[installments]"
                      dataType="i4"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[installments]"
                      name="installments" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[payments_made]"
                      dataType="i4"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[payments_made]"
                      name="payments_made" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[payments_remaining]"
                      dataType="i4"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[payments_remaining]"
                      name="payments_remaining" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[phone]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[phone]"
                      name="phone" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File"
              componentClassID="Microsoft.FlatFileDestination"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Flat File Destination"
              localeId="1033"
              name="Same Seller File">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">true</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
              </properties>
              <connections>
                <connection
                  refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Same Seller File 3 Or More]"
                  connectionManagerRefId="Package.ConnectionManagers[Same Seller File 3 Or More]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[zip_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="zip_dup"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[zip_dup]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[zip_dup]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[vin_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="vin_dup"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[vin_dup]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[vin_dup]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[status_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="status_dup"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[status_dup]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[status_dup]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[state_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="state_dup"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[state_dup]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[state_dup]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[phone_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="phone_dup"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[phone_dup]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[phone_dup]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[insured_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="insured_dup"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[insured_dup]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[insured_dup]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[installments_dup]"
                      cachedDataType="i4"
                      cachedName="installments_dup"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[installments_dup]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[installments_dup]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[coverage_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="coverage_dup"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[coverage_dup]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[coverage_dup]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[city_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="city_dup"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[city_dup]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[city_dup]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[address2_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="address2_dup"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[address2_dup]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[address2_dup]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[address1_dup]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="address1_dup"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[address1_dup]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[address1_dup]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Dup Reason]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="Dup Reason"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Dup Reason]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Dup Reason]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[zip_dup]"
                      dataType="wstr"
                      length="150"
                      name="zip_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[vin_dup]"
                      dataType="wstr"
                      length="150"
                      name="vin_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[status_dup]"
                      dataType="wstr"
                      length="150"
                      name="status_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[state_dup]"
                      dataType="wstr"
                      length="150"
                      name="state_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[phone_dup]"
                      dataType="wstr"
                      length="150"
                      name="phone_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[insured_dup]"
                      dataType="wstr"
                      length="150"
                      name="insured_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[installments_dup]"
                      dataType="i4"
                      name="installments_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[coverage_dup]"
                      dataType="wstr"
                      length="150"
                      name="coverage_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[city_dup]"
                      dataType="wstr"
                      length="150"
                      name="city_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[address2_dup]"
                      dataType="wstr"
                      length="150"
                      name="address2_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[address1_dup]"
                      dataType="wstr"
                      length="150"
                      name="address1_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Dup Reason]"
                      dataType="wstr"
                      length="150"
                      name="Dup Reason" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[ACCT_NUM_dup]"
                      dataType="wstr"
                      length="150"
                      name="ACCT_NUM_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[vehicle_year_dup]"
                      dataType="i4"
                      name="vehicle_year_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[VEHICLE_Make_dup]"
                      dataType="wstr"
                      length="150"
                      name="VEHICLE_Make_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[VEHICLE_Model_dup]"
                      dataType="wstr"
                      length="150"
                      name="VEHICLE_Model_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[agent_name_dup]"
                      dataType="wstr"
                      length="150"
                      name="agent_name_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[company_name_dup]"
                      dataType="wstr"
                      length="150"
                      name="company_name_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[company_cancel_date_dup]"
                      dataType="dbTimeStamp"
                      name="company_cancel_date_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[cancel_date_dup]"
                      dataType="dbTimeStamp"
                      name="cancel_date_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[eff_date_dup]"
                      dataType="dbTimeStamp"
                      name="eff_date_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[create_date_dup]"
                      dataType="dbTimeStamp"
                      name="create_date_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[policy_num_dup]"
                      dataType="wstr"
                      length="150"
                      name="policy_num_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[payments_made_dup]"
                      dataType="i4"
                      name="payments_made_dup" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[payments_remaining_dup]"
                      dataType="i4"
                      name="payments_remaining_dup" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Create Group 3 or More Dup Vin Excel\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="11">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Collections.Generic;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    List<RowList> ListofRows = new List<RowList>();
    bool sameSeller = false;
    bool differentSeller = false;
    bool differentAddress = false;
    int RowNum = 0;
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        RowList RowTemp = new RowList();

        if (RowNum != 0) RowTemp = ListofRows[0];

        if (ListofRows.Count == 0)
        {
            RowList tempRow = new RowList();
            updateRowInformation(tempRow, Row);

            ListofRows.Add(tempRow);
            RowNum++;
        }
        else if (RowTemp.checkVin(Row.vin))
        {
            RowList tempRow = new RowList();
            updateRowInformation(tempRow, Row);

            ListofRows.Add(tempRow);
            RowNum++;

            foreach(RowList rowx in ListofRows)
            {
                if (!RowTemp.checkAddress(rowx.address1 + " " + rowx.address2))
                    differentAddress = true;
                if (!RowTemp.checkSeller(rowx.agentname))
                    differentSeller = true;
                else
                    sameSeller = true;
            }
        }
        else if (!RowTemp.checkVin(Row.vin))
        {
            foreach (RowList rowx in ListofRows)
            {
                if (differentAddress)
                    UpdateOutput(rowx, "Different Address");
                else if (differentSeller)
                    UpdateOutput(rowx, "Different Seller");
                else if (sameSeller)
                    UpdateOutput(rowx, "Same Seller");
            }

            ListofRows.Clear();
            RowNum = 0;

            RowList tempRow = new RowList();
            updateRowInformation(tempRow, Row);

            ListofRows.Add(tempRow);
            RowNum++;
        }
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
    }

    public class RowList
    {
        public string ACCTNUM = "";
        public string address1 = "";
        public string address2 = "";
        public string agentname = "";
        public DateTime canceldate = DateTime.Today;
        public string city = "";
        public DateTime companycanceldate = DateTime.Today;
        public string companyname = "";
        public string coverage = "";
        public DateTime createdate = DateTime.Today;
        public DateTime effdate = DateTime.Today;
        public int installments = 0;
        public string insured = "";
        public int paymentsmade = 0;
        public int paymentsremaining = 0;
        public string phone = "";
        public string policynum = "";
        public string state = "";
        public string status = "";
        public string VEHICLEMake = "";
        public string VEHICLEModel = "";
        public int vehicleyear = 0;
        public string vin = "";
        public string zip = "";

        public bool checkVin(string sentVin)
        {
            return sentVin == this.vin ? true : false;
        }

        public bool checkSeller(string sentSeller)
        {
            return sentSeller == this.agentname ? true : false;
        }

        public bool checkAddress(string sentAddress)
        {
            string combinedAddress = this.address1 + " " + this.address2;
            return sentAddress == combinedAddress ? true : false;
        }
    }

    public void updateRowInformation(RowList row, Input0Buffer input)
    {
        if (!input.ACCTNUM_IsNull)
            row.ACCTNUM = input.ACCTNUM;
        if (!input.address1_IsNull)
            row.address1 = input.address1;
        if (!input.address2_IsNull)
            row.address2 = input.address2;
        if (!input.agentname_IsNull)
            row.agentname = input.agentname;
        if (!input.canceldate_IsNull)
            row.canceldate = input.canceldate;
        if (!input.city_IsNull)
            row.city = input.city;
        if (!input.companycanceldate_IsNull)
            row.companycanceldate = input.companycanceldate;
        if (!input.companyname_IsNull)
            row.companyname = input.companyname;
        if (!input.coverage_IsNull)
            row.coverage = input.coverage;
        if (!input.createdate_IsNull)
            row.createdate = input.createdate;
        if (!input.effdate_IsNull)
            row.effdate = input.effdate;
        if (!input.installments_IsNull)
            row.installments = input.installments;
        if (!input.insured_IsNull)
            row.insured = input.insured;
        if (!input.paymentsmade_IsNull)
            row.paymentsmade = input.paymentsmade;
        if (!input.paymentsremaining_IsNull)
            row.paymentsremaining = input.paymentsremaining;
        if (!input.phone_IsNull)
            row.phone = input.phone;
        if (!input.policynum_IsNull)
            row.policynum = input.policynum;
        if (!input.state_IsNull)
            row.state = input.state;
        if (!input.status_IsNull)
            row.status = input.status;
        if (!input.VEHICLEMake_IsNull)
            row.VEHICLEMake = input.VEHICLEMake;
        if (!input.VEHICLEModel_IsNull)
            row.VEHICLEModel = input.VEHICLEModel;
        if (!input.vehicleyear_IsNull)
            row.vehicleyear = input.vehicleyear;
        if (!input.vin_IsNull)
            row.vin = input.vin;
        if (!input.zip_IsNull)
            row.zip = input.zip;
    }

    public void UpdateOutput(RowList rowx, string Reason)
    {
        Output0Buffer.AddRow();
        Output0Buffer.ACCTNUMdup = rowx.ACCTNUM;
        Output0Buffer.address1dup = rowx.address1;
        Output0Buffer.address2dup = rowx.address2;
        Output0Buffer.agentnamedup = rowx.agentname;
        Output0Buffer.canceldatedup = rowx.canceldate;
        Output0Buffer.citydup = rowx.city;
        Output0Buffer.companycanceldatedup = rowx.companycanceldate;
        Output0Buffer.companynamedup = rowx.companyname;
        Output0Buffer.coveragedup = rowx.coverage;
        Output0Buffer.createdatedup = rowx.createdate;
        Output0Buffer.effdatedup = rowx.effdate;
        Output0Buffer.installmentsdup = rowx.installments;
        Output0Buffer.insureddup = rowx.insured;
        Output0Buffer.paymentsmadedup = rowx.paymentsmade;
        Output0Buffer.paymentsremainingdup = rowx.paymentsremaining;
        Output0Buffer.phonedup = rowx.phone;
        Output0Buffer.policynumdup = rowx.policynum;
        Output0Buffer.statedup = rowx.state;
        Output0Buffer.statusdup = rowx.status;
        Output0Buffer.VEHICLEMakedup = rowx.VEHICLEMake;
        Output0Buffer.VEHICLEModeldup = rowx.VEHICLEModel;
        Output0Buffer.vehicleyeardup = rowx.vehicleyear;
        Output0Buffer.vindup = rowx.vin;
        Output0Buffer.zipdup = rowx.zip;
        Output0Buffer.DupReason = Reason;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String vin
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool vin_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String ACCTNUM
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool ACCTNUM_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String status
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool status_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String insured
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool insured_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String address1
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool address1_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String address2
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool address2_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String city
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool city_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public String state
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[7]);
        }
    }
    public bool state_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    public String zip
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[8]);
        }
    }
    public bool zip_IsNull
    {
        get
        {
            return IsNull(8);
        }
    }

    public Int32 vehicleyear
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[9]);
        }
    }
    public bool vehicleyear_IsNull
    {
        get
        {
            return IsNull(9);
        }
    }

    public String VEHICLEMake
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[10]);
        }
    }
    public bool VEHICLEMake_IsNull
    {
        get
        {
            return IsNull(10);
        }
    }

    public String VEHICLEModel
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[11]);
        }
    }
    public bool VEHICLEModel_IsNull
    {
        get
        {
            return IsNull(11);
        }
    }

    public String agentname
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[12]);
        }
    }
    public bool agentname_IsNull
    {
        get
        {
            return IsNull(12);
        }
    }

    public String companyname
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[13]);
        }
    }
    public bool companyname_IsNull
    {
        get
        {
            return IsNull(13);
        }
    }

    public String coverage
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[14]);
        }
    }
    public bool coverage_IsNull
    {
        get
        {
            return IsNull(14);
        }
    }

    public DateTime companycanceldate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[15]);
        }
    }
    public bool companycanceldate_IsNull
    {
        get
        {
            return IsNull(15);
        }
    }

    public DateTime canceldate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[16]);
        }
    }
    public bool canceldate_IsNull
    {
        get
        {
            return IsNull(16);
        }
    }

    public DateTime effdate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[17]);
        }
    }
    public bool effdate_IsNull
    {
        get
        {
            return IsNull(17);
        }
    }

    public DateTime createdate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[18]);
        }
    }
    public bool createdate_IsNull
    {
        get
        {
            return IsNull(18);
        }
    }

    public String policynum
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[19]);
        }
    }
    public bool policynum_IsNull
    {
        get
        {
            return IsNull(19);
        }
    }

    public Int32 installments
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[20]);
        }
    }
    public bool installments_IsNull
    {
        get
        {
            return IsNull(20);
        }
    }

    public Int32 paymentsmade
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[21]);
        }
    }
    public bool paymentsmade_IsNull
    {
        get
        {
            return IsNull(21);
        }
    }

    public Int32 paymentsremaining
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[22]);
        }
    }
    public bool paymentsremaining_IsNull
    {
        get
        {
            return IsNull(22);
        }
    }

    public String phone
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[23]);
        }
    }
    public bool phone_IsNull
    {
        get
        {
            return IsNull(23);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String vindup
    {
        set
        {
            this[0] = value;
        }
    }
    public bool vindup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ACCTNUMdup
    {
        set
        {
            this[1] = value;
        }
    }
    public bool ACCTNUMdup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String statusdup
    {
        set
        {
            this[2] = value;
        }
    }
    public bool statusdup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String insureddup
    {
        set
        {
            this[3] = value;
        }
    }
    public bool insureddup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String address1dup
    {
        set
        {
            this[4] = value;
        }
    }
    public bool address1dup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String address2dup
    {
        set
        {
            this[5] = value;
        }
    }
    public bool address2dup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String citydup
    {
        set
        {
            this[6] = value;
        }
    }
    public bool citydup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String statedup
    {
        set
        {
            this[7] = value;
        }
    }
    public bool statedup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String zipdup
    {
        set
        {
            this[8] = value;
        }
    }
    public bool zipdup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 vehicleyeardup
    {
        set
        {
            this[9] = value;
        }
    }
    public bool vehicleyeardup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String VEHICLEMakedup
    {
        set
        {
            this[10] = value;
        }
    }
    public bool VEHICLEMakedup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String VEHICLEModeldup
    {
        set
        {
            this[11] = value;
        }
    }
    public bool VEHICLEModeldup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String agentnamedup
    {
        set
        {
            this[12] = value;
        }
    }
    public bool agentnamedup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String companynamedup
    {
        set
        {
            this[13] = value;
        }
    }
    public bool companynamedup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String coveragedup
    {
        set
        {
            this[14] = value;
        }
    }
    public bool coveragedup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime companycanceldatedup
    {
        set
        {
            this[15] = value;
        }
    }
    public bool companycanceldatedup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime canceldatedup
    {
        set
        {
            this[16] = value;
        }
    }
    public bool canceldatedup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime effdatedup
    {
        set
        {
            this[17] = value;
        }
    }
    public bool effdatedup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(17);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime createdatedup
    {
        set
        {
            this[18] = value;
        }
    }
    public bool createdatedup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(18);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String policynumdup
    {
        set
        {
            this[19] = value;
        }
    }
    public bool policynumdup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(19);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 installmentsdup
    {
        set
        {
            this[20] = value;
        }
    }
    public bool installmentsdup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(20);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 paymentsmadedup
    {
        set
        {
            this[21] = value;
        }
    }
    public bool paymentsmadedup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(21);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 paymentsremainingdup
    {
        set
        {
            this[22] = value;
        }
    }
    public bool paymentsremainingdup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(22);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String phonedup
    {
        set
        {
            this[23] = value;
        }
    }
    public bool phonedup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(23);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String DupReason
    {
        set
        {
            this[24] = value;
        }
    }
    public bool DupReason_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(24);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7fc34cba62d741e197e7d32604e64cc5.Properties.Settings.get_Default():SC_7fc34cba62d741e197e7d32604e64cc5.Properties.Sett" +
    "ings")]

namespace SC_7fc34cba62d741e197e7d32604e64cc5.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7fc34cba62d741e197e7d32604e64cc5.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7fc34cba62d741e197e7d32604e64cc5.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7fc34cba62d741e197e7d32604e64cc5.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_7fc34cba62d741e197e7d32604e64cc5.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_7fc34cba62d741e197e7d32604e64cc5.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_7fc34cba62d741e197e7d32604e64cc5</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_7fc34cba62d741e197e7d32604e64cc5</msb:DisplayName>
		<msb:ProjectId>{1976F501-3710-4ED8-B501-5E9E894BDC52}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_7fc34cba62d741e197e7d32604e64cc5.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_7fc34cba62d741e197e7d32604e64cc5")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_7fc34cba62d741e197e7d32604e64cc5")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_7fc34cba62d741e197e7d32604e64cc5.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{ef4943b7-7334-49d7-b3ab-70102d21c7a9}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_7fc34cba62d741e197e7d32604e64cc5</RootNamespace>
    <AssemblyName>SC_7fc34cba62d741e197e7d32604e64cc5</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_7fc34cba62d741e197e7d32604e64cc5" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_7fc34cba62d741e197e7d32604e64cc5.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDABDf3FkAAAAAAAAAAOAAIiALATAAADgAAAAIAAAAAAAAulYA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAGhWAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAwDYAAAAgAAAAOAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAA6AAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAQAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACc
VgAAAAAAAEgAAAACAAUAaC8AAEgmAAABAAAAAAAAALBVAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACiobMAQAxQEAAAEAABFzhQAABgoC
ewUAAAQsDQJ7AQAABBZvEgAACgoCewEAAARvEwAACi0pc4UAAAYLAgcDKAUAAAYCewEAAAQHbxQA
AAoCAnsFAAAEF1h9BQAABCoGA28JAAAGb4IAAAY5oQAAAHOFAAAGDAIIAygFAAAGAnsBAAAECG8U
AAAKAgJ7BQAABBdYfQUAAAQCewEAAARvFQAACg0rTxIDKBYAAAoTBAYRBHsQAAAEcgEAAHARBHsR
AAAEKBcAAApvhAAABi0HAhd9BAAABAYRBHsSAAAEb4MAAAYtCQIXfQMAAAQrBwIXfQIAAAQSAygY
AAAKLajdzwAAABID/hYCAAAbbxkAAArcBgNvCQAABm+CAAAGOrAAAAACewEAAARvFQAACg0rTBID
KBYAAAoTBgJ7BAAABCwPAhEGcgUAAHAoBgAABissAnsDAAAELA8CEQZyKQAAcCgGAAAGKxUCewIA
AAQsDQIRBnJLAABwKAYAAAYSAygYAAAKLaveDhID/hYCAAAbbxkAAArcAnsBAAAEbxoAAAoCFn0F
AAAEc4UAAAYTBQIRBQMoBQAABgJ7AQAABBEFbxQAAAoCAnsFAAAEF1h9BQAABCoAAAABHAAAAgCW
AF/1AA4AAAAAAgAgAVl5AQ4AAAAABioAABMwAgDhAQAAAAAAAARvDAAABi0MAwRvCwAABn0PAAAE
BG8SAAAGLQwDBG8RAAAGfRAAAAQEbxQAAAYtDAMEbxMAAAZ9EQAABARvIgAABi0MAwRvIQAABn0S
AAAEBG8qAAAGLQwDBG8pAAAGfRMAAAQEbxYAAAYtDAMEbxUAAAZ9FAAABARvKAAABi0MAwRvJwAA
Bn0VAAAEBG8kAAAGLQwDBG8jAAAGfRYAAAQEbyYAAAYtDAMEbyUAAAZ9FwAABARvLgAABi0MAwRv
LQAABn0YAAAEBG8sAAAGLQwDBG8rAAAGfRkAAAQEbzIAAAYtDAMEbzEAAAZ9GgAABARvEAAABi0M
AwRvDwAABn0bAAAEBG80AAAGLQwDBG8zAAAGfRwAAAQEbzYAAAYtDAMEbzUAAAZ9HQAABARvOAAA
Bi0MAwRvNwAABn0eAAAEBG8wAAAGLQwDBG8vAAAGfR8AAAQEbxgAAAYtDAMEbxcAAAZ9IAAABARv
DgAABi0MAwRvDQAABn0hAAAEBG8eAAAGLQwDBG8dAAAGfSIAAAQEbyAAAAYtDAMEbx8AAAZ9IwAA
BARvHAAABi0MAwRvGwAABn0kAAAEBG8KAAAGLQwDBG8JAAAGfSUAAAQEbxoAAAYtDAMEbxkAAAZ9
JgAABCoAAAATMAIAsAEAAAAAAAACewgAAARvbgAABgJ7CAAABAN7DwAABG8+AAAGAnsIAAAEA3sQ
AAAEb0QAAAYCewgAAAQDexEAAARvRgAABgJ7CAAABAN7EgAABG9UAAAGAnsIAAAEA3sTAAAEb1wA
AAYCewgAAAQDexQAAARvSAAABgJ7CAAABAN7FQAABG9aAAAGAnsIAAAEA3sWAAAEb1YAAAYCewgA
AAQDexcAAARvWAAABgJ7CAAABAN7GAAABG9gAAAGAnsIAAAEA3sZAAAEb14AAAYCewgAAAQDexoA
AARvZAAABgJ7CAAABAN7GwAABG9CAAAGAnsIAAAEA3scAAAEb2YAAAYCewgAAAQDex0AAARvaAAA
BgJ7CAAABAN7HgAABG9qAAAGAnsIAAAEA3sfAAAEb2IAAAYCewgAAAQDeyAAAARvSgAABgJ7CAAA
BAN7IQAABG9AAAAGAnsIAAAEA3siAAAEb1AAAAYCewgAAAQDeyMAAARvUgAABgJ7CAAABAN7JAAA
BG9OAAAGAnsIAAAEA3slAAAEbzwAAAYCewgAAAQDeyYAAARvTAAABgJ7CAAABARvbAAABipKAnMb
AAAKfQEAAAQCKHEAAAYqKgIDBAUoHAAACipSAnsdAAAKAnseAAAKFpRvHwAACioiAhYoIAAACipS
AnsdAAAKAnseAAAKF5RvHwAACioiAhcoIAAACipSAnsdAAAKAnseAAAKGJRvHwAACioiAhgoIAAA
CipSAnsdAAAKAnseAAAKGZRvHwAACioiAhkoIAAACipSAnsdAAAKAnseAAAKGpRvHwAACioiAhoo
IAAACipSAnsdAAAKAnseAAAKG5RvHwAACioiAhsoIAAACipSAnsdAAAKAnseAAAKHJRvHwAACioi
AhwoIAAACipSAnsdAAAKAnseAAAKHZRvHwAACioiAh0oIAAACipSAnsdAAAKAnseAAAKHpRvHwAA
CioiAh4oIAAACipWAnsdAAAKAnseAAAKHwmUbyEAAAoqJgIfCSggAAAKKlYCex0AAAoCex4AAAof
CpRvHwAACiomAh8KKCAAAAoqVgJ7HQAACgJ7HgAACh8LlG8fAAAKKiYCHwsoIAAACipWAnsdAAAK
AnseAAAKHwyUbx8AAAoqJgIfDCggAAAKKlYCex0AAAoCex4AAAofDZRvHwAACiomAh8NKCAAAAoq
VgJ7HQAACgJ7HgAACh8OlG8fAAAKKiYCHw4oIAAACipWAnsdAAAKAnseAAAKHw+UbyIAAAoqJgIf
DyggAAAKKlYCex0AAAoCex4AAAofEJRvIgAACiomAh8QKCAAAAoqVgJ7HQAACgJ7HgAACh8RlG8i
AAAKKiYCHxEoIAAACipWAnsdAAAKAnseAAAKHxKUbyIAAAoqJgIfEiggAAAKKlYCex0AAAoCex4A
AAofE5RvHwAACiomAh8TKCAAAAoqVgJ7HQAACgJ7HgAACh8UlG8hAAAKKiYCHxQoIAAACipWAnsd
AAAKAnseAAAKHxWUbyEAAAoqJgIfFSggAAAKKlYCex0AAAoCex4AAAofFpRvIQAACiomAh8WKCAA
AAoqVgJ7HQAACgJ7HgAACh8XlG8fAAAKKiYCHxcoIAAACioeAigjAAAKKh4CKCQAAAoqJgIWAygl
AAAKKloDLAgCFigmAAAKKnJjAABwcycAAAp6JgIXAyglAAAKKloDLAgCFygmAAAKKnJjAABwcycA
AAp6JgIYAyglAAAKKloDLAgCGCgmAAAKKnJjAABwcycAAAp6JgIZAyglAAAKKloDLAgCGSgmAAAK
KnJjAABwcycAAAp6JgIaAyglAAAKKloDLAgCGigmAAAKKnJjAABwcycAAAp6JgIbAyglAAAKKloD
LAgCGygmAAAKKnJjAABwcycAAAp6JgIcAyglAAAKKloDLAgCHCgmAAAKKnJjAABwcycAAAp6JgId
AyglAAAKKloDLAgCHSgmAAAKKnJjAABwcycAAAp6JgIeAyglAAAKKloDLAgCHigmAAAKKnJjAABw
cycAAAp6PgIfCQOMIAAAASglAAAKKl4DLAkCHwkoJgAACipyYwAAcHMnAAAKeioCHwoDKCUAAAoq
XgMsCQIfCigmAAAKKnJjAABwcycAAAp6KgIfCwMoJQAACipeAywJAh8LKCYAAAoqcmMAAHBzJwAA
CnoqAh8MAyglAAAKKl4DLAkCHwwoJgAACipyYwAAcHMnAAAKeioCHw0DKCUAAAoqXgMsCQIfDSgm
AAAKKnJjAABwcycAAAp6KgIfDgMoJQAACipeAywJAh8OKCYAAAoqcmMAAHBzJwAACno+Ah8PA4wR
AAABKCUAAAoqXgMsCQIfDygmAAAKKnJjAABwcycAAAp6PgIfEAOMEQAAASglAAAKKl4DLAkCHxAo
JgAACipyYwAAcHMnAAAKej4CHxEDjBEAAAEoJQAACipeAywJAh8RKCYAAAoqcmMAAHBzJwAACno+
Ah8SA4wRAAABKCUAAAoqXgMsCQIfEigmAAAKKnJjAABwcycAAAp6KgIfEwMoJQAACipeAywJAh8T
KCYAAAoqcmMAAHBzJwAACno+Ah8UA4wgAAABKCUAAAoqXgMsCQIfFCgmAAAKKnJjAABwcycAAAp6
PgIfFQOMIAAAASglAAAKKl4DLAkCHxUoJgAACipyYwAAcHMnAAAKej4CHxYDjCAAAAEoJQAACipe
AywJAh8WKCYAAAoqcmMAAHBzJwAACnoqAh8XAyglAAAKKl4DLAkCHxcoJgAACipyYwAAcHMnAAAK
eioCHxgDKCUAAAoqXgMsCQIfGCgmAAAKKnJjAABwcycAAAp6HgIoKAAACioeAigpAAAKKn4CKCoA
AAoCAnN5AAAGfQYAAAQCAnN6AAAGfQcAAAQqAAAAEzAEAE8AAAAAAAAABHIAAQBwGm8rAAAKLBUC
BQIDKCwAAAoOBHMIAAAGb3cAAAYFby0AAAosIwICewkAAAQXWH0JAAAEAnsJAAAEFzMMAm9zAAAG
Aih0AAAGKm4CewgAAAQsEgJ7CAAABG9vAAAGAhR9CAAABCoAEzAFAD0AAAACAAARFgorLgQGlA4E
chABAHAoLgAACjMZAgUGmgIEBpQoLAAACg4EczsAAAZ9CAAABAYXWAoGAzLOAm92AAAGKkorBwID
b3gAAAYDbzkAAAYt8So6AigvAAAKAgN9CgAABCo6AigvAAAKAgN9CwAABCoeAigvAAAKKq5+DAAA
BC0eciIBAHDQCAAAAigwAAAKbzEAAApzMgAACoAMAAAEfgwAAAQqGn4NAAAEKh4CgA0AAAQqGn4O
AAAEKh4CKDMAAAoqLnOAAAAGgA4AAAQqSgMCeyUAAAQoNAAACi0CFioXKkoDAnsSAAAEKDQAAAot
AhYqFyoAABMwAwAkAAAAAwAAEQJ7EAAABHIBAABwAnsRAAAEKBcAAAoKAwYoNAAACi0CFioXKhMw
AgDjAAAAAAAAAAJylAEAcH0PAAAEAnKUAQBwfRAAAAQCcpQBAHB9EQAABAJylAEAcH0SAAAEAig1
AAAKfRMAAAQCcpQBAHB9FAAABAIoNQAACn0VAAAEAnKUAQBwfRYAAAQCcpQBAHB9FwAABAIoNQAA
Cn0YAAAEAig1AAAKfRkAAAQCcpQBAHB9GwAABAJylAEAcH0eAAAEAnKUAQBwfR8AAAQCcpQBAHB9
IAAABAJylAEAcH0hAAAEAnKUAQBwfSIAAAQCcpQBAHB9IwAABAJylAEAcH0lAAAEAnKUAQBwfSYA
AAQCKC8AAAoqAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAALQSAAAjfgAAIBMA
ACAPAAAjU3RyaW5ncwAAAABAIgAAmAEAACNVUwDYIwAAEAAAACNHVUlEAAAA6CMAAGACAAAjQmxv
YgAAAAAAAAACAAABVxWiCQkDAAAA+gEzABYAAAEAAAAkAAAACgAAACYAAACFAAAATQAAADUAAAAQ
AAAAAwAAAAQAAABlAAAAZgAAAAIAAAABAAAABAAAAAEAAAABAAAAAABkBAEAAAAAAAYANANMDAYA
yANMDAYAgAI5DA8AwAwAAAYArQJ2CQYAFwN2CQYA+AJ2CQYArwN2CQYAVAN2CQYAbQN2CQYAxAJ2
CQYA3wIZBAoAiANxAQYAAQCBADsAFwwAAAYAyw3rCAYAaAHrCAoAwQtxAQ4AsgtxAQoAzQlxAQoA
Gw5xAQYAYwI5DAYA0gtsDAYAwQlhCRIAKQJOBBIAlAJOBBIAyQFMCQYASAJMDAYANgTrCAYADQHr
CAYAiAnrCAYAGADrCAYAsAnrCAYAnAHrCAYAGQHrCAYAAA92CQAAAABPAAAAAAABAAEAAQAQACQJ
AAAUAAEAAQABABAAlwsAAEkABgAIAAEAEACkCwAASQAGADsAAQAQAP0NAABVAAYAcQABABAAPQ0A
AEEACgB5AAEAEAD+DAAAQQALAHoAAAAQAHMMzwxBAAwAewAAARAALQ3PDG0ADgB/AAIAEABeDgAA
QQAPAIIAAQClDeUAAQDiC+0AAQD5C+0AAQBeDe0AAQDyCPAABgA9DfMABgD+DPcABgCkC/sAAQCg
APAAAQALDv8AAQALDv8AEQAHCQMBEQC5AQcBEQDPAAsBBgBwAA8BBgAMAA8BBgAiAA8BBgBLAQ8B
BgAeAhIBBgANDw8BBgAXAhIBBgBZAQ8BBgD0AA8BBgDtARIBBgD8ARIBBgB/DfAABgDHAA8BBgDj
APAABgAHBPAABgCWAQ8BBgD9CA8BBgBCAg8BBgCeDQ8BBgABAQ8BBgBBBA8BBgCLC/AABgAzCQ8B
BgDpCQ8BUCAAAAAAxgDmAwYAAQBYIAAAAADGAPEDBgABAGAgAAAAAMYAyg4WAQEAUCIAAAAAxgCw
DQYAAgBUIgAAAACGADcJHAECAEQkAAAAAIYArQ4kAQQAACYAAAAAhhgiDAYABgATJgAAAACGGCIM
ZwAGAB4mAAAAAIYILwkrAQkAMyYAAAAAhggRBmMACQA8JgAAAACGCGwAKwEJAFEmAAAAAIYItARj
AAkAWiYAAAAAhgiaDSsBCQBvJgAAAACGCK8IYwAJAHgmAAAAAIYIwwArAQkAjSYAAAAAhgjHBGMA
CQCWJgAAAACGCAgAKwEJAKsmAAAAAIYIjARjAAkAtCYAAAAAhggeACsBCQDJJgAAAACGCKAEYwAJ
ANImAAAAAIYICQ8rAQkA5yYAAAAAhgjBCGMACQDwJgAAAACGCD4CKwEJAAUnAAAAAIYItgVjAAkA
DicAAAAAhgjlCSsBCQAjJwAAAACGCDUGYwAJACwnAAAAAIYIhws9AAkAQicAAAAAhgiACGMACQBM
JwAAAACGCP0AKwEJAGInAAAAAIYIBgVjAAkAbCcAAAAAhgg9BCsBCQCCJwAAAACGCOQFYwAJAIwn
AAAAAIYIRwErAQkAoicAAAAAhggdBWMACQCsJwAAAACGCFUBKwEJAMInAAAAAIYIMgVjAAkAzCcA
AAAAhgjwACsBCQDiJwAAAACGCPIEYwAJAOwnAAAAAIYIEwIvAQkAAigAAAAAhgiZBWMACQAMKAAA
AACGCAQCLwEJACIoAAAAAIYIgwVjAAkALCgAAAAAhgj4AS8BCQBCKAAAAACGCHAFYwAJAEwoAAAA
AIYI6QEvAQkAYigAAAAAhghaBWMACQBsKAAAAACGCPkIKwEJAIIoAAAAAIYI/AVjAAkAjCgAAAAA
hgh7DT0ACQCiKAAAAACGCJcIYwAJAKwoAAAAAIYI3wA9AAkAwigAAAAAhgjaBGMACQDMKAAAAACG
CAMEPQAJAOIoAAAAAIYIxwVjAAkA7CgAAAAAhgiSASsBCQACKQAAAACGCEkFYwAJAAwpAAAAAIYA
4Q5jAAkAFCkAAAAAhgDlDWMACQATJgAAAACGGCIMZwAJABwpAAAAAIYIKgsQAAwAJikAAAAAhgj/
BzQBDQA9KQAAAACGCA0KEAAOAEcpAAAAAIYIcgY0AQ8AXikAAAAAhghnCxAAEABoKQAAAACGCFgI
NAERAH8pAAAAAIYIHAoQABIAiSkAAAAAhgiIBjQBEwCgKQAAAACGCO0JEAAUAKopAAAAAIYIRAY0
ARUAwSkAAAAAhgj9CRAAFgDLKQAAAACGCFsGNAEXAOIpAAAAAIYIdQsQABgA7CkAAAAAhghtCDQB
GQADKgAAAACGCN8KEAAaAA0qAAAAAIYImAc0ARsAJCoAAAAAhgg1CxAAHAAuKgAAAACGCBEINAEd
AEUqAAAAAIYIQAsBAB4AVSoAAAAAhggjCDQBHwBtKgAAAACGCE8KEAAgAHgqAAAAAIYI0AY0ASEA
kCoAAAAAhggFCxAAIgCbKgAAAACGCMwHNAEjALMqAAAAAIYIYgoQACQAvioAAAAAhgjqBjQBJQDW
KgAAAACGCHMKEAAmAOEqAAAAAIYIAgc0AScA+SoAAAAAhgg/ChAAKAAEKwAAAACGCLkGNAEpABwr
AAAAAIYIxgo5ASoALCsAAAAAhgh4BzQBKwBEKwAAAACGCLQKOQEsAFQrAAAAAIYIXwc0AS0AbCsA
AAAAhgilCjkBLgB8KwAAAACGCEkHNAEvAJQrAAAAAIYIkwo5ATAApCsAAAAAhggwBzQBMQC8KwAA
AACGCBkLEAAyAMcrAAAAAIYI5wc0ATMA3ysAAAAAhghTCwEANADvKwAAAACGCD0INAE1AAcsAAAA
AIYIKwoBADYAFywAAAAAhgieBjQBNwAvLAAAAACGCOwKAQA4AD8sAAAAAIYIrAc0ATkAVywAAAAA
hgiGChAAOgBiLAAAAACGCBwHNAE7AHosAAAAAIYIogkQADwAhSwAAAAAhgggBjQBPQCdLAAAAACG
AMMOBgA+AKUsAAAAAIYA4g0GAD4AFCkAAAAAhgDlDWMAPgCtLAAAAACGGCIMBgA+ANAsAAAAAMYA
jg4/AT4AUCIAAAAAxgGMDQYAQgArLQAAAACBAK8ABgBCAEgtAAAAAMYAoQ5JAUIAUCIAAAAAxgGw
DQYARgCRLQAAAADGAYcOFgFGAFAiAAAAAMYByg4WAUcApC0AAAAAhhgiDFUBSACzLQAAAACGGCIM
VQFJAMItAAAAAIMYIgwGAEoAyi0AAAAAkwjOC1sBSgD2LQAAAACTCKEBYAFKAP0tAAAAAJMIrQFl
AUoABS4AAAAAlgjxDWsBSwAMLgAAAACGGCIMBgBLABQuAAAAAJEYKAxwAUsAIC4AAAAAhgATCXQB
SwAzLgAAAACGAO0LdAFMAEguAAAAAIYAUQ10AU0AeC4AAAAAhhgiDAYATgAAAAEA5Q4AAAEA6Q4A
AAIAmw4AAAEA7Q4AAAIAqQkAAAEAxwsAAAIACA0AAAMA2wkAAAEAxwsAAAIACA0AAAMA2wkAAAEA
/QMAAAEA/QMAAAEA/QMAAAEA/QMAAAEA/QMAAAEA/QMAAAEA/QMAAAEA/QMAAAEA/QMAAAEA/QMA
AAEA/QMAAAEA/QMAAAEA/QMAAAEA/QMAAAEA/QMAAAEA/QMAAAEA/QMAAAEA/QMAAAEA/QMAAAEA
/QMAAAEA/QMAAAEA/QMAAAEA/QMAAAEA/QMAAAEA/QMAAAEA/QMAAAEA/QMAAAEA/QMAAAEA/QMA
AAEA/QMAAAEA/QMAAAEA/QMAAAEA/QMAAAEA/QMAAAEA/QMAAAEA/QMAAAEA/QMAAAEA/QMAAAEA
/QMAAAEA/QMAAAEA/QMAAAEA/QMAAAEA/QMAAAEA/QMAAAEA/QMAAAEA/QMAAAEA/QMAAAEA/QMA
AAEA/QMAAAEA/QMAAAEAWAAAAAIAPQEAAAMAxwsAAAQA2wkAAAEAkg0AAAIALwwAAAMASQ0AAAQA
2wkAAAEAxwsAAAEA5Q4AAAEAIQ4AAAEAIQ4AAAEA/QMAAAEAHAkAAAEACQwAAAEAbw0JACIMAQAR
ACIMBgAZACIMCgApACIMEAAxACIMEAA5ACIMEABBACIMEABJACIMEABRACIMEABZACIMEABhACIM
EABpACIMBgCxACIMBgDRACIMFQDhACIMBgCpAOYDBgCpAPEDBgAMANkINwAMADcOPQAMAJwAQQAM
ABQMRwAUACsOVwDpAMQNXAAUALoOYwDxAOEBBgAMAIELBgAMACIMBgCRACIMZwCRAMcLcQCRAAgN
dQCZADMEeQCRAMoIfgCZABUAgwCZAGUBiACRAOEOYwCRAOUNYwCRAOIIjgCRANEIAQD5ACIMEACR
AMMOBgCRAOINBgCpACIMBgDpADYNlACpABwNnACZANINYwCpAGAApgCBACIMBgARASsBrQARAfwO
tgC5ACIMvADZACIMBgDpABIPxACJAPIOzgAuAAsAmQEuABMAogEuABsAwQEuACMAygEuACsA8wEu
ADMA8wEuADsA8wEuAEMAygEuAEsA+QEuAFMA8wEuAFsAEAJDAGMAWgIDAWsAWgLBAXsAWgJpDHMA
wQGJDHMAwQEbAKIAygADAAEABAAxAAgAYwAJAGUAAAAzCXkBAAAVBn0BAABwAHkBAAC4BH0BAACe
DXkBAACzCH0BAADHAHkBAADLBH0BAAAMAHkBAACQBH0BAAAiAHkBAACkBH0BAAAND3kBAADFCH0B
AABCAnkBAAC6BX0BAADpCXkBAAA5Bn0BAACLC4EBAACECH0BAAABAXkBAAAKBX0BAABBBHkBAADo
BX0BAABLAXkBAAAhBX0BAABZAXkBAAA2BX0BAAD0AHkBAAD2BH0BAAAXAoUBAACdBX0BAAAeAoUB
AACkBX0BAAD8AYUBAAB0BX0BAADtAYUBAABeBX0BAAD9CHkBAAAABn0BAAB/DYEBAACbCH0BAADj
AIEBAADeBH0BAAAHBIEBAADLBX0BAACWAXkBAABNBX0BAAAuC3kBAAADCH0BAAARCnkBAAB2Bn0B
AABrC3kBAABcCH0BAAAgCnkBAACMBn0BAADxCXkBAABIBn0BAAABCnkBAABfBn0BAAB5C3kBAABx
CH0BAADjCnkBAACcB30BAAA5C3kBAAAVCH0BAABEC4EBAAAnCH0BAABTCnkBAADUBn0BAAAJC3kB
AADQB30BAABmCnkBAADuBn0BAAB3CnkBAAAGB30BAABDCnkBAAC9Bn0BAADKCoUBAAB8B30BAADR
CoUBAACDB30BAACpCoUBAABNB30BAACXCoUBAAA0B30BAAAdC3kBAADrB30BAABXC4EBAABBCH0B
AAAvCoEBAACiBn0BAADwCoEBAACwB30BAACKCnkBAAAgB30BAACmCXkBAAAkBn0BAADSC4oBAADB
AY8BAAD1DZQBAgAJAAMAAgAKAAUAAgALAAcAAgAMAAkAAgANAAsAAgAOAA0AAgAPAA8AAgAQABEA
AgARABMAAgASABUAAgATABcAAgAUABkAAgAVABsAAgAWAB0AAgAXAB8AAgAYACEAAgAZACMAAgAa
ACUAAgAbACcAAgAcACkAAgAdACsAAgAeAC0AAgAfAC8AAgAgADEAAgAhADMAAgAiADUAAgAjADcA
AgAkADkAAgAlADsAAgAmAD0AAgAnAD8AAgAoAEEAAgApAEMAAgAqAEUAAgArAEcAAgAsAEkAAgAt
AEsAAgAuAE0AAgAvAE8AAgAwAFEAAgAxAFMAAgAyAFUAAgAzAFcAAgA0AFkAAgA1AFsAAgA2AF0A
AgA3AF8AAgA4AGEAAQA8AGMAAQA9AGUAAQA+AGcAAQA/AGkAAQBAAGsAAQBBAG0AAQBCAG8AAQBD
AHEAAQBEAHMAAQBFAHUAAQBGAHcAAQBHAHkAAQBIAHsAAQBJAH0AAQBKAH8AAQBLAIEAAQBMAIMA
AQBNAIUAAQBOAIcAAQBPAIkAAQBQAIsAAQBRAI0AAQBSAI8AAQBTAJEAAQBUAJMAAQBVAJUAAQBW
AJcAAQBXAJkAAQBYAJsAAQBZAJ0AAQBaAJ8AAQBbAKEAAQBcAKMAAQBdAKUAAQBeAKcAAQBfAKkA
AQBgAKsAAQBhAK0AAQBiAK8AAQBjALEAAQBkALMAAQBlALUAAQBmALcAAQBnALkAAQBoALsAAQBp
AL0AAQBqAL8AAQBrAMEAAQBsAMMAAQBtAMUAAgB8AMcAAgB9AMkAAQB+AMkAAgB/AMsAMABQAASA
AAABAAAAAAAAAAAAAAAAACsAAAAEAAAAAAAAAAAAAADTAHgAAAAAAA4AAAAAAAAAAAAAANwAQQ4A
AAAADgAAAAAAAAAAAAAA3ABmDgAAAAAEAAAAAAAAAAAAAADTAOsIAAAAAAAAAAABAAAAfQwAAAoA
AgAAAABMaXN0YDEAZ2V0X2FkZHJlc3MxAEdldEludDMyAGdldF9hZGRyZXNzMgBTQ183ZmMzNGNi
YTYyZDc0MWUxOTdlN2QzMjYwNGU2NGNjNQA8TW9kdWxlPgBJbnB1dElEAEdldE91dHB1dElEAGdl
dF9BQ0NUTlVNAG1zY29ybGliAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAEFkZABJbnB1dHNG
aW5pc2hlZABNYXJrT3V0cHV0c0ZpbmlzaGVkAGdldF9pbnN1cmVkAGRlZmF1bHRJbnN0YW5jZQBn
ZXRfcGF5bWVudHNtYWRlAGdldF9jb3ZlcmFnZQBnZXRfVkVISUNMRU1ha2UASURpc3Bvc2FibGUA
UnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUASW5wdXROYW1lAGdldF9hZ2VudG5h
bWUAZ2V0X2NvbXBhbnluYW1lAEdldERhdGVUaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBp
cGVsaW5lAGdldF9waG9uZQBUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3Vs
dHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBEaXNwb3NlAGdldF9jcmVhdGVkYXRlAGdldF9l
ZmZkYXRlAGdldF9jYW5jZWxkYXRlAGdldF9jb21wYW55Y2FuY2VsZGF0ZQBFZGl0b3JCcm93c2Fi
bGVTdGF0ZQBnZXRfc3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25V
c2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJp
YnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRh
cmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNz
ZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRl
AEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lT
U2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQB2
YWx1ZQBnZXRfcGF5bWVudHNyZW1haW5pbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBHZXRT
dHJpbmcAZ2V0X1ZFSElDTEVNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfN2ZjMzRjYmE2
MmQ3NDFlMTk3ZTdkMzI2MDRlNjRjYzUuZGxsAGdldF9hZGRyZXNzMV9Jc051bGwAZ2V0X2FkZHJl
c3MyX0lzTnVsbABnZXRfQUNDVE5VTV9Jc051bGwAZ2V0X2luc3VyZWRfSXNOdWxsAGdldF9wYXlt
ZW50c21hZGVfSXNOdWxsAGdldF9jb3ZlcmFnZV9Jc051bGwAZ2V0X1ZFSElDTEVNYWtlX0lzTnVs
bABnZXRfYWdlbnRuYW1lX0lzTnVsbABnZXRfY29tcGFueW5hbWVfSXNOdWxsAGdldF9waG9uZV9J
c051bGwAZ2V0X2NyZWF0ZWRhdGVfSXNOdWxsAGdldF9lZmZkYXRlX0lzTnVsbABnZXRfY2FuY2Vs
ZGF0ZV9Jc051bGwAZ2V0X2NvbXBhbnljYW5jZWxkYXRlX0lzTnVsbABnZXRfc3RhdGVfSXNOdWxs
AGdldF9wYXltZW50c3JlbWFpbmluZ19Jc051bGwAZ2V0X1ZFSElDTEVNb2RlbF9Jc051bGwAZ2V0
X3BvbGljeW51bV9Jc051bGwAZ2V0X3Zpbl9Jc051bGwAc2V0X0R1cFJlYXNvbl9Jc051bGwAZ2V0
X3ppcF9Jc051bGwAc2V0X2FkZHJlc3MxZHVwX0lzTnVsbABzZXRfYWRkcmVzczJkdXBfSXNOdWxs
AHNldF9BQ0NUTlVNZHVwX0lzTnVsbABzZXRfaW5zdXJlZGR1cF9Jc051bGwAc2V0X3BheW1lbnRz
bWFkZWR1cF9Jc051bGwAc2V0X2NvdmVyYWdlZHVwX0lzTnVsbABzZXRfVkVISUNMRU1ha2VkdXBf
SXNOdWxsAHNldF9hZ2VudG5hbWVkdXBfSXNOdWxsAHNldF9jb21wYW55bmFtZWR1cF9Jc051bGwA
c2V0X3Bob25lZHVwX0lzTnVsbABzZXRfY3JlYXRlZGF0ZWR1cF9Jc051bGwAc2V0X2VmZmRhdGVk
dXBfSXNOdWxsAHNldF9jYW5jZWxkYXRlZHVwX0lzTnVsbABzZXRfY29tcGFueWNhbmNlbGRhdGVk
dXBfSXNOdWxsAHNldF9zdGF0ZWR1cF9Jc051bGwAc2V0X3BheW1lbnRzcmVtYWluaW5nZHVwX0lz
TnVsbABzZXRfVkVISUNMRU1vZGVsZHVwX0lzTnVsbABzZXRfcG9saWN5bnVtZHVwX0lzTnVsbABz
ZXRfdmluZHVwX0lzTnVsbABzZXRfemlwZHVwX0lzTnVsbABzZXRfdmVoaWNsZXllYXJkdXBfSXNO
dWxsAHNldF9pbnN0YWxsbWVudHNkdXBfSXNOdWxsAHNldF9zdGF0dXNkdXBfSXNOdWxsAHNldF9j
aXR5ZHVwX0lzTnVsbABnZXRfdmVoaWNsZXllYXJfSXNOdWxsAGdldF9pbnN0YWxsbWVudHNfSXNO
dWxsAGdldF9zdGF0dXNfSXNOdWxsAGdldF9jaXR5X0lzTnVsbABTZXROdWxsAGdldF9JdGVtAHNl
dF9JdGVtAFN5c3RlbQBSb3dOdW0AZ2V0X3BvbGljeW51bQByZXNvdXJjZU1hbgBjaGVja1ZpbgBz
ZW50VmluAFNjcmlwdE1haW4AZ2V0X3ZpbgB1cGRhdGVSb3dJbmZvcm1hdGlvbgBTeXN0ZW0uQ29u
ZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZhbGlk
T3BlcmF0aW9uRXhjZXB0aW9uAHNldF9EdXBSZWFzb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0dXJl
SW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABnZXRfemlwAHNldF9hZGRyZXNzMWR1cABzZXRf
YWRkcmVzczJkdXAAc2V0X0FDQ1ROVU1kdXAAc2V0X2luc3VyZWRkdXAAc2V0X3BheW1lbnRzbWFk
ZWR1cABzZXRfY292ZXJhZ2VkdXAAc2V0X1ZFSElDTEVNYWtlZHVwAHNldF9hZ2VudG5hbWVkdXAA
c2V0X2NvbXBhbnluYW1lZHVwAHNldF9waG9uZWR1cABzZXRfY3JlYXRlZGF0ZWR1cABzZXRfZWZm
ZGF0ZWR1cABzZXRfY2FuY2VsZGF0ZWR1cABzZXRfY29tcGFueWNhbmNlbGRhdGVkdXAAc2V0X3N0
YXRlZHVwAHNldF9wYXltZW50c3JlbWFpbmluZ2R1cABzZXRfVkVISUNMRU1vZGVsZHVwAHNldF9w
b2xpY3ludW1kdXAAc2V0X3ZpbmR1cABzZXRfemlwZHVwAHNldF92ZWhpY2xleWVhcmR1cABzZXRf
aW5zdGFsbG1lbnRzZHVwAHNldF9zdGF0dXNkdXAAc2V0X2NpdHlkdXAAQ2xlYXIAZ2V0X3ZlaGlj
bGV5ZWFyAElucHV0MEJ1ZmZlcgBPdXRwdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1
ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAHNhbWVTZWxsZXIAY2hlY2tTZWxsZXIAZGlmZmVyZW50
U2VsbGVyAHNlbnRTZWxsZXIAR2V0RW51bWVyYXRvcgAuY3RvcgAuY2N0b3IAT3V0cHV0SURzAFN5
c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5S
ZXNvdXJjZXMAU0NfN2ZjMzRjYmE2MmQ3NDFlMTk3ZTdkMzI2MDRlNjRjYzUuUHJvcGVydGllcy5S
ZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDXzdmYzM0Y2JhNjJkNzQxZTE5N2U3
ZDMyNjA0ZTY0Y2M1LlByb3BlcnRpZXMAVmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0
Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMAQ29ubmVjdGlvbnMAQnVmZmVycwBjaGVja0Fk
ZHJlc3MAZGlmZmVyZW50QWRkcmVzcwBzZW50QWRkcmVzcwBnZXRfaW5zdGFsbG1lbnRzAEZpbmlz
aE91dHB1dHMAZ2V0X3N0YXR1cwBMaXN0b2ZSb3dzAENyZWF0ZU5ld091dHB1dFJvd3MAQ29uY2F0
AE9iamVjdABnZXRfRW5kT2ZSb3dzZXQAU2V0RW5kT2ZSb3dzZXQAZ2V0X0RlZmF1bHQAVXNlckNv
bXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AGdldF9DdXJyZW50AGdldF9D
b3VudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AFJvd0xpc3QATWljcm9zb2Z0LlNxbFNl
cnZlci5QaXBlbGluZUhvc3QASW5wdXQwX1Byb2Nlc3NJbnB1dABpbnB1dABQcmltZU91dHB1dABV
cGRhdGVPdXRwdXQATW92ZU5leHQAQWRkUm93AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cATmV4dFJv
dwByb3cAcm93eABnZXRfVG9kYXkAZ2V0X0Fzc2VtYmx5AGdldF9jaXR5AG9wX0VxdWFsaXR5AAAA
AAMgAAAjRABpAGYAZgBlAHIAZQBuAHQAIABBAGQAZAByAGUAcwBzAAAhRABpAGYAZgBlAHIAZQBu
AHQAIABTAGUAbABsAGUAcgAAF1MAYQBtAGUAIABTAGUAbABsAGUAcgAAgJtJAHMATgB1AGwAbAAg
AHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEA
bABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBv
AGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAA9JAG4AcAB1AHQAIAAwAAARTwB1AHQAcAB1AHQA
IAAwAABxUwBDAF8ANwBmAGMAMwA0AGMAYgBhADYAMgBkADcANAAxAGUAMQA5ADcAZQA3AGQAMwAy
ADYAMAA0AGUANgA0AGMAYwA1AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMA
ZQBzAAABAAAAizXxqUV3dUqIih7IGnOwCAAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERZRQHBxIo
EigSKBURPQESKBIoEigSKAYVEjkBEigFIAETAAgDIAAIBSABARMACCAAFRE9ARMABhURPQESKAQg
ABMABgADDg4ODgMgAAIJIAMBEk0dCBJRAwYSTQMGHQgEIAEOCAQgAQIIBCABCAgFIAERRQgFIAIB
CBwHIAICDhGAhQUgAR0ICAMHAQgGAAIIElEOCAABEoCJEYCNBSAAEoCRByACAQ4SgJEFAAICDg4D
BwEOBAAAEUUIt3pcVhk04IkIiYRdzYCAzJEHBhUSOQESKAIGAgIGCAMGEhgDBhIcAwYSEAMGElUD
BhJdAwYSYQMGEiQCBg4DBhFFBSABARIMByACARIoEgwGIAIBEigOAyAADgQgABFFBCABAQIFIAEB
EUUJIAQBCA4STRJRCyAEAQgdCB0STRJRBSABARJVBAAAEl0EAAASYQUAAQESYQQAABIkAwAAAQQg
AQIOAygADgMoAAIDKAAIBCgAEUUECAASXQQIABJhBAgAEiQIAQAIAAAAAAAeAQABAFQCFldyYXBO
b25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDXzdmYzM0Y2JhNjJkNzQxZTE5N2U3ZDMy
NjA0ZTY0Y2M1AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTcAAEkBABouTkVURnJhbWV3b3Jr
LFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41
BAEAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBt
c2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2Vu
PWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAA
AAAAAAAAAABQQURQQURQtAAAAJBWAAAAAAAAAAAAAKpWAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAA
AACcVgAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAA
AAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADsAwAAAAAAAAAA
AADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEAAAAA
AAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUA
SQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAETAMAAAEAUwB0
AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAwAAAAGgABAAEA
QwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAAAAAA
AHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwA3AGYAYwAzADQA
YwBiAGEANgAyAGQANwA0ADEAZQAxADkANwBlADcAZAAzADIANgAwADQAZQA2ADQAYwBjADUAAAAw
AAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABwACgAAQBJAG4A
dABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADcAZgBjADMANABjAGIAYQA2ADIAZAA3ADQAMQBl
ADEAOQA3AGUANwBkADMAMgA2ADAANABlADYANABjAGMANQAuAGQAbABsAAAASAASAAEATABlAGcA
YQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA3
AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIA
aQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8ANwBmAGMAMwA0AGMAYgBhADYAMgBk
ADcANAAxAGUAMQA5ADcAZQA3AGQAMwAyADYAMAA0AGUANgA0AGMAYwA1AC4AZABsAGwAAABoACQA
AQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADcAZgBjADMANABjAGIAYQA2ADIAZAA3
ADQAMQBlADEAOQA3AGUANwBkADMAMgA2ADAANABlADYANABjAGMANQAAADQACAABAFAAcgBvAGQA
dQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBlAG0AYgBs
AHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAMAAAAvDYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_7fc34cba62d741e197e7d32604e64cc5</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">BF</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[vin]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="vin"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[vin]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[ACCT_NUM]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ACCT_NUM"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[ACCT_NUM]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[status]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="status"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[status]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[insured]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="insured"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[insured]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[address1]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="address1"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[address1]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[address2]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="address2"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[address2]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[city]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="city"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[city]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[state]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="state"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[state]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[zip]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="zip"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[zip]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[vehicle_year]"
                      cachedDataType="i4"
                      cachedName="vehicle_year"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[vehicle_year]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[VEHICLE_Make]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="VEHICLE_Make"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[VEHICLE_Make]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[VEHICLE_Model]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="VEHICLE_Model"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[VEHICLE_Model]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[agent_name]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="agent_name"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[agent_name]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[company_name]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="company_name"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[company_name]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[coverage]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="coverage"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[coverage]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[company_cancel_date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="company_cancel_date"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[company_cancel_date]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[cancel_date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="cancel_date"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[cancel_date]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[eff_date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="eff_date"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[eff_date]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[create_date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="create_date"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[create_date]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[policy_num]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="policy_num"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[policy_num]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[installments]"
                      cachedDataType="i4"
                      cachedName="installments"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[installments]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[payments_made]"
                      cachedDataType="i4"
                      cachedName="payments_made"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[payments_made]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[payments_remaining]"
                      cachedDataType="i4"
                      cachedName="payments_remaining"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[payments_remaining]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[phone]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="phone"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[phone]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0]"
                  hasSideEffects="true"
                  name="Output 0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[vin_dup]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[vin_dup]"
                      name="vin_dup" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[ACCT_NUM_dup]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[ACCT_NUM_dup]"
                      name="ACCT_NUM_dup" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[status_dup]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[status_dup]"
                      name="status_dup" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[insured_dup]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[insured_dup]"
                      name="insured_dup" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[address1_dup]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[address1_dup]"
                      name="address1_dup" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[address2_dup]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[address2_dup]"
                      name="address2_dup" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[city_dup]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[city_dup]"
                      name="city_dup" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[state_dup]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[state_dup]"
                      name="state_dup" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[zip_dup]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[zip_dup]"
                      name="zip_dup" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[vehicle_year_dup]"
                      dataType="i4"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[vehicle_year_dup]"
                      name="vehicle_year_dup" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[VEHICLE_Make_dup]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[VEHICLE_Make_dup]"
                      name="VEHICLE_Make_dup" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[VEHICLE_Model_dup]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[VEHICLE_Model_dup]"
                      name="VEHICLE_Model_dup" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[agent_name_dup]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[agent_name_dup]"
                      name="agent_name_dup" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[company_name_dup]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[company_name_dup]"
                      name="company_name_dup" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[coverage_dup]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[coverage_dup]"
                      name="coverage_dup" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[company_cancel_date_dup]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[company_cancel_date_dup]"
                      name="company_cancel_date_dup" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[cancel_date_dup]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[cancel_date_dup]"
                      name="cancel_date_dup" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[eff_date_dup]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[eff_date_dup]"
                      name="eff_date_dup" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[create_date_dup]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[create_date_dup]"
                      name="create_date_dup" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[policy_num_dup]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[policy_num_dup]"
                      name="policy_num_dup" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[installments_dup]"
                      dataType="i4"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[installments_dup]"
                      name="installments_dup" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[payments_made_dup]"
                      dataType="i4"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[payments_made_dup]"
                      name="payments_made_dup" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[payments_remaining_dup]"
                      dataType="i4"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[payments_remaining_dup]"
                      name="payments_remaining_dup" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[phone_dup]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[phone_dup]"
                      name="phone_dup" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Dup Reason]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Dup Reason]"
                      name="Dup Reason" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Create Group 3 or More Dup Vin Excel.Paths[Different Address]"
              endId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input]"
              name="Different Address"
              startId="Package\Create Group 3 or More Dup Vin Excel\Conditional Split.Outputs[Different Address]" />
            <path
              refId="Package\Create Group 3 or More Dup Vin Excel.Paths[Different Seller]"
              endId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input]"
              name="Different Seller"
              startId="Package\Create Group 3 or More Dup Vin Excel\Conditional Split.Outputs[Different Seller]" />
            <path
              refId="Package\Create Group 3 or More Dup Vin Excel.Paths[OLE DB Source Output]"
              endId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0]"
              name="OLE DB Source Output"
              startId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Create Group 3 or More Dup Vin Excel.Paths[Output 0]"
              endId="Package\Create Group 3 or More Dup Vin Excel\Conditional Split.Inputs[Conditional Split Input]"
              name="Output 0"
              startId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0]" />
            <path
              refId="Package\Create Group 3 or More Dup Vin Excel.Paths[Same Seller]"
              endId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input]"
              name="Same Seller"
              startId="Package\Create Group 3 or More Dup Vin Excel\Conditional Split.Outputs[Same Seller]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Update Query String"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{C2C9862F-148E-44D0-8439-33FE1170A5ED}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Update Query String"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Update Query String\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="11">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String DupVinQueryTwo
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["Dup_Vin_Query_Two"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["Dup_Vin_Query_Two"].Value = value;
        }
    }

    public String DupVinThreeorMore
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["Dup_Vin_Three_or_More"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["Dup_Vin_Three_or_More"].Value = value;
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    string DupVinQueryfor2;
    string DupVinQueryfor3;
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {

        Variables.DupVinQueryTwo = DupVinQueryfor2;
        Variables.DupVinThreeorMore = DupVinQueryfor3;
        base.PostExecute();
    }

    public override void CreateNewOutputRows()
    {
        DateTime To = DateTime.Today.AddDays(-1);
        DateTime From = DateTime.Today.AddDays(-7);
        DupVinQueryfor2 = "select " +
                                "w3.vin, " +
                                "v2.ACCT_NUM, " +
                                "asd.description as status, " +
                                "v2.insured, " +
                                "v2.address1, " +
                                "v2.address2, " +
                                "v2.city, " +
                                "v2.state, " +
                                "v2.zip, " +
                                "w3.vehicle_year, " +
                                "w3.VEHICLE_Make, " +
                                "w3.VEHICLE_Model, " +
                                "v2.agent_name, " +
                                "p2.company_name, " +
                                "p2.coverage, " +
                                "p2.company_cancel_date, " +
                                "c2.cancel_date, " +
                                "p2.eff_date, " +
                                "v2.create_date, " +
                                "p2.policy_num, " +
                                "c2.installments, " +
                                "c2.payments_made, " +
                                "c2.payments_remaining, " +
                                "a2.phone " +

                                "from(" +

                                "select distinct x.vin from(" +
                                "select w.vin, count(*) as total " +
                                "from a_ascii_war w with(noexpand) " +
                                "Inner join a_ascii_vit v with(noexpand) on w.acct_num = v.acct_num " +
                                "INNER JOIN Account_Status[as] with(nolock) on w.acct_num = [as].acct_num " +
                                "where " +
                                "[As].status_id in(1, 2, 3) and v.create_date <= \'" + To.Month + "/" + To.Day + "/" + To.Year + "\' " +
                                "group by  W.VIN " +
                                "having count(vin) = 2) as x " +
                                "inner join a_ascii_war w2 on w2.vin = x.vin " +
                                "inner join a_ascii_vit with(noexpand)on a_ascii_vit.acct_num = w2.acct_num " +
                                "where " +
                                "a_ascii_vit.create_date between \'" + From.Month + "/" + From.Day + "/" + From.Year + "\' and \'" +
                                    To.Month + "/" + To.Day + "/" + To.Year + "\') as y " +
                                "inner join a_ascii_war w3 with(noexpand) on w3.vin = y.vin " +
                                "inner join a_ascii_vit v2 with(noexpand) on v2.acct_num = w3.acct_num " +
                                "inner join a_ascii_con c2 with(noexpand) on c2.acct_num = w3.acct_num " +
                                "inner join a_ascii_pol p2 with(noexpand) on p2.acct_num = w3.acct_num " +
                                "inner join ascii_agt a2 with(nolock) on v2.business = a2.business and v2.agent_code = a2.code " +
                                "INNER JOIN Account_Status sts with(nolock) on v2.acct_num = sts.acct_num " +
                                "inner join AccountStatusDescription asd with(nolock) ON sts.Status_ID = asd.ID " +
                                "where sts.status_id not in(5,7) and create_date<= \'" + To.Month + "/" + To.Day + "/" + To.Year + "\' " +

                                "order by w3.vin";

        DupVinQueryfor3 = "select " +
                                "w3.vin, " +
                                "v2.ACCT_NUM, " +
                                "asd.description as status, " +
                                "v2.insured, " +
                                "v2.address1, " +
                                "v2.address2, " +
                                "v2.city, " +
                                "v2.state, " +
                                "v2.zip, " +
                                "w3.vehicle_year, " +
                                "w3.VEHICLE_Make, " +
                                "w3.VEHICLE_Model, " +
                                "v2.agent_name, " +
                                "p2.company_name, " +
                                "p2.coverage, " +
                                "p2.company_cancel_date, " +
                                "c2.cancel_date, " +
                                "p2.eff_date, " +
                                "v2.create_date, " +
                                "p2.policy_num, " +
                                "c2.installments, " +
                                "c2.payments_made, " +
                                "c2.payments_remaining, " +
                                "a2.phone " +

                                "from(" +

                                "select distinct x.vin from(" +
                                "select w.vin, count(*) as total " +
                                "from a_ascii_war w with(noexpand) " +
                                "Inner join a_ascii_vit v with(noexpand) on w.acct_num = v.acct_num " +
                                "INNER JOIN Account_Status[as] with(nolock) on w.acct_num = [as].acct_num " +
                                "where " +
                                "[As].status_id in(1, 2, 3) and v.create_date <= \'" + To.Month + "/" + To.Day + "/" + To.Year + "\' " +
                                "group by  W.VIN " +
                                "having count(vin) > 2) as x " +
                                "inner join a_ascii_war w2 on w2.vin = x.vin " +
                                "inner join a_ascii_vit with(noexpand)on a_ascii_vit.acct_num = w2.acct_num " +
                                "where " +
                                "a_ascii_vit.create_date between \'" + From.Month + "/" + From.Day + "/" + From.Year + "\' and \'" +
                                    To.Month + "/" + To.Day + "/" + To.Year + "\') as y " +
                                "inner join a_ascii_war w3 with(noexpand) on w3.vin = y.vin " +
                                "inner join a_ascii_vit v2 with(noexpand) on v2.acct_num = w3.acct_num " +
                                "inner join a_ascii_con c2 with(noexpand) on c2.acct_num = w3.acct_num " +
                                "inner join a_ascii_pol p2 with(noexpand) on p2.acct_num = w3.acct_num " +
                                "inner join ascii_agt a2 with(nolock) on v2.business = a2.business and v2.agent_code = a2.code " +
                                "INNER JOIN Account_Status sts with(nolock) on v2.acct_num = sts.acct_num " +
                                "inner join AccountStatusDescription asd with(nolock) ON sts.Status_ID = asd.ID " +
                                "where sts.status_id not in(5,7) and create_date<= \'" + To.Month + "/" + To.Day + "/" + To.Year + "\' " +

                                "order by w3.vin";
        Output0Buffer.AddRow();
        Output0Buffer.Dup2 = DupVinQueryfor2;
        Output0Buffer.Dup3 = DupVinQueryfor3;

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Dup3
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Dup3_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Dup2
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Dup2_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0bf4270fd3de413ca8f203f190e24858.Properties.Settings.get_Default():SC_0bf4270fd3de413ca8f203f190e24858.Properties.Sett" +
    "ings")]

namespace SC_0bf4270fd3de413ca8f203f190e24858.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0bf4270fd3de413ca8f203f190e24858.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0bf4270fd3de413ca8f203f190e24858.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0bf4270fd3de413ca8f203f190e24858.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_0bf4270fd3de413ca8f203f190e24858.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_0bf4270fd3de413ca8f203f190e24858.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_0bf4270fd3de413ca8f203f190e24858</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_0bf4270fd3de413ca8f203f190e24858</msb:DisplayName>
		<msb:ProjectId>{D8959E1B-E971-41A6-8607-7FD352C2A34B}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_0bf4270fd3de413ca8f203f190e24858.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_0bf4270fd3de413ca8f203f190e24858")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_0bf4270fd3de413ca8f203f190e24858")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_0bf4270fd3de413ca8f203f190e24858.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{e78393b2-1b89-4098-a885-56f45fe655ee}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_0bf4270fd3de413ca8f203f190e24858</RootNamespace>
    <AssemblyName>SC_0bf4270fd3de413ca8f203f190e24858</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_0bf4270fd3de413ca8f203f190e24858" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_0bf4270fd3de413ca8f203f190e24858.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAJro3FkAAAAAAAAAAOAAIiALATAAACYAAAAIAAAAAAAAhkUA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADRFAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAjCUAAAAgAAAAJgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAoAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAALgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABo
RQAAAAAAAEgAAAACAAUAbCUAABAfAAABAAAAAAAAAHxEAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqpgJ7BAAABAJ7AQAABG8VAAAGAnsEAAAEAnsC
AAAEbxcAAAYCKBEAAAoqAAATMAUA2AIAAAEAABEoEgAACgwSAiMAAAAAAADwvygTAAAKCigSAAAK
DBICIwAAAAAAABzAKBMAAAoLAh8ZjRMAAAElFnIBAABwoiUXEgAoFAAACowbAAABoiUYci4FAHCi
JRkSACgVAAAKjBsAAAGiJRpyLgUAcKIlGxIAKBYAAAqMGwAAAaIlHHIyBQBwoiUdEgEoFAAACowb
AAABoiUeci4FAHCiJR8JEgEoFQAACowbAAABoiUfCnIuBQBwoiUfCxIBKBYAAAqMGwAAAaIlHwxy
zQYAcKIlHw0SACgUAAAKjBsAAAGiJR8Oci4FAHCiJR8PEgAoFQAACowbAAABoiUfEHIuBQBwoiUf
ERIAKBYAAAqMGwAAAaIlHxJy3QYAcKIlHxMSACgUAAAKjBsAAAGiJR8Uci4FAHCiJR8VEgAoFQAA
CowbAAABoiUfFnIuBQBwoiUfFxIAKBYAAAqMGwAAAaIlHxhyXAsAcKIoFwAACn0BAAAEAh8ZjRMA
AAElFnIBAABwoiUXEgAoFAAACowbAAABoiUYci4FAHCiJRkSACgVAAAKjBsAAAGiJRpyLgUAcKIl
GxIAKBYAAAqMGwAAAaIlHHKACwBwoiUdEgEoFAAACowbAAABoiUeci4FAHCiJR8JEgEoFQAACowb
AAABoiUfCnIuBQBwoiUfCxIBKBYAAAqMGwAAAaIlHwxyzQYAcKIlHw0SACgUAAAKjBsAAAGiJR8O
ci4FAHCiJR8PEgAoFQAACowbAAABoiUfEHIuBQBwoiUfERIAKBYAAAqMGwAAAaIlHxJy3QYAcKIl
HxMSACgUAAAKjBsAAAGiJR8Uci4FAHCiJR8VEgAoFQAACowbAAABoiUfFnIuBQBwoiUfFxIAKBYA
AAqMGwAAAaIlHxhyXAsAcKIoFwAACn0CAAAEAnsFAAAEbwoAAAYCewUAAAQCewEAAARvCAAABgJ7
BQAABAJ7AgAABG8GAAAGKh4CKA0AAAYqKgIDBAUoGAAACiomAhYDKBkAAAoqWgMsCAIWKBoAAAoq
chsNAHBzGwAACnomAhcDKBkAAAoqWgMsCAIXKBoAAAoqchsNAHBzGwAACnoeAigcAAAKKh4CKB0A
AAoqHgIoHgAACip+AigfAAAKAgJzEgAABn0DAAAEAgJzEwAABn0EAAAEKgYqbgJ7BQAABCwSAnsF
AAAEbwsAAAYCFH0FAAAEKgATMAUASQAAAAIAABEWCisuBAaUDgRyuA0AcCggAAAKMxkCBQaaAgQG
lCghAAAKDgRzBQAABn0FAAAEBhdYCgYDMs4CbxEAAAYCbw4AAAYCKA8AAAYqOgIoIgAACgIDfQYA
AAQqOgIoIgAACgIDfQcAAAQqlgJ7BwAABG8jAAAKcsoNAHBvJAAACiglAAAKbyYAAAp0HAAAASpy
AnsHAAAEbyMAAApyyg0AcG8kAAAKA28nAAAKKpYCewcAAARvIwAACnLuDQBwbyQAAAooJQAACm8m
AAAKdBwAAAEqcgJ7BwAABG8jAAAKcu4NAHBvJAAACgNvJwAACioeAigiAAAKKq5+CAAABC0echoO
AHDQBwAAAigoAAAKbykAAApzKgAACoAIAAAEfggAAAQqGn4JAAAEKh4CgAkAAAQqGn4KAAAEKh4C
KCsAAAoqLnMdAAAGgAoAAAQqAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAGQG
AAAjfgAA0AYAANAHAAAjU3RyaW5ncwAAAACgDgAAjA4AACNVUwAsHQAAEAAAACNHVUlEAAAAPB0A
ANQBAAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA+gEzABYAAAEAAAAkAAAACAAAAAoAAAAeAAAA
EAAAACsAAAAQAAAAAgAAAAQAAAAJAAAADAAAAAEAAAAFAAAAAQAAAAAAsgMBAAAAAAAGAJgCjgUG
ACwDjgUGAOQBewUPAAIGAAAGABECXAQGAHsCXAQGAFwCXAQGABMDXAQGALgCXAQGANECXAQGACgC
XAQGAEMCcQMKAOwCBQEGAPwAFAQKABsFBQEOAAwFBQEKALoEBQEKAAoHBQEGAMoGFAQGAMcBewUG
ACwFrgUGAIgERwQSAJcBnAMSAPgBnAMSAH8BMgQGAKwBjgUGADoAFAQGAIsDFAQGAG4EFAQWABEA
PAUWAAEAPAVLAHgHAAAWACIAPAUGACYBFAQGANgAFAQGAMUHXAQAAAAAlgAAAAAAAQABAAEAEAAn
BAAAEAABAAEAAQAQAP4EAAA9AAMABQABABAA7AYAAEkAAwANAAEAEACFBgAATQAGABIAAQAQAE0G
AABNAAcAEwAAABAAtQURBk0ACAAYAAABEAB8BhEGZQAKABwAAQBJAKQAAQBiAKQABgCFBqcABgBN
BqsABgD+BK8AAQD6BrMAAQD6BrMAEQAbBLcAEQBvAbsAEQDIAL8AUCAAAAAAxgBKAwYAAQBYIAAA
AADGAFUDBgABAIQgAAAAAMYApwYGAAEAaCMAAAAAhhhkBQYAAQBwIwAAAACGGGQFOQABAHsjAAAA
AIYIWQAQAAQAhSMAAAAAhgjqA8MABQCcIwAAAACGCEAAEAAGAKYjAAAAAIYI2gPDAAcAvSMAAAAA
hgCoBwYACADFIwAAAACGANEGBgAIAM0jAAAAAIYA1AZJAAgA1SMAAAAAhhhkBQYACAD1IwAAAADG
AZkGBgAIAPcjAAAAAIEAtAAGAAgAFCQAAAAAxgBYB8gACAD1IwAAAADGAacGBgAMAGkkAAAAAIYY
ZAXUAAwAeCQAAAAAhhhkBdQADQCHJAAAAACGCJQE2gAOAK0kAAAAAIYIpwQQAA4AyiQAAAAAhggr
AdoADwDwJAAAAACGCEEBEAAPAA0lAAAAAIMYZAUGABAAFSUAAAAAkwgoBd4AEABBJQAAAACTCFcB
4wAQAEglAAAAAJMIYwHoABAAUCUAAAAAlgjgBu4AEQBXJQAAAACGGGQFBgARAF8lAAAAAJEYagXz
ABEAAAABACEFAAACAFcGAAADAMgEAAABAGsDAAABAGsDAAABAGsDAAABAGsDAAABAJ8GAAACAHEF
AAADAJEGAAAEAMgEAAABABAHAAABABAHAAABAGsDAAABAGsDAAABAGsDCQBkBQEAEQBkBQYAGQBk
BQoAKQBkBRAAMQBkBRAAOQBkBRAAQQBkBRAASQBkBRAAUQBkBRAAWQBkBRAAYQBkBRAAaQBkBQYA
oQBkBQYAwQBkBRUA0QBkBQYAkQBKAwYAkQBVAwYAcQC3ByQAcQC7BikAcQCSAy8AcQCvBy8AcQD1
BC8A4QDDBjMAeQBkBTkAeQALBEMAeQD6AwEA6QBkBRAAeQCoBwYAeQDRBgYAeQDUBkkAkQBkBQYA
kQCfAFEAkQBrBlgAmQBkBQYAkQBABl4A8QACBGMAkQCTB2kA+QBkB28A+QBhA3YAEQHqAHsAEQHB
B4QAqQBkBYoAyQBkBQYALgALAA4BLgATABcBLgAbADYBLgAjAD8BLgArAGgBLgAzAGgBLgA7AGgB
LgBDAD8BLgBLAG4BLgBTAGgBLgBbAIUBQwBjAM8B4wBrAM8B6QBzADYBCQFzADYBQQF7AM8BGwBN
AAMAAQAGAAUABwAHAAgACQAAAF0A9wAAAO4D+wAAAEQA9wAAAN4D+wAAAKsE9wAAAEUB9wAAACwF
/wAAAHcBBAEAAOQGCQEBAAYAAwABAAcABQABAAgABwABAAkACQACABQACwABABUACwACABYADQAB
ABcADQACABkADwACABoAEQABABsAEQACABwAEwAEgAAAAQAAAAAAAAAAAAAAAAByAAAABAAAAAAA
AAAAAAAAkgCrAAAAAAAOAAAAAAAAAAAAAACbABoHAAAAAA4AAAAAAAAAAAAAAJsANwcAAAAABAAA
AAAAAAAAAAAAkgAUBAAAAAAOAAAAAAAAAAAAAACbANIEAAAAAAAAAAABAAAAvwUAAAAAAAAASURU
U1ZhcmlhYmxlMTAwAElEVFNWYXJpYWJsZXMxMDAASURUU0V2YWx1YXRvckNvbnRleHQxMDAASW50
MzIAc2V0X0R1cDIARHVwVmluUXVlcnlmb3IyAHNldF9EdXAzAER1cFZpblF1ZXJ5Zm9yMwBTQ18w
YmY0MjcwZmQzZGU0MTNjYThmMjAzZjE5MGUyNDg1OAA8TW9kdWxlPgBHZXRPdXRwdXRJRABtc2Nv
cmxpYgBNYXJrT3V0cHV0c0ZpbmlzaGVkAGRlZmF1bHRJbnN0YW5jZQBSdW50aW1lVHlwZUhhbmRs
ZQBHZXRUeXBlRnJvbUhhbmRsZQBEYXRlVGltZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBl
bGluZQBUeXBlAGdldF9EdXBWaW5UaHJlZW9yTW9yZQBzZXRfRHVwVmluVGhyZWVvck1vcmUAZ2V0
X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NC
YXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVn
Z2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2Fi
bGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJp
YnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmli
dXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0
dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1
dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55
QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4
ZWN1dGUAc2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAU3RyaW5nAGdl
dF9Nb250aABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfMGJmNDI3MGZkM2RlNDEzY2E4ZjIwM2Yx
OTBlMjQ4NTguZGxsAHNldF9EdXAyX0lzTnVsbABzZXRfRHVwM19Jc051bGwAU2V0TnVsbABnZXRf
SXRlbQBzZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmln
dXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZhbGlkT3Bl
cmF0aW9uRXhjZXB0aW9uAEN1bHR1cmVJbmZvAGdldF9EdXBWaW5RdWVyeVR3bwBzZXRfRHVwVmlu
UXVlcnlUd28AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNS
dW50aW1lV3JhcABnZXRfWWVhcgBPdXRwdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1
ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUu
V3JhcHBlcgAuY3RvcgAuY2N0b3IAT3V0cHV0SURzAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0u
UnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfMGJmNDI3MGZkM2Rl
NDEzY2E4ZjIwM2YxOTBlMjQ4NTguUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVn
Z2luZ01vZGVzAFNDXzBiZjQyNzBmZDNkZTQxM2NhOGYyMDNmMTkwZTI0ODU4LlByb3BlcnRpZXMA
Z2V0X1JlYWRXcml0ZVZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4
ZXMAU2V0dGluZ3MAQ29ubmVjdGlvbnMAQnVmZmVycwBGaW5pc2hPdXRwdXRzAENyZWF0ZU5ld091
dHB1dFJvd3MAQWRkRGF5cwBDb25jYXQAT2JqZWN0AFNldEVuZE9mUm93c2V0AGdldF9EZWZhdWx0
AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQu
U3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AFByaW1l
T3V0cHV0AEdldFZhbHVlV2l0aENvbnRleHQAU2NyaXB0Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0
X0V2YWx1YXRvckNvbnRleHQAQWRkUm93AGdldF9EYXkAZ2V0X1RvZGF5AGdldF9Bc3NlbWJseQAA
AACFK3MAZQBsAGUAYwB0ACAAdwAzAC4AdgBpAG4ALAAgAHYAMgAuAEEAQwBDAFQAXwBOAFUATQAs
ACAAYQBzAGQALgBkAGUAcwBjAHIAaQBwAHQAaQBvAG4AIABhAHMAIABzAHQAYQB0AHUAcwAsACAA
dgAyAC4AaQBuAHMAdQByAGUAZAAsACAAdgAyAC4AYQBkAGQAcgBlAHMAcwAxACwAIAB2ADIALgBh
AGQAZAByAGUAcwBzADIALAAgAHYAMgAuAGMAaQB0AHkALAAgAHYAMgAuAHMAdABhAHQAZQAsACAA
dgAyAC4AegBpAHAALAAgAHcAMwAuAHYAZQBoAGkAYwBsAGUAXwB5AGUAYQByACwAIAB3ADMALgBW
AEUASABJAEMATABFAF8ATQBhAGsAZQAsACAAdwAzAC4AVgBFAEgASQBDAEwARQBfAE0AbwBkAGUA
bAAsACAAdgAyAC4AYQBnAGUAbgB0AF8AbgBhAG0AZQAsACAAcAAyAC4AYwBvAG0AcABhAG4AeQBf
AG4AYQBtAGUALAAgAHAAMgAuAGMAbwB2AGUAcgBhAGcAZQAsACAAcAAyAC4AYwBvAG0AcABhAG4A
eQBfAGMAYQBuAGMAZQBsAF8AZABhAHQAZQAsACAAYwAyAC4AYwBhAG4AYwBlAGwAXwBkAGEAdABl
ACwAIABwADIALgBlAGYAZgBfAGQAYQB0AGUALAAgAHYAMgAuAGMAcgBlAGEAdABlAF8AZABhAHQA
ZQAsACAAcAAyAC4AcABvAGwAaQBjAHkAXwBuAHUAbQAsACAAYwAyAC4AaQBuAHMAdABhAGwAbABt
AGUAbgB0AHMALAAgAGMAMgAuAHAAYQB5AG0AZQBuAHQAcwBfAG0AYQBkAGUALAAgAGMAMgAuAHAA
YQB5AG0AZQBuAHQAcwBfAHIAZQBtAGEAaQBuAGkAbgBnACwAIABhADIALgBwAGgAbwBuAGUAIABm
AHIAbwBtACgAcwBlAGwAZQBjAHQAIABkAGkAcwB0AGkAbgBjAHQAIAB4AC4AdgBpAG4AIABmAHIA
bwBtACgAcwBlAGwAZQBjAHQAIAB3AC4AdgBpAG4ALAAgAGMAbwB1AG4AdAAoACoAKQAgAGEAcwAg
AHQAbwB0AGEAbAAgAGYAcgBvAG0AIABhAF8AYQBzAGMAaQBpAF8AdwBhAHIAIAB3ACAAdwBpAHQA
aAAoAG4AbwBlAHgAcABhAG4AZAApACAASQBuAG4AZQByACAAagBvAGkAbgAgAGEAXwBhAHMAYwBp
AGkAXwB2AGkAdAAgAHYAIAB3AGkAdABoACgAbgBvAGUAeABwAGEAbgBkACkAIABvAG4AIAB3AC4A
YQBjAGMAdABfAG4AdQBtACAAPQAgAHYALgBhAGMAYwB0AF8AbgB1AG0AIABJAE4ATgBFAFIAIABK
AE8ASQBOACAAQQBjAGMAbwB1AG4AdABfAFMAdABhAHQAdQBzAFsAYQBzAF0AIAB3AGkAdABoACgA
bgBvAGwAbwBjAGsAKQAgAG8AbgAgAHcALgBhAGMAYwB0AF8AbgB1AG0AIAA9ACAAWwBhAHMAXQAu
AGEAYwBjAHQAXwBuAHUAbQAgAHcAaABlAHIAZQAgAFsAQQBzAF0ALgBzAHQAYQB0AHUAcwBfAGkA
ZAAgAGkAbgAoADEALAAgADIALAAgADMAKQAgAGEAbgBkACAAdgAuAGMAcgBlAGEAdABlAF8AZABh
AHQAZQAgADwAPQAgACcAAQMvAACBmScAIABnAHIAbwB1AHAAIABiAHkAIAAgAFcALgBWAEkATgAg
AGgAYQB2AGkAbgBnACAAYwBvAHUAbgB0ACgAdgBpAG4AKQAgAD0AIAAyACkAIABhAHMAIAB4ACAA
aQBuAG4AZQByACAAagBvAGkAbgAgAGEAXwBhAHMAYwBpAGkAXwB3AGEAcgAgAHcAMgAgAG8AbgAg
AHcAMgAuAHYAaQBuACAAPQAgAHgALgB2AGkAbgAgAGkAbgBuAGUAcgAgAGoAbwBpAG4AIABhAF8A
YQBzAGMAaQBpAF8AdgBpAHQAIAB3AGkAdABoACgAbgBvAGUAeABwAGEAbgBkACkAbwBuACAAYQBf
AGEAcwBjAGkAaQBfAHYAaQB0AC4AYQBjAGMAdABfAG4AdQBtACAAPQAgAHcAMgAuAGEAYwBjAHQA
XwBuAHUAbQAgAHcAaABlAHIAZQAgAGEAXwBhAHMAYwBpAGkAXwB2AGkAdAAuAGMAcgBlAGEAdABl
AF8AZABhAHQAZQAgAGIAZQB0AHcAZQBlAG4AIAAnAAEPJwAgAGEAbgBkACAAJwABhH0nACkAIABh
AHMAIAB5ACAAaQBuAG4AZQByACAAagBvAGkAbgAgAGEAXwBhAHMAYwBpAGkAXwB3AGEAcgAgAHcA
MwAgAHcAaQB0AGgAKABuAG8AZQB4AHAAYQBuAGQAKQAgAG8AbgAgAHcAMwAuAHYAaQBuACAAPQAg
AHkALgB2AGkAbgAgAGkAbgBuAGUAcgAgAGoAbwBpAG4AIABhAF8AYQBzAGMAaQBpAF8AdgBpAHQA
IAB2ADIAIAB3AGkAdABoACgAbgBvAGUAeABwAGEAbgBkACkAIABvAG4AIAB2ADIALgBhAGMAYwB0
AF8AbgB1AG0AIAA9ACAAdwAzAC4AYQBjAGMAdABfAG4AdQBtACAAaQBuAG4AZQByACAAagBvAGkA
bgAgAGEAXwBhAHMAYwBpAGkAXwBjAG8AbgAgAGMAMgAgAHcAaQB0AGgAKABuAG8AZQB4AHAAYQBu
AGQAKQAgAG8AbgAgAGMAMgAuAGEAYwBjAHQAXwBuAHUAbQAgAD0AIAB3ADMALgBhAGMAYwB0AF8A
bgB1AG0AIABpAG4AbgBlAHIAIABqAG8AaQBuACAAYQBfAGEAcwBjAGkAaQBfAHAAbwBsACAAcAAy
ACAAdwBpAHQAaAAoAG4AbwBlAHgAcABhAG4AZAApACAAbwBuACAAcAAyAC4AYQBjAGMAdABfAG4A
dQBtACAAPQAgAHcAMwAuAGEAYwBjAHQAXwBuAHUAbQAgAGkAbgBuAGUAcgAgAGoAbwBpAG4AIABh
AHMAYwBpAGkAXwBhAGcAdAAgAGEAMgAgAHcAaQB0AGgAKABuAG8AbABvAGMAawApACAAbwBuACAA
dgAyAC4AYgB1AHMAaQBuAGUAcwBzACAAPQAgAGEAMgAuAGIAdQBzAGkAbgBlAHMAcwAgAGEAbgBk
ACAAdgAyAC4AYQBnAGUAbgB0AF8AYwBvAGQAZQAgAD0AIABhADIALgBjAG8AZABlACAASQBOAE4A
RQBSACAASgBPAEkATgAgAEEAYwBjAG8AdQBuAHQAXwBTAHQAYQB0AHUAcwAgAHMAdABzACAAdwBp
AHQAaAAoAG4AbwBsAG8AYwBrACkAIABvAG4AIAB2ADIALgBhAGMAYwB0AF8AbgB1AG0AIAA9ACAA
cwB0AHMALgBhAGMAYwB0AF8AbgB1AG0AIABpAG4AbgBlAHIAIABqAG8AaQBuACAAQQBjAGMAbwB1
AG4AdABTAHQAYQB0AHUAcwBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AIABhAHMAZAAgAHcAaQB0AGgA
KABuAG8AbABvAGMAawApACAATwBOACAAcwB0AHMALgBTAHQAYQB0AHUAcwBfAEkARAAgAD0AIABh
AHMAZAAuAEkARAAgAHcAaABlAHIAZQAgAHMAdABzAC4AcwB0AGEAdAB1AHMAXwBpAGQAIABuAG8A
dAAgAGkAbgAoADUALAA3ACkAIABhAG4AZAAgAGMAcgBlAGEAdABlAF8AZABhAHQAZQA8AD0AIAAn
AAEjJwAgAG8AcgBkAGUAcgAgAGIAeQAgAHcAMwAuAHYAaQBuAAGBmScAIABnAHIAbwB1AHAAIABi
AHkAIAAgAFcALgBWAEkATgAgAGgAYQB2AGkAbgBnACAAYwBvAHUAbgB0ACgAdgBpAG4AKQAgAD4A
IAAyACkAIABhAHMAIAB4ACAAaQBuAG4AZQByACAAagBvAGkAbgAgAGEAXwBhAHMAYwBpAGkAXwB3
AGEAcgAgAHcAMgAgAG8AbgAgAHcAMgAuAHYAaQBuACAAPQAgAHgALgB2AGkAbgAgAGkAbgBuAGUA
cgAgAGoAbwBpAG4AIABhAF8AYQBzAGMAaQBpAF8AdgBpAHQAIAB3AGkAdABoACgAbgBvAGUAeABw
AGEAbgBkACkAbwBuACAAYQBfAGEAcwBjAGkAaQBfAHYAaQB0AC4AYQBjAGMAdABfAG4AdQBtACAA
PQAgAHcAMgAuAGEAYwBjAHQAXwBuAHUAbQAgAHcAaABlAHIAZQAgAGEAXwBhAHMAYwBpAGkAXwB2
AGkAdAAuAGMAcgBlAGEAdABlAF8AZABhAHQAZQAgAGIAZQB0AHcAZQBlAG4AIAAnAAGAm0kAcwBO
AHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQA
bwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABo
AGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAEU8AdQB0AHAAdQB0ACAAMAAAI0QA
dQBwAF8AVgBpAG4AXwBRAHUAZQByAHkAXwBUAHcAbwAAK0QAdQBwAF8AVgBpAG4AXwBUAGgAcgBl
AGUAXwBvAHIAXwBNAG8AcgBlAABxUwBDAF8AMABiAGYANAAyADcAMABmAGQAMwBkAGUANAAxADMA
YwBhADgAZgAyADAAMwBmADEAOQAwAGUAMgA0ADgANQA4AC4AUAByAG8AcABlAHIAdABpAGUAcwAu
AFIAZQBzAG8AdQByAGMAZQBzAABjPa/cne8BT5TQNzlEAvUUAAQgAQEIAyAAAQUgAQEREQQgAQEO
BSABARFdCAcDETkRORE5BAAAETkFIAEROQ0DIAAIBQABDh0cCSADARJBHQgSRQUgAgEIHAMgAAID
BwEIBgACCBJFDgUgAR0ICAQgABJ5BSABEn0cBQAAEoCBBiABHBKAhQQgAQEcCAABEoCJEYCNBSAA
EoCRByACAQ4SgJEIt3pcVhk04IkIiYRdzYCAzJECBg4DBhIUAwYSGAMGEgwDBhJJAwYSVQMGElkD
BhIgBCABAQILIAQBCB0IHRJBEkUFIAEBEkkDIAAOBAAAElUEAAASWQUAAQESWQQAABIgAwAAAQMo
AA4DKAACBAgAElUECAASWQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhy
b3dzAQgBAAIAAAAAACgBACNTQ18wYmY0MjcwZmQzZGU0MTNjYThmMjAzZjE5MGUyNDg1OAAABQEA
AAAAFgEAEUNvcHlyaWdodCBAICAyMDE3AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUB
AFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNQQBAAAAtAAAAM7K774B
AAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lv
bj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUw
ODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQ
tAAAAFxFAAAAAAAAAAAAAHZFAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAABoRQAAAAAAAAAAAAAA
AF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADs
AwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
TAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAw
AAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0A
ZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwAw
AGIAZgA0ADIANwAwAGYAZAAzAGQAZQA0ADEAMwBjAGEAOABmADIAMAAzAGYAMQA5ADAAZQAyADQA
OAA1ADgAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABw
ACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADAAYgBmADQAMgA3ADAAZgBkADMA
ZABlADQAMQAzAGMAYQA4AGYAMgAwADMAZgAxADkAMABlADIANAA4ADUAOAAuAGQAbABsAAAASAAS
AAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAA
IAAyADAAMQA3AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4
ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AMABiAGYANAAyADcA
MABmAGQAMwBkAGUANAAxADMAYwBhADgAZgAyADAAMwBmADEAOQAwAGUAMgA0ADgANQA4AC4AZABs
AGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADAAYgBmADQAMgA3ADAA
ZgBkADMAZABlADQAMQAzAGMAYQA4AGYAMgAwADMAZgAxADkAMABlADIANAA4ADUAOAAAADQACAAB
AFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMA
cwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAiDUAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_0bf4270fd3de413ca8f203f190e24858</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg">User::Dup_Vin_Query_Two,User::Dup_Vin_Three_or_More</property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">63</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <outputs>
                <output
                  refId="Package\Update Query String\Script Component.Outputs[Output 0]"
                  hasSideEffects="true"
                  name="Output 0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Update Query String\Script Component.Outputs[Output 0].Columns[Dup 3]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Update Query String\Script Component.Outputs[Output 0].Columns[Dup 3]"
                      name="Dup 3" />
                    <outputColumn
                      refId="Package\Update Query String\Script Component.Outputs[Output 0].Columns[Dup 2]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Update Query String\Script Component.Outputs[Output 0].Columns[Dup 2]"
                      name="Dup 2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{9A9ADB9A-1A63-4F0C-8969-B85AA7125C88}"
      DTS:From="Package\Update Query String"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Create Group 2 Dup Vin Excel" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{7735FFD3-DEDF-40F3-880E-0C38094BB6C6}"
      DTS:From="Package\Create Group 2 Dup Vin Excel"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Create Group 3 or More Dup Vin Excel" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="219,42"
          Id="Package\Create Group 2 Dup Vin Excel"
          TopLeft="193.166662730277,123.099997745156" />
        <NodeLayout
          Size="259,42"
          Id="Package\Create Group 3 or More Dup Vin Excel"
          TopLeft="226,191" />
        <NodeLayout
          Size="176,42"
          Id="Package\Update Query String"
          TopLeft="162.166664332151,54.0333324654897" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="250.166664332151,96.0333324654897">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="52.4999983981261,27.0666652796663"
              Start="0,0"
              End="52.4999983981261,19.5666652796663">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.53333263983315" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.53333263983315"
                    Point2="0,13.5333326398331"
                    Point3="4,13.5333326398331" />
                  <mssgle:LineSegment
                    End="48.4999983981261,13.5333326398331" />
                  <mssgle:CubicBezierSegment
                    Point1="48.4999983981261,13.5333326398331"
                    Point2="52.4999983981261,13.5333326398331"
                    Point3="52.4999983981261,17.5333326398331" />
                  <mssgle:LineSegment
                    End="52.4999983981261,19.5666652796663" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="302.666662730277,165.099997745156">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="52.833337269723,25.900002254844"
              Start="0,0"
              End="52.833337269723,18.400002254844">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,8.950001127422" />
                  <mssgle:CubicBezierSegment
                    Point1="0,8.950001127422"
                    Point2="0,12.950001127422"
                    Point3="4,12.950001127422" />
                  <mssgle:LineSegment
                    End="48.833337269723,12.950001127422" />
                  <mssgle:CubicBezierSegment
                    Point1="48.833337269723,12.950001127422"
                    Point2="52.833337269723,12.950001127422"
                    Point3="52.833337269723,16.950001127422" />
                  <mssgle:LineSegment
                    End="52.833337269723,18.400002254844" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Create Group 2 Dup Vin Excel">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="155,43"
          Id="Package\Create Group 2 Dup Vin Excel\Same Seller File"
          TopLeft="96.4206334689544,249.617454995646" />
        <NodeLayout
          Size="225,42"
          Id="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two"
          TopLeft="251.499996833503,20.2333324887355" />
        <NodeLayout
          Size="169,43"
          Id="Package\Create Group 2 Dup Vin Excel\Different Seller File"
          TopLeft="280.726186054626,250.111106137246" />
        <NodeLayout
          Size="163,42"
          Id="Package\Create Group 2 Dup Vin Excel\Script Component"
          TopLeft="279,88" />
        <NodeLayout
          Size="161,43"
          Id="Package\Create Group 2 Dup Vin Excel\Different Address"
          TopLeft="477.499992363155,249.722216862771" />
        <NodeLayout
          Size="155,42"
          Id="Package\Create Group 2 Dup Vin Excel\Conditional Split"
          TopLeft="283,158" />
        <EdgeLayout
          Id="Package\Create Group 2 Dup Vin Excel.Paths[Same Seller]"
          TopLeft="323.75,200">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-149.829366531046,49.617454995646"
              Start="0,0"
              End="-149.829366531046,42.117454995646">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.0986155693241" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.0986155693241"
                    Point2="0,17.0986155693241"
                    Point3="-4,17.0986155693241" />
                  <mssgle:LineSegment
                    End="-145.829366531046,17.0986155693241" />
                  <mssgle:CubicBezierSegment
                    Point1="-145.829366531046,17.0986155693241"
                    Point2="-149.829366531046,17.0986155693241"
                    Point3="-149.829366531046,21.0986155693241" />
                  <mssgle:LineSegment
                    End="-149.829366531046,42.117454995646" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-101.644038734273,22.0986155693241,53.4587109375,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create Group 2 Dup Vin Excel.Paths[Output 0]"
          TopLeft="360.5,130">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,28"
              Start="0,0"
              End="0,20.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create Group 2 Dup Vin Excel.Paths[OLE DB Source Output]"
          TopLeft="362.249998416752,62.2333324887355">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,25.7666675112645"
              Start="0,0"
              End="0,18.2666675112645">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.2666675112645" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create Group 2 Dup Vin Excel.Paths[Not Same Seller]"
          TopLeft="362.863093027313,200">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,50.111106137246"
              Start="0,0"
              End="0,42.611106137246">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.611106137246" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-35.83369140625,16.431041349873,71.6673828125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create Group 2 Dup Vin Excel.Paths[Different Address]"
          TopLeft="416.25,200">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="141.749992363155,49.722216862771"
              Start="0,0"
              End="141.749992363155,42.222216862771">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.1347174389676" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.1347174389676"
                    Point2="0,17.1347174389676"
                    Point3="4,17.1347174389676" />
                  <mssgle:LineSegment
                    End="137.749992363155,17.1347174389676" />
                  <mssgle:CubicBezierSegment
                    Point1="137.749992363155,17.1347174389676"
                    Point2="141.749992363155,17.1347174389676"
                    Point3="141.749992363155,21.1347174389676" />
                  <mssgle:LineSegment
                    End="141.749992363155,42.222216862771" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="32.1174180565775,22.1347174389676,77.51515625,9.7978515625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Create Group 3 or More Dup Vin Excel">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="163,42"
          Id="Package\Create Group 3 or More Dup Vin Excel\Script Component"
          TopLeft="409,95" />
        <NodeLayout
          Size="166,42"
          Id="Package\Create Group 3 or More Dup Vin Excel\Different Seller file"
          TopLeft="405,297" />
        <NodeLayout
          Size="154,42"
          Id="Package\Create Group 3 or More Dup Vin Excel\Same Seller File"
          TopLeft="184,296" />
        <NodeLayout
          Size="180,42"
          Id="Package\Create Group 3 or More Dup Vin Excel\Different Address File"
          TopLeft="624,298" />
        <NodeLayout
          Size="242,42"
          Id="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data"
          TopLeft="374,19" />
        <NodeLayout
          Size="155,42"
          Id="Package\Create Group 3 or More Dup Vin Excel\Conditional Split"
          TopLeft="416,175" />
        <EdgeLayout
          Id="Package\Create Group 3 or More Dup Vin Excel.Paths[Same Seller]"
          TopLeft="456.75,217">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-195.75,79"
              Start="0,0"
              End="-195.75,71.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.2241014799154" />
                  <mssgle:CubicBezierSegment
                    Point1="0,23.2241014799154"
                    Point2="0,27.2241014799154"
                    Point3="-4,27.2241014799154" />
                  <mssgle:LineSegment
                    End="-191.75,27.2241014799154" />
                  <mssgle:CubicBezierSegment
                    Point1="-191.75,27.2241014799154"
                    Point2="-195.75,27.2241014799154"
                    Point3="-195.75,31.2241014799154" />
                  <mssgle:LineSegment
                    End="-195.75,71.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-124.60435546875,32.2241014799154,53.4587109375,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create Group 3 or More Dup Vin Excel.Paths[Output 0]"
          TopLeft="492,137">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38"
              Start="0,0"
              End="0,30.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create Group 3 or More Dup Vin Excel.Paths[OLE DB Source Output]"
          TopLeft="492.75,61">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34"
              Start="0,0"
              End="0,26.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create Group 3 or More Dup Vin Excel.Paths[Different Seller]"
          TopLeft="490.75,217">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,80"
              Start="0,0"
              End="0,72.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,72.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-33.54369140625,31.36083984375,67.0873828125,9.7783203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create Group 3 or More Dup Vin Excel.Paths[Different Address]"
          TopLeft="530.25,217">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="183.75,81"
              Start="0,0"
              End="183.75,73.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.9133192389006" />
                  <mssgle:CubicBezierSegment
                    Point1="0,23.9133192389006"
                    Point2="0,27.9133192389006"
                    Point3="4,27.9133192389006" />
                  <mssgle:LineSegment
                    End="179.75,27.9133192389006" />
                  <mssgle:CubicBezierSegment
                    Point1="179.75,27.9133192389006"
                    Point2="183.75,27.9133192389006"
                    Point3="183.75,31.9133192389006" />
                  <mssgle:LineSegment
                    End="183.75,73.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="53.117421875,32.9133192389006,77.51515625,9.7978515625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Update Query String">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="164,43"
          Id="Package\Update Query String\Script Component"
          TopLeft="226.333333333333,122.666666666667" />
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>