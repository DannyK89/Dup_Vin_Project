<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/6/2017 10:49:42 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="OMNI-LAP11"
  DTS:CreatorName="LPC\dkowalski"
  DTS:DTSID="{1BF41C1B-D1E1-45E8-B456-21CF416215DC}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.0800.90"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="82"
  DTS:VersionGUID="{8784D139-A47C-445A-B134-BE2F3996EF44}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Different Address File]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{2F742E09-9176-40C0-B769-135BB375AB7A}"
      DTS:ObjectName="Different Address File">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="\\plinkdc1\home\IT\Development\Data Validation\Address Verification.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Account"
              DTS:DTSID="{80020BED-16AE-4388-A26F-17B74BDC502E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Policy Num"
              DTS:DTSID="{FCD77EE4-2871-4A65-A6F9-43E157B33BB1}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Status"
              DTS:DTSID="{680C6715-65AD-42C8-8C3A-52472B7AB14E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Customer"
              DTS:DTSID="{9C211147-4477-4936-84FC-51BF40B77FB0}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Address"
              DTS:DTSID="{E09578A6-EAF4-4BB9-BDE6-875536DD8335}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Address 2"
              DTS:DTSID="{8639080B-6CC0-492D-9E36-4951DC503797}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="City"
              DTS:DTSID="{8F133923-00D6-410B-AD16-2FB1A9CC6D58}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="State"
              DTS:DTSID="{FBF0036D-A4C3-4268-941A-D30D12812801}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Zip"
              DTS:DTSID="{01C5B43D-A8FF-4A0D-B8C4-43BE1367A6BF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Vin"
              DTS:DTSID="{AC26542D-BD82-4E56-9462-481425C433EC}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Seller Name"
              DTS:DTSID="{5D78595B-833B-4BCB-9EB2-C41B4FE3F4C7}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Seller Phone"
              DTS:DTSID="{9588CBD3-4357-4468-A610-11370CCC6D98}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Installments"
              DTS:DTSID="{0DB243DB-A08A-4803-8C64-B68185FBE94F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Payments Made"
              DTS:DTSID="{46DA184F-FFC9-4725-BE02-3B9B543A65E1}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Payments Remaining"
              DTS:DTSID="{31D5A40A-DFF8-4FB0-A65D-6181C5FB615B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Vehicle Year"
              DTS:DTSID="{9011DCEF-9C30-47EF-AC10-1A9594E3F5BA}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Vehicle Make"
              DTS:DTSID="{519C860F-F438-4DF9-8793-E7336A43DF5A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Vehicle Model"
              DTS:DTSID="{9204B619-C44E-4E22-ADED-3C709AA75770}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Admin"
              DTS:DTSID="{87D7D48B-EA2E-4D5B-B87B-2980E9365B63}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Coverage"
              DTS:DTSID="{F0468CCE-D07D-4853-8686-2677E191647B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="Effective Date"
              DTS:DTSID="{BFF9EF1B-E6A1-4098-9171-C4DD8FDB94F8}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="Create Date"
              DTS:DTSID="{4CE8FE55-9FEF-4B87-A6CB-35E1F7493ADF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="Non Pay Cancel Date"
              DTS:DTSID="{26503FE5-B91A-48AE-9EF0-63C58C61AEAB}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="Company Cancel Date"
              DTS:DTSID="{7D80E5E8-FBAE-418A-A563-9A1CE34D30E3}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Notes"
              DTS:DTSID="{FAE7653F-C8D3-46C3-B878-F788705BC398}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Different Address File 3 or More]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{B115AD74-DB14-48B6-83D2-81625138C5D3}"
      DTS:ObjectName="Different Address File 3 or More">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="\\plinkdc1\home\IT\Development\Data Validation\3+Accounts.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Account"
              DTS:DTSID="{CA2FD27E-DECF-4D5B-AA91-67BB5814C66C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Policy Num"
              DTS:DTSID="{301227D6-7E1F-4B3E-8DBA-77E749CCEAE3}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Status"
              DTS:DTSID="{9FE3266E-B482-46F9-BEA2-529985715F88}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Customer"
              DTS:DTSID="{99C2D851-8901-4BC5-90F8-1AFA29484FF4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Address"
              DTS:DTSID="{692CDA46-F565-4127-9C1A-2861A9AD51E7}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Address 2"
              DTS:DTSID="{AB6ED9D0-21B7-4A67-945B-62867FF03327}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="City"
              DTS:DTSID="{25C5FF39-E051-43EA-B6D4-97DD4E4BEFAE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="State"
              DTS:DTSID="{F959034B-0F95-4202-95DF-367572C87CD2}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Zip"
              DTS:DTSID="{C26B08F2-5182-4539-B5E2-4E553C359ACB}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Vin"
              DTS:DTSID="{7D601178-FA32-4445-8581-606EB1B3FD0B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Seller Name"
              DTS:DTSID="{1ABCD6D5-294F-482D-BC10-A146096640D0}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Seller Phone"
              DTS:DTSID="{03C80BB6-92BD-4D21-9452-AE00406F6D14}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Installments"
              DTS:DTSID="{18B9F311-E09D-4C19-A821-B400DC142849}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Payments Made"
              DTS:DTSID="{65B96281-2657-4246-A490-CC6970899779}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Payments Remaining"
              DTS:DTSID="{5605C215-676B-4F4B-900C-7C8BC0303F05}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Vehicle Year"
              DTS:DTSID="{6F5E9104-A215-4E5C-B780-FE0F32CE5D1F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Vehicle Make"
              DTS:DTSID="{FCF38F86-8DDD-446B-9F39-7B2815538BA4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Vehicle Model"
              DTS:DTSID="{8133D507-C77A-4BB8-A543-A0E2A1836661}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Admin"
              DTS:DTSID="{F22D61A9-8D4A-4C22-A7A5-1A4B640BF9D7}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Coverage"
              DTS:DTSID="{02FEF21F-BF1C-4995-916E-E7AAECB6044F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="Effective Date"
              DTS:DTSID="{6897E488-DF54-44E8-BE75-346467AACC27}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="Create Date"
              DTS:DTSID="{B8125876-EE98-4B82-A1B1-98A4988FB5F8}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="Non Payment Cancel Date"
              DTS:DTSID="{330AAE82-5AB4-4C5C-8BC1-759CA8E764F9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="Company Cancel Date"
              DTS:DTSID="{CAFE8E7A-6195-4A4E-AB0C-7A560341CEFF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Notes"
              DTS:DTSID="{4DFBCC88-CA55-4761-B936-85C64671E831}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Different Seller File]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{CCB6324A-05E9-411A-8A78-2DFBDDC4A670}"
      DTS:ObjectName="Different Seller File">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="\\plinkdc1\home\IT\Development\Data Validation\Send Letter.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Account"
              DTS:DTSID="{40949FD9-5FBC-4A24-9431-313350355E09}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Policy Num"
              DTS:DTSID="{CE9EC1A4-6A98-4D34-BBBE-B8FCFBD0EA42}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Status"
              DTS:DTSID="{FDD2C323-FAF0-43C3-975B-B9BE36E3403A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Customer"
              DTS:DTSID="{16553E2E-46D8-446D-8038-33838A9BB46C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Address"
              DTS:DTSID="{C1F24EB2-65B9-4C51-BB25-04961F64E22F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Address 2"
              DTS:DTSID="{4A2D4DC5-BB95-4643-9F5A-F07F7564FADF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="City"
              DTS:DTSID="{76D75579-4A87-4C1C-9AEA-436820C05F3F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="State"
              DTS:DTSID="{893A5610-5A11-4BD9-A581-EF2228483928}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Zip"
              DTS:DTSID="{913B152D-1387-4003-9FDB-937F7BB89490}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Vin"
              DTS:DTSID="{BDE27C01-3E6A-42D4-9D5E-2747F4FD19E1}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Seller Name"
              DTS:DTSID="{EA14E0F8-86F8-471E-9B92-147D8598D878}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Seller Phone"
              DTS:DTSID="{05FFE553-9A2F-4574-ADDC-558FAE7AA772}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Installments"
              DTS:DTSID="{A24C6744-8326-4B1B-A000-6531E7B2514C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Payments Made"
              DTS:DTSID="{78FCD9FD-F635-4FF4-9E48-B35687A3FD15}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Payments Remaining"
              DTS:DTSID="{2EDAE6F5-CAA3-4184-81A9-960504F10004}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Vehicle Year"
              DTS:DTSID="{9B56C4EB-7D66-4B5B-B0F4-382008ABF70B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Vehicle Make"
              DTS:DTSID="{A6C3758A-03EF-4285-979E-9EF28256F349}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Vehicle Model"
              DTS:DTSID="{66A1223A-AE3A-42D7-9FAD-DC5C063A3C36}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Admin"
              DTS:DTSID="{A9FD203D-A329-439A-A9CF-69DEF2C7230A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Coverage"
              DTS:DTSID="{CF5AB308-DE14-4E1F-BCB9-DEE9432C1112}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="Effective Date"
              DTS:DTSID="{BB7282E4-888F-434F-96D2-9D0D8F42EA70}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="Create Date"
              DTS:DTSID="{664E3EC9-1C58-482A-AA0A-7A23EBFC3CD4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="Non Pay Cancel Date"
              DTS:DTSID="{A830D2DB-69D9-4BED-864F-31E796C79F0F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="Company Cancel Date"
              DTS:DTSID="{DA528688-CBFA-4131-9707-D20C0ACA2419}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Notes"
              DTS:DTSID="{6E140D8A-C2E6-41E5-ACF9-7200286B449F}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Different Seller File 3 or More]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{DBCCFC88-269C-4BCE-AC26-FD6BF58CA857}"
      DTS:ObjectName="Different Seller File 3 or More">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="\\plinkdc1\home\IT\Development\Data Validation\Possbile Rejection.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Account"
              DTS:DTSID="{11BAA722-DBEB-42BB-BE34-6E25E32BC982}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Policy Num"
              DTS:DTSID="{3E10E6D5-D328-4C6C-BD3B-B5DBB6A4108F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Status"
              DTS:DTSID="{1BA59DD8-5070-45A2-8029-C47B43572242}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Customer"
              DTS:DTSID="{503CF946-34FF-49E9-A0B9-CC1F902DDE29}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Address"
              DTS:DTSID="{587294FD-6C00-4FEE-902F-FCC4AB84FE53}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Address 2"
              DTS:DTSID="{B80B5AB2-DC37-4D65-8FC5-8214DC89613B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="City"
              DTS:DTSID="{5A0843CE-8D5C-4450-BC66-E5136CF26818}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="State"
              DTS:DTSID="{F2AA4530-8A46-4004-9177-688BC1612AB4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Zip"
              DTS:DTSID="{AE5AAEFE-01F3-4247-9823-D7BB8766C8D4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Vin"
              DTS:DTSID="{BB4C0D40-62A8-4D38-8872-BF58FE60E874}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Seller Name"
              DTS:DTSID="{B413FE82-920C-407B-982F-88EF2D090192}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Seller Phone"
              DTS:DTSID="{02C71B14-91CA-4FB6-AF9B-23E2CD9E215B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Installments"
              DTS:DTSID="{CACDAD2F-F1DC-4BAF-889E-51E5EA11576D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Payments Made"
              DTS:DTSID="{C532B7FC-DD79-4397-B962-6455AB5510C7}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Payments Remaining"
              DTS:DTSID="{69141754-9ED5-4D86-9EA7-386B7FD088DF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Vehicle Year"
              DTS:DTSID="{60AD3DD3-6ABE-474E-A4B5-885FB1C44889}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Vehicle Make"
              DTS:DTSID="{773DD8E7-7EFD-48AC-96C8-7EBD5E74646C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Vehicle Model"
              DTS:DTSID="{CEF924BE-83D6-4D3C-9C67-CA0CE3801477}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Admin"
              DTS:DTSID="{C6BCB118-DFAC-4BC3-8130-2ED3CCD7ECA4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Coverage"
              DTS:DTSID="{FF14A13A-6B5C-486F-962F-C05C0E937F3D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="Effective Date"
              DTS:DTSID="{09BCB609-33AA-4E25-99D2-807622B20184}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="Create Date"
              DTS:DTSID="{CC50E136-7FF0-48BE-A69C-A9C6FBF8FF46}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="Non Payment Cancel Date"
              DTS:DTSID="{17172CE1-19C6-493B-8D77-F586C5BD7FBD}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="Company Cancel Date"
              DTS:DTSID="{7986A2B1-1F55-4150-9BD2-A0611993CC78}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Notes"
              DTS:DTSID="{E4E1A1D6-745F-49CB-B6C8-2C8ABFFD5E4E}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[PLINKDB1.WF_AccountNet]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{4DD77B27-B207-4C95-88FD-5563F562EDE7}"
      DTS:ObjectName="PLINKDB1.WF_AccountNet">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=PLINKDB1;Initial Catalog=WF_AccountNet;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Same Seller File 3 Or More]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{78EEADF5-9D6B-4D1F-A7AB-36FA4FED11AD}"
      DTS:ObjectName="Same Seller File 3 Or More">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="\\plinkdc1\home\IT\Development\Data Validation\Coverage Verification.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Account"
              DTS:DTSID="{E19B1BC3-7C38-4226-873C-72F992698FB9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Policy Num"
              DTS:DTSID="{9B8A2B03-28FC-4947-AF44-45D5501D64DA}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Status"
              DTS:DTSID="{9D453F76-DE44-46F5-B373-678C1ADDED34}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Customer"
              DTS:DTSID="{C9803146-903A-4D12-9675-6461CC6848A6}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Address"
              DTS:DTSID="{3DEDEF1A-3AEA-4EBB-87B0-F796B8ECA829}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Address 2"
              DTS:DTSID="{22F10E3F-20E0-4ED0-A81D-0BE4B9F20EA0}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="City"
              DTS:DTSID="{FD36C03F-9AA3-4146-B6D7-FC3D04C4B7B2}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="State"
              DTS:DTSID="{7B7EB2AB-CC3C-4BE1-9230-790A3E414B22}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Zip"
              DTS:DTSID="{31EEAE19-D3E7-47B7-9E15-9976021A6F8B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Vin"
              DTS:DTSID="{5470CE1E-110F-48C4-9B6D-5B734FF16DFB}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Seller Name"
              DTS:DTSID="{6F7BB80C-BB2D-4068-9926-8E29E5B5BC73}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Seller Phone"
              DTS:DTSID="{15FA81ED-C74F-4712-B257-729588FEC51E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Installments"
              DTS:DTSID="{58C3055E-F392-459F-ACA5-9491D2A3851E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Payments Made"
              DTS:DTSID="{F6B82484-BB7A-49BA-9128-BA964B50C3F6}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Payments Remaining"
              DTS:DTSID="{98357F59-D72A-4B30-8894-0672A94B2A5F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Vehicle Year"
              DTS:DTSID="{31845229-1275-4A17-B1C1-4A1C0FEF4F48}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Vehicle Make"
              DTS:DTSID="{25F8F720-E7D0-485E-B464-A09826A4B8E5}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Vehicle Model"
              DTS:DTSID="{46E81B39-0857-4224-A06B-6FAE6533B568}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Admin"
              DTS:DTSID="{ACD4ECB5-25E5-4B78-B5BE-3267E460766B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Coverage"
              DTS:DTSID="{505C99EA-EDEE-49FD-9D3D-B1012C8464D9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="Effective Date"
              DTS:DTSID="{EC953FAF-7E27-4F2F-BD1F-872AB227B3E2}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="Create Date"
              DTS:DTSID="{1A1E3D43-647C-4226-BF03-03E9BABBF78B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="Non Payment Cancel Date"
              DTS:DTSID="{B47B63C5-9AA2-4692-9A5B-307A3D1D7D48}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="Company Cancel Date"
              DTS:DTSID="{D3037FF4-AA6C-4817-A4EF-8FACF3824C45}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Notes"
              DTS:DTSID="{1E0ECCA2-46F6-4EC8-B91B-9AE22F3DB454}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Same Seller Records]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{C5C64FE6-583B-4926-A856-F0ECE48A4CBE}"
      DTS:ObjectName="Same Seller Records">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="\\plinkdc1\home\IT\Development\Data Validation\Verify Contract.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Account"
              DTS:DTSID="{4CB58C8F-E2E7-4C9B-AB9D-B6D6DA2F666D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Policy Num"
              DTS:DTSID="{8AC91C79-7620-47E6-9AB5-6947F04BF69A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Status"
              DTS:DTSID="{57BEECDA-F2B9-4F83-892B-B272F1DF789A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Customer"
              DTS:DTSID="{D470CE0D-835E-408F-A3C2-24B8F6AC40C3}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Address"
              DTS:DTSID="{C43FABB5-75B3-4DCA-8536-8CD80632F8B7}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Address 2"
              DTS:DTSID="{D6AB76F2-7EF0-4E18-BBDD-CA3E8CC69766}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="City"
              DTS:DTSID="{A0700787-2EA0-4466-83C5-2E4FCA387A33}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="State"
              DTS:DTSID="{B62C6F44-7CC3-4197-8BD2-766EB634B08C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Zip"
              DTS:DTSID="{16F9CFA0-15FF-4244-8810-1395C620BEF9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Vin"
              DTS:DTSID="{1AB45A52-ACBD-4E5B-8F01-3208482B9636}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Seller Name"
              DTS:DTSID="{BD46B820-1A54-4B17-A8B6-D38A9B259087}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Seller Phone"
              DTS:DTSID="{994AF674-D900-4EC6-9AC7-01BA68D7C775}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Installments"
              DTS:DTSID="{9C27CF9A-6C82-4DB8-BC3E-E85B58021084}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Payments Made"
              DTS:DTSID="{4BD93B89-E4CE-4F66-AF7E-CDA6EDCB3274}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Payments Remaining"
              DTS:DTSID="{FAB049A2-0A8E-4554-B97D-583FABF3CF95}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Vehicle Year"
              DTS:DTSID="{9359C3FC-9C41-497A-9E58-83443346F252}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Vehicle Make"
              DTS:DTSID="{CCFC33D5-701D-403F-8C6A-4116AB310259}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Vehicle Model"
              DTS:DTSID="{C6FD4CED-66D9-4082-9375-3F3ED1649A84}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Admin"
              DTS:DTSID="{A924372A-605F-4B74-87DA-F20B5C52855E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Coverage"
              DTS:DTSID="{4E10C917-BA68-4B3F-B1ED-9094D6D76F4F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="Effective Date"
              DTS:DTSID="{D0CB12B2-40AE-4970-B567-8C7B78C4BBCF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="Create Date"
              DTS:DTSID="{7D69054A-8417-4CC3-B615-2993A916241D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="Non Pay Cancel Date"
              DTS:DTSID="{C7310D0A-1F30-4BF9-802E-D4F9815DAA59}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="135"
              DTS:TextQualified="True"
              DTS:ObjectName="Company Cancel Date"
              DTS:DTSID="{569903D1-2350-4BB9-9032-878735966A16}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="4000"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Notes"
              DTS:DTSID="{1B29BA99-C68B-429C-B06D-D760D1A619EB}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1330E27B-C263-408E-B192-8D2599F2129E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Dup_Vin_Query_Two">
      <DTS:VariableValue
        DTS:DataType="8">select w3.vin, v2.ACCT_NUM, asd.description as status, v2.insured, v2.address1, v2.address2, v2.city, v2.state, v2.zip, w3.vehicle_year, w3.VEHICLE_Make, w3.VEHICLE_Model, v2.agent_name, p2.company_name, p2.coverage, p2.company_cancel_date, c2.cancel_date, p2.eff_date, v2.create_date, p2.policy_num, c2.installments, c2.payments_made, c2.payments_remaining, a2.phone  from(  select distinct x.vin from( select w.vin,count(*) as total from a_ascii_war w with(noexpand)  Inner join a_ascii_vit v with(noexpand) on w.acct_num=v.acct_num   INNER JOIN Account_Status [as] with(nolock) on w.acct_num = [as].acct_num where [As].status_id in(1,2,3) and v.create_date&lt;= '10/5/2017' group by  w.vin having count(vin)=2) as x  inner join a_ascii_war w2 on w2.vin=x.vin inner join a_ascii_vit with(noexpand) on a_ascii_vit.acct_num=w2.acct_num   where  a_ascii_vit.create_date between '9/29/2017' and '10/5/2017') as y  inner join a_ascii_war w3 with(noexpand) on w3.vin=y.vin inner join a_ascii_vit v2 with(noexpand) on v2.acct_num=w3.acct_num inner join a_ascii_con c2 with(noexpand) on c2.acct_num=w3.acct_num inner join a_ascii_pol p2 with(noexpand) on p2.acct_num=w3.acct_num inner join ascii_agt a2 with(nolock) on v2.business=a2.business and v2.agent_code = a2.code INNER JOIN Account_Status sts with(nolock) on v2.acct_num = sts.acct_num inner join AccountStatusDescription asd with(nolock) ON sts.Status_ID = asd.ID where sts.status_id not in(5,7) and create_date&lt;= '10/5/2017'  order by w3.vin</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BAFE3AB9-4332-4F0D-84E8-5276F808F1AD}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Dup_Vin_Three_or_More">
      <DTS:VariableValue
        DTS:DataType="8">select w3.vin, v2.ACCT_NUM, asd.description as status, v2.insured, v2.address1, v2.address2, v2.city, v2.state, v2.zip, w3.vehicle_year, w3.VEHICLE_Make, w3.VEHICLE_Model, v2.agent_name, p2.company_name, p2.coverage, p2.company_cancel_date, c2.cancel_date, p2.eff_date, v2.create_date, p2.policy_num, c2.installments, c2.payments_made, c2.payments_remaining, a2.phone  from(  select distinct x.vin from( select w.vin,count(*) as total from a_ascii_war w with(noexpand)  Inner join a_ascii_vit v with(noexpand) on w.acct_num=v.acct_num   INNER JOIN Account_Status [as] with(nolock) on w.acct_num = [as].acct_num where [As].status_id in(1,2,3) and v.create_date&lt;= '10/5/2017' group by  w.vin having count(vin)&gt;2) as x  inner join a_ascii_war w2 on w2.vin=x.vin inner join a_ascii_vit with(noexpand) on a_ascii_vit.acct_num=w2.acct_num   where  a_ascii_vit.create_date between '9/29/2017' and '10/5/2017') as y  inner join a_ascii_war w3 with(noexpand) on w3.vin=y.vin inner join a_ascii_vit v2 with(noexpand) on v2.acct_num=w3.acct_num inner join a_ascii_con c2 with(noexpand) on c2.acct_num=w3.acct_num inner join a_ascii_pol p2 with(noexpand) on p2.acct_num=w3.acct_num inner join ascii_agt a2 with(nolock) on v2.business=a2.business and v2.agent_code = a2.code INNER JOIN Account_Status sts with(nolock) on v2.acct_num = sts.acct_num inner join AccountStatusDescription asd with(nolock) ON sts.Status_ID = asd.ID where sts.status_id not in(5,7) and create_date&lt;= '10/5/2017'  order by w3.vin</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Create Group 2 Dup Vin Excel"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{5781F542-19FD-4CBB-BC8B-0754ACF74446}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create Group 2 Dup Vin Excel"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Create Group 2 Dup Vin Excel\Conditional Split"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Conditional Split"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Create Group 2 Dup Vin Excel\Conditional Split.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Conditional Split.Inputs[Conditional Split Input].Columns[Dup Reason]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Dup Reason"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Dup Reason]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create Group 2 Dup Vin Excel\Conditional Split.Outputs[Same Seller]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Same Seller"
                  synchronousInputId="Package\Create Group 2 Dup Vin Excel\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Dup Reason]} == "Same Seller"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">[Dup Reason] == "Same Seller"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Create Group 2 Dup Vin Excel\Conditional Split.Outputs[Not Same Seller]"
                  description="Output 2 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Not Same Seller"
                  synchronousInputId="Package\Create Group 2 Dup Vin Excel\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Dup Reason]} == "Different Seller"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">[Dup Reason] == "Different Seller"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">1</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Create Group 2 Dup Vin Excel\Conditional Split.Outputs[Different Address]"
                  description="Output 3 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Different Address"
                  synchronousInputId="Package\Create Group 2 Dup Vin Excel\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Dup Reason]} == "Different Address"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">[Dup Reason] == "Different Address"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">2</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Create Group 2 Dup Vin Excel\Conditional Split.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Create Group 2 Dup Vin Excel\Conditional Split.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Create Group 2 Dup Vin Excel\Conditional Split.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Create Group 2 Dup Vin Excel\Conditional Split.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create Group 2 Dup Vin Excel\Different Address"
              componentClassID="Microsoft.FlatFileDestination"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Flat File Destination"
              localeId="1033"
              name="Different Address">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">true</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
              </properties>
              <connections>
                <connection
                  refId="Package\Create Group 2 Dup Vin Excel\Different Address.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Different Address File]"
                  connectionManagerRefId="Package.ConnectionManagers[Different Address File]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[Account]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Account"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Account]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Account]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[Policy Num]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Policy Num"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Policy Num]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Policy Num]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[Status]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Status"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Status]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Status]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[Customer]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Customer"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Customer]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Customer]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[Address]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Address"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Address]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Address]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[Address 2]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Address 2"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Address 2]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Address 2]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[City]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="City"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[City]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[City]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[State]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="State"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[State]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[State]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[Zip]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Zip"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Zip]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Zip]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[Vin]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Vin"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Vin]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Vin]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[Seller Name]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Seller Name"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Seller Name]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Seller Name]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[Seller Phone]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Seller Phone"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Seller Phone]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Seller Phone]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[Installments]"
                      cachedDataType="i4"
                      cachedName="Installments"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Installments]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Installments]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[Payments Made]"
                      cachedDataType="i4"
                      cachedName="Payments Made"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Payments Made]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Payments Made]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[Payments Remaining]"
                      cachedDataType="i4"
                      cachedName="Payments Remaining"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Payments Remaining]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Payments Remaining]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[Vehicle Year]"
                      cachedDataType="i4"
                      cachedName="Vehicle Year"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Vehicle Year]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Vehicle Year]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[Vehicle Make]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Vehicle Make"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Vehicle Make]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Vehicle Make]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[Vehicle Model]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Vehicle Model"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Vehicle Model]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Vehicle Model]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[Admin]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Admin"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Admin]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Admin]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[Coverage]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Coverage"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Coverage]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Coverage]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[Effective Date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Effective Date"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Effective Date]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Effective Date]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[Create Date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Create Date"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Create Date]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Create Date]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[Non Pay Cancel Date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Non Pay Cancel Date"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Non Pay Cancel Date]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Non Pay Cancel Date]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[Company Cancel Date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Company Cancel Date"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Company Cancel Date]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Company Cancel Date]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].Columns[Notes]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Notes"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Notes]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Notes]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Account]"
                      dataType="wstr"
                      length="4000"
                      name="Account" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Policy Num]"
                      dataType="wstr"
                      length="4000"
                      name="Policy Num" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Status]"
                      dataType="wstr"
                      length="4000"
                      name="Status" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Customer]"
                      dataType="wstr"
                      length="4000"
                      name="Customer" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Address]"
                      dataType="wstr"
                      length="4000"
                      name="Address" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Address 2]"
                      dataType="wstr"
                      length="4000"
                      name="Address 2" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[City]"
                      dataType="wstr"
                      length="4000"
                      name="City" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[State]"
                      dataType="wstr"
                      length="4000"
                      name="State" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Zip]"
                      dataType="wstr"
                      length="4000"
                      name="Zip" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Vin]"
                      dataType="wstr"
                      length="4000"
                      name="Vin" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Seller Name]"
                      dataType="wstr"
                      length="4000"
                      name="Seller Name" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Seller Phone]"
                      dataType="wstr"
                      length="4000"
                      name="Seller Phone" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Installments]"
                      dataType="i4"
                      name="Installments" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Payments Made]"
                      dataType="i4"
                      name="Payments Made" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Payments Remaining]"
                      dataType="i4"
                      name="Payments Remaining" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Vehicle Year]"
                      dataType="i4"
                      name="Vehicle Year" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Vehicle Make]"
                      dataType="wstr"
                      length="4000"
                      name="Vehicle Make" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Vehicle Model]"
                      dataType="wstr"
                      length="4000"
                      name="Vehicle Model" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Admin]"
                      dataType="wstr"
                      length="4000"
                      name="Admin" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Coverage]"
                      dataType="wstr"
                      length="4000"
                      name="Coverage" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Effective Date]"
                      dataType="dbTimeStamp"
                      name="Effective Date" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Create Date]"
                      dataType="dbTimeStamp"
                      name="Create Date" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Non Pay Cancel Date]"
                      dataType="dbTimeStamp"
                      name="Non Pay Cancel Date" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Company Cancel Date]"
                      dataType="dbTimeStamp"
                      name="Company Cancel Date" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input].ExternalColumns[Notes]"
                      dataType="wstr"
                      length="4000"
                      name="Notes" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Create Group 2 Dup Vin Excel\Different Seller File"
              componentClassID="Microsoft.FlatFileDestination"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Flat File Destination"
              localeId="1033"
              name="Different Seller File">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">true</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
              </properties>
              <connections>
                <connection
                  refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Different Seller File]"
                  connectionManagerRefId="Package.ConnectionManagers[Different Seller File]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[Account]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Account"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Account]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Account]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[Policy Num]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Policy Num"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Policy Num]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Policy Num]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[Status]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Status"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Status]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Status]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[Customer]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Customer"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Customer]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Customer]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[Address]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Address"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Address]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Address]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[Address 2]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Address 2"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Address 2]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Address 2]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[City]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="City"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[City]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[City]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[State]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="State"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[State]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[State]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[Zip]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Zip"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Zip]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Zip]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[Vin]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Vin"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Vin]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Vin]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[Seller Name]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Seller Name"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Seller Name]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Seller Name]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[Seller Phone]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Seller Phone"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Seller Phone]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Seller Phone]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[Installments]"
                      cachedDataType="i4"
                      cachedName="Installments"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Installments]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Installments]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[Payments Made]"
                      cachedDataType="i4"
                      cachedName="Payments Made"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Payments Made]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Payments Made]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[Payments Remaining]"
                      cachedDataType="i4"
                      cachedName="Payments Remaining"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Payments Remaining]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Payments Remaining]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[Vehicle Year]"
                      cachedDataType="i4"
                      cachedName="Vehicle Year"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Vehicle Year]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Vehicle Year]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[Vehicle Make]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Vehicle Make"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Vehicle Make]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Vehicle Make]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[Vehicle Model]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Vehicle Model"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Vehicle Model]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Vehicle Model]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[Admin]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Admin"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Admin]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Admin]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[Coverage]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Coverage"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Coverage]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Coverage]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[Effective Date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Effective Date"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Effective Date]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Effective Date]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[Create Date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Create Date"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Create Date]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Create Date]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[Non Pay Cancel Date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Non Pay Cancel Date"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Non Pay Cancel Date]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Non Pay Cancel Date]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[Company Cancel Date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Company Cancel Date"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Company Cancel Date]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Company Cancel Date]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].Columns[Notes]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Notes"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Notes]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Notes]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Account]"
                      dataType="wstr"
                      length="4000"
                      name="Account" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Policy Num]"
                      dataType="wstr"
                      length="4000"
                      name="Policy Num" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Status]"
                      dataType="wstr"
                      length="4000"
                      name="Status" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Customer]"
                      dataType="wstr"
                      length="4000"
                      name="Customer" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Address]"
                      dataType="wstr"
                      length="4000"
                      name="Address" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Address 2]"
                      dataType="wstr"
                      length="4000"
                      name="Address 2" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[City]"
                      dataType="wstr"
                      length="4000"
                      name="City" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[State]"
                      dataType="wstr"
                      length="4000"
                      name="State" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Zip]"
                      dataType="wstr"
                      length="4000"
                      name="Zip" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Vin]"
                      dataType="wstr"
                      length="4000"
                      name="Vin" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Seller Name]"
                      dataType="wstr"
                      length="4000"
                      name="Seller Name" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Seller Phone]"
                      dataType="wstr"
                      length="4000"
                      name="Seller Phone" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Installments]"
                      dataType="i4"
                      name="Installments" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Payments Made]"
                      dataType="i4"
                      name="Payments Made" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Payments Remaining]"
                      dataType="i4"
                      name="Payments Remaining" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Vehicle Year]"
                      dataType="i4"
                      name="Vehicle Year" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Vehicle Make]"
                      dataType="wstr"
                      length="4000"
                      name="Vehicle Make" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Vehicle Model]"
                      dataType="wstr"
                      length="4000"
                      name="Vehicle Model" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Admin]"
                      dataType="wstr"
                      length="4000"
                      name="Admin" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Coverage]"
                      dataType="wstr"
                      length="4000"
                      name="Coverage" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Effective Date]"
                      dataType="dbTimeStamp"
                      name="Effective Date" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Create Date]"
                      dataType="dbTimeStamp"
                      name="Create Date" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Non Pay Cancel Date]"
                      dataType="dbTimeStamp"
                      name="Non Pay Cancel Date" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Company Cancel Date]"
                      dataType="dbTimeStamp"
                      name="Company Cancel Date" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input].ExternalColumns[Notes]"
                      dataType="wstr"
                      length="4000"
                      name="Notes" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get Dup Vins in Groups of Two"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select w3.vin, w3.business, v2.acct_num, asd.description as status, v2.insured, v2.address1, v2.address2, v2.city, v2.state, v2.zip, w3.vehicle_year, w3.VEHICLE_Make, w3.VEHICLE_Model, v2.agent_name, p2.company_name, p2.coverage, p2.company_cancel_date, c2.cancel_date, p2.eff_date, v2.create_date, p2.policy_num, c2.installments, c2.payments_made, c2.payments_remaining, a2.phone from(select distinct x.vin from(select w.vin, count(*) as total from a_ascii_war w with(noexpand) Inner join a_ascii_vit v with(noexpand) on w.acct_num = v.acct_num INNER JOIN Account_Status[as] with(nolock) on w.acct_num = [as].acct_num where [As].status_id in(1, 2, 3) and v.create_date &lt;= '10/9/2017' group by  W.VIN having count(vin) &gt; 2) as x inner join a_ascii_war w2 on w2.vin = x.vin inner join a_ascii_vit with(noexpand)on a_ascii_vit.acct_num = w2.acct_num where a_ascii_vit.create_date between '10/3/2017' and '10/9/2017') as y inner join a_ascii_war w3 with(noexpand) on w3.vin = y.vin inner join a_ascii_vit v2 with(noexpand) on v2.acct_num = w3.acct_num inner join a_ascii_con c2 with(noexpand) on c2.acct_num = w3.acct_num inner join a_ascii_pol p2 with(noexpand) on p2.acct_num = w3.acct_num inner join ascii_agt a2 with(nolock) on v2.business = a2.business and v2.agent_code = a2.code INNER JOIN Account_Status sts with(nolock) on v2.acct_num = sts.acct_num inner join AccountStatusDescription asd with(nolock) ON sts.Status_ID = asd.ID where sts.status_id not in(5,7) and create_date&lt;= '10/9/2017' order by w3.vin</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable">User::Dup_Vin_Query_Two</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[PLINKDB1.WF_AccountNet]"
                  connectionManagerRefId="Package.ConnectionManagers[PLINKDB1.WF_AccountNet]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[vin]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[vin]"
                      length="50"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[vin]"
                      name="vin"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[status]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[status]"
                      length="50"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[status]"
                      name="status"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[insured]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[insured]"
                      length="100"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[insured]"
                      name="insured"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[address1]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[address1]"
                      length="150"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[address1]"
                      name="address1"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[address2]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[address2]"
                      length="150"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[address2]"
                      name="address2"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[city]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[city]"
                      length="50"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[city]"
                      name="city"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[state]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[state]"
                      length="50"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[state]"
                      name="state"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[zip]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[zip]"
                      length="50"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[zip]"
                      name="zip"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[vehicle_year]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[vehicle_year]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[vehicle_year]"
                      name="vehicle_year"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[VEHICLE_Make]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[VEHICLE_Make]"
                      length="50"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[VEHICLE_Make]"
                      name="VEHICLE_Make"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[VEHICLE_Model]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[VEHICLE_Model]"
                      length="50"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[VEHICLE_Model]"
                      name="VEHICLE_Model"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[agent_name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[agent_name]"
                      length="100"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[agent_name]"
                      name="agent_name"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[company_name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[company_name]"
                      length="100"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[company_name]"
                      name="company_name"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[coverage]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[coverage]"
                      length="50"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[coverage]"
                      name="coverage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[company_cancel_date]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[company_cancel_date]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[company_cancel_date]"
                      name="company_cancel_date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[cancel_date]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[cancel_date]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[cancel_date]"
                      name="cancel_date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[eff_date]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[eff_date]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[eff_date]"
                      name="eff_date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[create_date]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[create_date]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[create_date]"
                      name="create_date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[policy_num]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[policy_num]"
                      length="50"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[policy_num]"
                      name="policy_num"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[installments]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[installments]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[installments]"
                      name="installments"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[payments_made]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[payments_made]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[payments_made]"
                      name="payments_made"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[payments_remaining]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[payments_remaining]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[payments_remaining]"
                      name="payments_remaining"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[phone]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[phone]"
                      length="50"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[phone]"
                      name="phone"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[ACCT_NUM]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[ACCT_NUM]"
                      length="10"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[ACCT_NUM]"
                      name="ACCT_NUM"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[vin]"
                      dataType="wstr"
                      length="50"
                      name="vin" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[status]"
                      dataType="wstr"
                      length="50"
                      name="status" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[insured]"
                      dataType="wstr"
                      length="100"
                      name="insured" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[address1]"
                      dataType="wstr"
                      length="150"
                      name="address1" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[address2]"
                      dataType="wstr"
                      length="150"
                      name="address2" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[city]"
                      dataType="wstr"
                      length="50"
                      name="city" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[state]"
                      dataType="wstr"
                      length="50"
                      name="state" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[zip]"
                      dataType="wstr"
                      length="50"
                      name="zip" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[vehicle_year]"
                      dataType="i4"
                      name="vehicle_year" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[VEHICLE_Make]"
                      dataType="wstr"
                      length="50"
                      name="VEHICLE_Make" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[VEHICLE_Model]"
                      dataType="wstr"
                      length="50"
                      name="VEHICLE_Model" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[agent_name]"
                      dataType="wstr"
                      length="100"
                      name="agent_name" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[company_name]"
                      dataType="wstr"
                      length="100"
                      name="company_name" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[coverage]"
                      dataType="wstr"
                      length="50"
                      name="coverage" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[company_cancel_date]"
                      dataType="dbTimeStamp"
                      name="company_cancel_date" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[cancel_date]"
                      dataType="dbTimeStamp"
                      name="cancel_date" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[eff_date]"
                      dataType="dbTimeStamp"
                      name="eff_date" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[create_date]"
                      dataType="dbTimeStamp"
                      name="create_date" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[policy_num]"
                      dataType="wstr"
                      length="50"
                      name="policy_num" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[installments]"
                      dataType="i4"
                      name="installments" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[payments_made]"
                      dataType="i4"
                      name="payments_made" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[payments_remaining]"
                      dataType="i4"
                      name="payments_remaining" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[phone]"
                      dataType="wstr"
                      length="50"
                      name="phone" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].ExternalColumns[ACCT_NUM]"
                      dataType="wstr"
                      length="10"
                      name="ACCT_NUM" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[vin]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[vin]"
                      name="vin" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[ACCT_NUM]"
                      dataType="wstr"
                      length="10"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[ACCT_NUM]"
                      name="ACCT_NUM" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[status]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[status]"
                      name="status" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[insured]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[insured]"
                      name="insured" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[address1]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[address1]"
                      name="address1" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[address2]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[address2]"
                      name="address2" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[city]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[city]"
                      name="city" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[state]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[state]"
                      name="state" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[zip]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[zip]"
                      name="zip" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[vehicle_year]"
                      dataType="i4"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[vehicle_year]"
                      name="vehicle_year" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[VEHICLE_Make]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[VEHICLE_Make]"
                      name="VEHICLE_Make" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[VEHICLE_Model]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[VEHICLE_Model]"
                      name="VEHICLE_Model" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[agent_name]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[agent_name]"
                      name="agent_name" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[company_name]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[company_name]"
                      name="company_name" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[coverage]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[coverage]"
                      name="coverage" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[company_cancel_date]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[company_cancel_date]"
                      name="company_cancel_date" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[cancel_date]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[cancel_date]"
                      name="cancel_date" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[eff_date]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[eff_date]"
                      name="eff_date" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[create_date]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[create_date]"
                      name="create_date" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[policy_num]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[policy_num]"
                      name="policy_num" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[installments]"
                      dataType="i4"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[installments]"
                      name="installments" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[payments_made]"
                      dataType="i4"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[payments_made]"
                      name="payments_made" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[payments_remaining]"
                      dataType="i4"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[payments_remaining]"
                      name="payments_remaining" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[phone]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[phone]"
                      name="phone" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create Group 2 Dup Vin Excel\Same Seller File"
              componentClassID="Microsoft.FlatFileDestination"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Flat File Destination"
              localeId="1033"
              name="Same Seller File">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">true</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
              </properties>
              <connections>
                <connection
                  refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Same Seller Records]"
                  connectionManagerRefId="Package.ConnectionManagers[Same Seller Records]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Account]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Account"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Account]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Account]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Policy Num]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Policy Num"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Policy Num]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Policy Num]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Status]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Status"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Status]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Status]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Customer]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Customer"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Customer]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Customer]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Address]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Address"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Address]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Address]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Address 2]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Address 2"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Address 2]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Address 2]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[City]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="City"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[City]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[City]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[State]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="State"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[State]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[State]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Zip]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Zip"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Zip]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Zip]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Vin]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Vin"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Vin]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Vin]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Seller Name]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Seller Name"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Seller Name]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Seller Name]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Seller Phone]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Seller Phone"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Seller Phone]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Seller Phone]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Installments]"
                      cachedDataType="i4"
                      cachedName="Installments"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Installments]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Installments]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Payments Made]"
                      cachedDataType="i4"
                      cachedName="Payments Made"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Payments Made]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Payments Made]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Payments Remaining]"
                      cachedDataType="i4"
                      cachedName="Payments Remaining"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Payments Remaining]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Payments Remaining]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Vehicle Year]"
                      cachedDataType="i4"
                      cachedName="Vehicle Year"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Vehicle Year]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Vehicle Year]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Vehicle Make]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Vehicle Make"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Vehicle Make]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Vehicle Make]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Vehicle Model]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Vehicle Model"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Vehicle Model]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Vehicle Model]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Admin]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Admin"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Admin]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Admin]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Coverage]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Coverage"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Coverage]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Coverage]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Effective Date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Effective Date"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Effective Date]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Effective Date]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Create Date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Create Date"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Create Date]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Create Date]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Non Pay Cancel Date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Non Pay Cancel Date"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Non Pay Cancel Date]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Non Pay Cancel Date]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Company Cancel Date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Company Cancel Date"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Company Cancel Date]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Company Cancel Date]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Notes]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Notes"
                      externalMetadataColumnId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Notes]"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Notes]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Account]"
                      dataType="wstr"
                      length="4000"
                      name="Account" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Policy Num]"
                      dataType="wstr"
                      length="4000"
                      name="Policy Num" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Status]"
                      dataType="wstr"
                      length="4000"
                      name="Status" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Customer]"
                      dataType="wstr"
                      length="4000"
                      name="Customer" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Address]"
                      dataType="wstr"
                      length="4000"
                      name="Address" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Address 2]"
                      dataType="wstr"
                      length="4000"
                      name="Address 2" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[City]"
                      dataType="wstr"
                      length="4000"
                      name="City" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[State]"
                      dataType="wstr"
                      length="4000"
                      name="State" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Zip]"
                      dataType="wstr"
                      length="4000"
                      name="Zip" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Vin]"
                      dataType="wstr"
                      length="4000"
                      name="Vin" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Seller Name]"
                      dataType="wstr"
                      length="4000"
                      name="Seller Name" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Seller Phone]"
                      dataType="wstr"
                      length="4000"
                      name="Seller Phone" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Installments]"
                      dataType="i4"
                      name="Installments" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Payments Made]"
                      dataType="i4"
                      name="Payments Made" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Payments Remaining]"
                      dataType="i4"
                      name="Payments Remaining" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Vehicle Year]"
                      dataType="i4"
                      name="Vehicle Year" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Vehicle Make]"
                      dataType="wstr"
                      length="4000"
                      name="Vehicle Make" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Vehicle Model]"
                      dataType="wstr"
                      length="4000"
                      name="Vehicle Model" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Admin]"
                      dataType="wstr"
                      length="4000"
                      name="Admin" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Coverage]"
                      dataType="wstr"
                      length="4000"
                      name="Coverage" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Effective Date]"
                      dataType="dbTimeStamp"
                      name="Effective Date" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Create Date]"
                      dataType="dbTimeStamp"
                      name="Create Date" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Non Pay Cancel Date]"
                      dataType="dbTimeStamp"
                      name="Non Pay Cancel Date" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Company Cancel Date]"
                      dataType="dbTimeStamp"
                      name="Company Cancel Date" />
                    <externalMetadataColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Notes]"
                      dataType="wstr"
                      length="4000"
                      name="Notes" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Create Group 2 Dup Vin Excel\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="11">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Collections.Generic;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    List<RowList> ListofRows = new List<RowList>();
    int RowNum = 0;
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        RowList RowTemp = new RowList();

        if (RowNum != 0)RowTemp = ListofRows[RowNum - 1];
        else RowTemp.vin = "1";
        
        if(ListofRows.Count == 0 || !RowTemp.checkVin(Row.vin))
        {
            RowList tempRow = new RowList();
            updateRowInformation(tempRow, Row);

            ListofRows.Add(tempRow);
            RowNum++;
        }
        else if (RowTemp.checkVin(Row.vin) && RowTemp.checkSeller(Row.agentname))
        {
            bool addresscheck = false;
            RowList tempRow = new RowList();
            updateRowInformation(tempRow, Row);

            ListofRows.Add(tempRow);

            if (!RowTemp.checkAddress(Row.address1 + " " + Row.address2))
                addresscheck = true;

            foreach (RowList rowx in ListofRows)
            {
                if(addresscheck)
                    UpdateOutput(rowx, "Different Address");
                else
                    UpdateOutput(rowx, "Same Seller");
            }

            ListofRows.Clear();
            RowNum = 0;
        }
        else if (RowTemp.checkVin(Row.vin) && !RowTemp.checkSeller(Row.agentname))
        {
            bool addresscheck = false;
            RowList tempRow = new RowList();
            updateRowInformation(tempRow, Row);

            ListofRows.Add(tempRow);

            if (!RowTemp.checkAddress(Row.address1 + " " + Row.address2))
                addresscheck = true;
            
            foreach (RowList rowx in ListofRows)
            {
                if(addresscheck)
                    UpdateOutput(rowx, "Different Address");
                else
                    UpdateOutput(rowx, "Different Seller");
            }

            ListofRows.Clear();
            RowNum = 0;
        }
    }

    public class RowList
    {
        public string ACCTNUM = "";
        public string address1 = "";
        public string address2 = "";
        public string agentname = "";
        public DateTime canceldate = DateTime.Today;
        public string city = "";
        public DateTime companycanceldate = DateTime.Today;
        public string companyname = "";
        public string coverage = "";
        public DateTime createdate = DateTime.Today;
        public DateTime effdate = DateTime.Today;
        public int installments = 0;
        public string insured = "";
        public int paymentsmade = 0;
        public int paymentsremaining = 0;
        public string phone = "";
        public string policynum = "";
        public string state = "";
        public string status = "";
        public string VEHICLEMake = "";
        public string VEHICLEModel = "";
        public int vehicleyear = 0;
        public string vin = "";
        public string zip = "";

        public bool checkVin(string sentVin)
        {
            return sentVin == this.vin ? true : false;
        }

        public bool checkSeller(string sentSeller)
        {
            return sentSeller == this.agentname ? true : false;
        }

        public bool checkAddress(string sentAddress)
        {
            string combinedAddress = this.address1 + " " + this.address2;
            return sentAddress == combinedAddress ? true : false;
        }
    }

    public void updateRowInformation(RowList row, Input0Buffer input)
    {
        if (!input.ACCTNUM_IsNull)
            row.ACCTNUM = input.ACCTNUM;
        if (!input.address1_IsNull)
            row.address1 = input.address1;
        if (!input.address2_IsNull)
            row.address2 = input.address2;
        if (!input.agentname_IsNull)
            row.agentname = input.agentname;
        if (!input.canceldate_IsNull)
            row.canceldate = input.canceldate;
        if (!input.city_IsNull)
            row.city = input.city;
        if (!input.companycanceldate_IsNull)
            row.companycanceldate = input.companycanceldate;
        if (!input.companyname_IsNull)
            row.companyname = input.companyname;
        if (!input.coverage_IsNull)
            row.coverage = input.coverage;
        if (!input.createdate_IsNull)
            row.createdate = input.createdate;
        if (!input.effdate_IsNull)
            row.effdate = input.effdate;
        if (!input.installments_IsNull)
            row.installments = input.installments;
        if (!input.insured_IsNull)
            row.insured = input.insured;
        if (!input.paymentsmade_IsNull)
            row.paymentsmade = input.paymentsmade;
        if (!input.paymentsremaining_IsNull)
            row.paymentsremaining = input.paymentsremaining;
        if (!input.phone_IsNull)
            row.phone = input.phone;
        if (!input.policynum_IsNull)
            row.policynum = input.policynum;
        if (!input.state_IsNull)
            row.state = input.state;
        if (!input.status_IsNull)
            row.status = input.status;
        if (!input.VEHICLEMake_IsNull)
            row.VEHICLEMake = input.VEHICLEMake;
        if (!input.VEHICLEModel_IsNull)
            row.VEHICLEModel = input.VEHICLEModel;
        if (!input.vehicleyear_IsNull)
            row.vehicleyear = input.vehicleyear;
        if (!input.vin_IsNull)
            row.vin = input.vin;
        if (!input.zip_IsNull)
            row.zip = input.zip;
    }

    public void UpdateOutput(RowList rowx, string Reason)
    {
        Output0Buffer.AddRow();
        Output0Buffer.Account = rowx.ACCTNUM;
        Output0Buffer.Address = rowx.address1;
        Output0Buffer.Address2 = rowx.address2;
        Output0Buffer.SellerName = rowx.agentname;
        Output0Buffer.NonPayCancelDate = rowx.canceldate;
        Output0Buffer.City = rowx.city;
        Output0Buffer.CompanyCancelDate = rowx.companycanceldate;
        Output0Buffer.Admin = rowx.companyname;
        Output0Buffer.Coverage = rowx.coverage;
        Output0Buffer.CreateDate = rowx.createdate;
        Output0Buffer.EffectiveDate = rowx.effdate;
        Output0Buffer.Installments = rowx.installments;
        Output0Buffer.PaymentsMade = rowx.paymentsmade;
        Output0Buffer.PaymentsRemaining = rowx.paymentsremaining;
        Output0Buffer.PolicyNum = rowx.policynum;
        Output0Buffer.SellerPhone = rowx.phone;
        Output0Buffer.State = rowx.state;
        Output0Buffer.Status = rowx.status;
        Output0Buffer.VehicleMake = rowx.VEHICLEMake;
        Output0Buffer.VehicleModel = rowx.VEHICLEModel;
        Output0Buffer.VehicleYear = rowx.vehicleyear;
        Output0Buffer.Vin = rowx.vin;
        Output0Buffer.Zip = rowx.zip;
        Output0Buffer.DupReason = Reason;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String vin
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool vin_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String status
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool status_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String insured
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool insured_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String address1
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool address1_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String address2
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool address2_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String city
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool city_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String state
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool state_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public String zip
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[7]);
        }
    }
    public bool zip_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    public Int32 vehicleyear
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[8]);
        }
    }
    public bool vehicleyear_IsNull
    {
        get
        {
            return IsNull(8);
        }
    }

    public String VEHICLEMake
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[9]);
        }
    }
    public bool VEHICLEMake_IsNull
    {
        get
        {
            return IsNull(9);
        }
    }

    public String VEHICLEModel
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[10]);
        }
    }
    public bool VEHICLEModel_IsNull
    {
        get
        {
            return IsNull(10);
        }
    }

    public String agentname
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[11]);
        }
    }
    public bool agentname_IsNull
    {
        get
        {
            return IsNull(11);
        }
    }

    public String companyname
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[12]);
        }
    }
    public bool companyname_IsNull
    {
        get
        {
            return IsNull(12);
        }
    }

    public String coverage
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[13]);
        }
    }
    public bool coverage_IsNull
    {
        get
        {
            return IsNull(13);
        }
    }

    public DateTime companycanceldate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[14]);
        }
    }
    public bool companycanceldate_IsNull
    {
        get
        {
            return IsNull(14);
        }
    }

    public DateTime canceldate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[15]);
        }
    }
    public bool canceldate_IsNull
    {
        get
        {
            return IsNull(15);
        }
    }

    public DateTime effdate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[16]);
        }
    }
    public bool effdate_IsNull
    {
        get
        {
            return IsNull(16);
        }
    }

    public DateTime createdate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[17]);
        }
    }
    public bool createdate_IsNull
    {
        get
        {
            return IsNull(17);
        }
    }

    public String policynum
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[18]);
        }
    }
    public bool policynum_IsNull
    {
        get
        {
            return IsNull(18);
        }
    }

    public Int32 installments
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[19]);
        }
    }
    public bool installments_IsNull
    {
        get
        {
            return IsNull(19);
        }
    }

    public Int32 paymentsmade
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[20]);
        }
    }
    public bool paymentsmade_IsNull
    {
        get
        {
            return IsNull(20);
        }
    }

    public Int32 paymentsremaining
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[21]);
        }
    }
    public bool paymentsremaining_IsNull
    {
        get
        {
            return IsNull(21);
        }
    }

    public String phone
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[22]);
        }
    }
    public bool phone_IsNull
    {
        get
        {
            return IsNull(22);
        }
    }

    public String ACCTNUM
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[23]);
        }
    }
    public bool ACCTNUM_IsNull
    {
        get
        {
            return IsNull(23);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String DupReason
    {
        set
        {
            this[0] = value;
        }
    }
    public bool DupReason_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Account
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Account_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String PolicyNum
    {
        set
        {
            this[2] = value;
        }
    }
    public bool PolicyNum_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Status
    {
        set
        {
            this[3] = value;
        }
    }
    public bool Status_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Customer
    {
        set
        {
            this[4] = value;
        }
    }
    public bool Customer_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Address
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Address_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Address2
    {
        set
        {
            this[6] = value;
        }
    }
    public bool Address2_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String City
    {
        set
        {
            this[7] = value;
        }
    }
    public bool City_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String State
    {
        set
        {
            this[8] = value;
        }
    }
    public bool State_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Zip
    {
        set
        {
            this[9] = value;
        }
    }
    public bool Zip_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Vin
    {
        set
        {
            this[10] = value;
        }
    }
    public bool Vin_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String SellerName
    {
        set
        {
            this[11] = value;
        }
    }
    public bool SellerName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String SellerPhone
    {
        set
        {
            this[12] = value;
        }
    }
    public bool SellerPhone_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Installments
    {
        set
        {
            this[13] = value;
        }
    }
    public bool Installments_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 PaymentsMade
    {
        set
        {
            this[14] = value;
        }
    }
    public bool PaymentsMade_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 PaymentsRemaining
    {
        set
        {
            this[15] = value;
        }
    }
    public bool PaymentsRemaining_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 VehicleYear
    {
        set
        {
            this[16] = value;
        }
    }
    public bool VehicleYear_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String VehicleMake
    {
        set
        {
            this[17] = value;
        }
    }
    public bool VehicleMake_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(17);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String VehicleModel
    {
        set
        {
            this[18] = value;
        }
    }
    public bool VehicleModel_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(18);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Admin
    {
        set
        {
            this[19] = value;
        }
    }
    public bool Admin_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(19);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Coverage
    {
        set
        {
            this[20] = value;
        }
    }
    public bool Coverage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(20);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime EffectiveDate
    {
        set
        {
            this[21] = value;
        }
    }
    public bool EffectiveDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(21);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime CreateDate
    {
        set
        {
            this[22] = value;
        }
    }
    public bool CreateDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(22);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime NonPayCancelDate
    {
        set
        {
            this[23] = value;
        }
    }
    public bool NonPayCancelDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(23);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime CompanyCancelDate
    {
        set
        {
            this[24] = value;
        }
    }
    public bool CompanyCancelDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(24);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Notes
    {
        set
        {
            this[25] = value;
        }
    }
    public bool Notes_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(25);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_453430f54c8543d1b09ff998df0c86cb.Properties.Settings.get_Default():SC_453430f54c8543d1b09ff998df0c86cb.Properties.Sett" +
    "ings")]

namespace SC_453430f54c8543d1b09ff998df0c86cb.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_453430f54c8543d1b09ff998df0c86cb</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_453430f54c8543d1b09ff998df0c86cb</msb:DisplayName>
		<msb:ProjectId>{F154AC71-FF91-4A5E-BE1D-D7B43FEA2AEE}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_453430f54c8543d1b09ff998df0c86cb.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_453430f54c8543d1b09ff998df0c86cb.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{71dace45-009b-4797-a0a0-9f1f5f9b8f05}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_453430f54c8543d1b09ff998df0c86cb</RootNamespace>
    <AssemblyName>SC_453430f54c8543d1b09ff998df0c86cb</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_453430f54c8543d1b09ff998df0c86cb" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_453430f54c8543d1b09ff998df0c86cb")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_453430f54c8543d1b09ff998df0c86cb")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_453430f54c8543d1b09ff998df0c86cb.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_453430f54c8543d1b09ff998df0c86cb.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_453430f54c8543d1b09ff998df0c86cb.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_453430f54c8543d1b09ff998df0c86cb.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_453430f54c8543d1b09ff998df0c86cb.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_453430f54c8543d1b09ff998df0c86cb.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAIyc71kAAAAAAAAAAOAAIiALATAAADgAAAAIAAAAAAAAmlYA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAEhWAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAoDYAAAAgAAAAOAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAA6AAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAQAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAB8
VgAAAAAAAEgAAAACAAUArC8AAOQlAAABAAAAAAAAAJBVAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACiobMAQA+wEAAAEAABFzhgAABgoC
ewIAAAQsFgJ7AQAABAJ7AgAABBdZbxIAAAoKKwsGcgEAAHB9IgAABAJ7AQAABG8TAAAKLA4GA28I
AAAGb4MAAAYtKXOGAAAGCwIHAygEAAAGAnsBAAAEB28UAAAKAgJ7AgAABBdYfQIAAAQqBgNvCAAA
Bm+DAAAGObAAAAAGA28eAAAGb4QAAAY5nwAAABYMc4YAAAYNAgkDKAQAAAYCewEAAAQJbxQAAAoG
A28OAAAGcgUAAHADbxAAAAYoFQAACm+FAAAGLQIXDAJ7AQAABG8WAAAKEwQrKBIEKBcAAAoTBQgs
DwIRBXIJAABwKAUAAAYrDQIRBXItAABwKAUAAAYSBCgYAAAKLc/eDhIE/hYCAAAbbxkAAArcAnsB
AAAEbxoAAAoCFn0CAAAEKgYDbwgAAAZvgwAABjm1AAAABgNvHgAABm+EAAAGOqQAAAAWEwZzhgAA
BhMHAhEHAygEAAAGAnsBAAAEEQdvFAAACgYDbw4AAAZyBQAAcANvEAAABigVAAAKb4UAAAYtAxcT
BgJ7AQAABG8WAAAKEwQrKRIEKBcAAAoTCBEGLA8CEQhyCQAAcCgFAAAGKw0CEQhyRQAAcCgFAAAG
EgQoGAAACi3O3g4SBP4WAgAAG28ZAAAK3AJ7AQAABG8aAAAKAhZ9AgAABCoAARwAAAIA3gA1EwEO
AAAAAAIApAE22gEOAAAAABMwAgDhAQAAAAAAAARvNwAABi0MAwRvNgAABn0MAAAEBG8PAAAGLQwD
BG8OAAAGfQ0AAAQEbxEAAAYtDAMEbxAAAAZ9DgAABARvHwAABi0MAwRvHgAABn0PAAAEBG8nAAAG
LQwDBG8mAAAGfRAAAAQEbxMAAAYtDAMEbxIAAAZ9EQAABARvJQAABi0MAwRvJAAABn0SAAAEBG8h
AAAGLQwDBG8gAAAGfRMAAAQEbyMAAAYtDAMEbyIAAAZ9FAAABARvKwAABi0MAwRvKgAABn0VAAAE
BG8pAAAGLQwDBG8oAAAGfRYAAAQEby8AAAYtDAMEby4AAAZ9FwAABARvDQAABi0MAwRvDAAABn0Y
AAAEBG8xAAAGLQwDBG8wAAAGfRkAAAQEbzMAAAYtDAMEbzIAAAZ9GgAABARvNQAABi0MAwRvNAAA
Bn0bAAAEBG8tAAAGLQwDBG8sAAAGfRwAAAQEbxUAAAYtDAMEbxQAAAZ9HQAABARvCwAABi0MAwRv
CgAABn0eAAAEBG8bAAAGLQwDBG8aAAAGfR8AAAQEbx0AAAYtDAMEbxwAAAZ9IAAABARvGQAABi0M
AwRvGAAABn0hAAAEBG8JAAAGLQwDBG8IAAAGfSIAAAQEbxcAAAYtDAMEbxYAAAZ9IwAABCoAAAAT
MAIAnwEAAAAAAAACewUAAARvbwAABgJ7BQAABAN7DAAABG89AAAGAnsFAAAEA3sNAAAEb0UAAAYC
ewUAAAQDew4AAARvRwAABgJ7BQAABAN7DwAABG9RAAAGAnsFAAAEA3sQAAAEb2kAAAYCewUAAAQD
exEAAARvSQAABgJ7BQAABAN7EgAABG9rAAAGAnsFAAAEA3sTAAAEb2EAAAYCewUAAAQDexQAAARv
YwAABgJ7BQAABAN7FQAABG9nAAAGAnsFAAAEA3sWAAAEb2UAAAYCewUAAAQDexcAAARvVQAABgJ7
BQAABAN7GQAABG9XAAAGAnsFAAAEA3saAAAEb1kAAAYCewUAAAQDexwAAARvPwAABgJ7BQAABAN7
GwAABG9TAAAGAnsFAAAEA3sdAAAEb0sAAAYCewUAAAQDex4AAARvQQAABgJ7BQAABAN7HwAABG9d
AAAGAnsFAAAEA3sgAAAEb18AAAYCewUAAAQDeyEAAARvWwAABgJ7BQAABAN7IgAABG9PAAAGAnsF
AAAEA3sjAAAEb00AAAYCewUAAAQEbzsAAAYqSgJzGwAACn0BAAAEAihyAAAGKioCAwQFKBwAAAoq
UgJ7HQAACgJ7HgAAChaUbx8AAAoqIgIWKCAAAAoqUgJ7HQAACgJ7HgAACheUbx8AAAoqIgIXKCAA
AAoqUgJ7HQAACgJ7HgAAChiUbx8AAAoqIgIYKCAAAAoqUgJ7HQAACgJ7HgAAChmUbx8AAAoqIgIZ
KCAAAAoqUgJ7HQAACgJ7HgAAChqUbx8AAAoqIgIaKCAAAAoqUgJ7HQAACgJ7HgAAChuUbx8AAAoq
IgIbKCAAAAoqUgJ7HQAACgJ7HgAAChyUbx8AAAoqIgIcKCAAAAoqUgJ7HQAACgJ7HgAACh2Ubx8A
AAoqIgIdKCAAAAoqUgJ7HQAACgJ7HgAACh6UbyEAAAoqIgIeKCAAAAoqVgJ7HQAACgJ7HgAACh8J
lG8fAAAKKiYCHwkoIAAACipWAnsdAAAKAnseAAAKHwqUbx8AAAoqJgIfCiggAAAKKlYCex0AAAoC
ex4AAAofC5RvHwAACiomAh8LKCAAAAoqVgJ7HQAACgJ7HgAACh8MlG8fAAAKKiYCHwwoIAAACipW
AnsdAAAKAnseAAAKHw2Ubx8AAAoqJgIfDSggAAAKKlYCex0AAAoCex4AAAofDpRvIgAACiomAh8O
KCAAAAoqVgJ7HQAACgJ7HgAACh8PlG8iAAAKKiYCHw8oIAAACipWAnsdAAAKAnseAAAKHxCUbyIA
AAoqJgIfECggAAAKKlYCex0AAAoCex4AAAofEZRvIgAACiomAh8RKCAAAAoqVgJ7HQAACgJ7HgAA
Ch8SlG8fAAAKKiYCHxIoIAAACipWAnsdAAAKAnseAAAKHxOUbyEAAAoqJgIfEyggAAAKKlYCex0A
AAoCex4AAAofFJRvIQAACiomAh8UKCAAAAoqVgJ7HQAACgJ7HgAACh8VlG8hAAAKKiYCHxUoIAAA
CipWAnsdAAAKAnseAAAKHxaUbx8AAAoqJgIfFiggAAAKKlYCex0AAAoCex4AAAofF5RvHwAACiom
Ah8XKCAAAAoqHgIoIwAACioeAigkAAAKKiYCFgMoJQAACipaAywIAhYoJgAACipyZwAAcHMnAAAK
eiYCFwMoJQAACipaAywIAhcoJgAACipyZwAAcHMnAAAKeiYCGAMoJQAACipaAywIAhgoJgAACipy
ZwAAcHMnAAAKeiYCGQMoJQAACipaAywIAhkoJgAACipyZwAAcHMnAAAKeiYCGgMoJQAACipaAywI
AhooJgAACipyZwAAcHMnAAAKeiYCGwMoJQAACipaAywIAhsoJgAACipyZwAAcHMnAAAKeiYCHAMo
JQAACipaAywIAhwoJgAACipyZwAAcHMnAAAKeiYCHQMoJQAACipaAywIAh0oJgAACipyZwAAcHMn
AAAKeiYCHgMoJQAACipaAywIAh4oJgAACipyZwAAcHMnAAAKeioCHwkDKCUAAAoqXgMsCQIfCSgm
AAAKKnJnAABwcycAAAp6KgIfCgMoJQAACipeAywJAh8KKCYAAAoqcmcAAHBzJwAACnoqAh8LAygl
AAAKKl4DLAkCHwsoJgAACipyZwAAcHMnAAAKeioCHwwDKCUAAAoqXgMsCQIfDCgmAAAKKnJnAABw
cycAAAp6PgIfDQOMIAAAASglAAAKKl4DLAkCHw0oJgAACipyZwAAcHMnAAAKej4CHw4DjCAAAAEo
JQAACipeAywJAh8OKCYAAAoqcmcAAHBzJwAACno+Ah8PA4wgAAABKCUAAAoqXgMsCQIfDygmAAAK
KnJnAABwcycAAAp6PgIfEAOMIAAAASglAAAKKl4DLAkCHxAoJgAACipyZwAAcHMnAAAKeioCHxED
KCUAAAoqXgMsCQIfESgmAAAKKnJnAABwcycAAAp6KgIfEgMoJQAACipeAywJAh8SKCYAAAoqcmcA
AHBzJwAACnoqAh8TAyglAAAKKl4DLAkCHxMoJgAACipyZwAAcHMnAAAKeioCHxQDKCUAAAoqXgMs
CQIfFCgmAAAKKnJnAABwcycAAAp6PgIfFQOMEQAAASglAAAKKl4DLAkCHxUoJgAACipyZwAAcHMn
AAAKej4CHxYDjBEAAAEoJQAACipeAywJAh8WKCYAAAoqcmcAAHBzJwAACno+Ah8XA4wRAAABKCUA
AAoqXgMsCQIfFygmAAAKKnJnAABwcycAAAp6PgIfGAOMEQAAASglAAAKKl4DLAkCHxgoJgAACipy
ZwAAcHMnAAAKeioCHxkDKCUAAAoqXgMsCQIfGSgmAAAKKnJnAABwcycAAAp6HgIoKAAACioeAigp
AAAKKn4CKCoAAAoCAnN6AAAGfQMAAAQCAnN7AAAGfQQAAAQqABMwBABPAAAAAAAAAARyBAEAcBpv
KwAACiwVAgUCAygsAAAKDgRzBwAABm94AAAGBW8tAAAKLCMCAnsGAAAEF1h9BgAABAJ7BgAABBcz
DAJvdAAABgIodQAABioGKm4CewUAAAQsEgJ7BQAABG9wAAAGAhR9BQAABCoAAAATMAUAPQAAAAIA
ABEWCisuBAaUDgRyFAEAcCguAAAKMxkCBQaaAgQGlCgsAAAKDgRzOgAABn0FAAAEBhdYCgYDMs4C
b3cAAAYqSisHAgNveQAABgNvOAAABi3xKjoCKC8AAAoCA30HAAAEKjoCKC8AAAoCA30IAAAEKh4C
KC8AAAoqrn4JAAAELR5yJgEAcNAIAAACKDAAAApvMQAACnMyAAAKgAkAAAR+CQAABCoafgoAAAQq
HgKACgAABCoafgsAAAQqHgIoMwAACiouc4EAAAaACwAABCpKAwJ7IgAABCg0AAAKLQIWKhcqSgMC
ew8AAAQoNAAACi0CFioXKgAAEzADACQAAAADAAARAnsNAAAEcgUAAHACew4AAAQoFQAACgoDBig0
AAAKLQIWKhcqEzACAOMAAAAAAAAAAnKYAQBwfQwAAAQCcpgBAHB9DQAABAJymAEAcH0OAAAEAnKY
AQBwfQ8AAAQCKDUAAAp9EAAABAJymAEAcH0RAAAEAig1AAAKfRIAAAQCcpgBAHB9EwAABAJymAEA
cH0UAAAEAig1AAAKfRUAAAQCKDUAAAp9FgAABAJymAEAcH0YAAAEAnKYAQBwfRsAAAQCcpgBAHB9
HAAABAJymAEAcH0dAAAEAnKYAQBwfR4AAAQCcpgBAHB9HwAABAJymAEAcH0gAAAEAnKYAQBwfSIA
AAQCcpgBAHB9IwAABAIoLwAACioAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAA
1BIAACN+AABAEwAAmA4AACNTdHJpbmdzAAAAANghAACcAQAAI1VTAHQjAAAQAAAAI0dVSUQAAACE
IwAAYAIAACNCbG9iAAAAAAAAAAIAAAFXFaIJCQMAAAD6ATMAFgAAAQAAACQAAAAKAAAAIwAAAIYA
AABPAAAANQAAABAAAAADAAAABAAAAGcAAABoAAAAAgAAAAEAAAAEAAAAAQAAAAEAAAAAADsFAQAA
AAAABgDkA48LBgB4BI8LBgAwA3wLDwADDAAABgBdA0MKBgDHA0MKBgCoA0MKBgBfBEMKBgAEBEMK
BgAdBEMKBgB0A0MKBgCPA98ECgA4BLsBBgABAI4AOwBaCwAABgAvDZgJBgCyAZgJCgASC7sBDgAD
C7sBCgCaCrsBCgB/DbsBBgATA3wLBgAjC68LBgCOCi4KEgDZAiUFEgBEAyUFEgAjAhkKBgD4Ao8L
BgD8BJgJBgBIAZgJBgBVCpgJBgAYAJgJBgB9CpgJBgD2AZgJBgBUAZgJBgBwDkMKAAAAADgAAAAA
AAEAAQABABAA5wkAABQAAQABAAEAEADoCgAASQADAAcAAQAQAPUKAABJAAMAOgABABAAYQ0AAFUA
AwByAAEAEACKDAAAQQAHAHoAAQAQAEEMAABBAAgAewAAABAAtgsSDEEACQB8AAABEAB6DBIMbQAL
AIAAAgAQAM4NAABBAAwAgwABAAkN5wABAJ8J7wAGAIoM8gAGAEEM9gAGAPUK+gABAK0A7wABAG8N
/gABAG8N/gARAMIJAgERABMCBgERANwACgEGAFkADgEGAAwADgEGAC8ADgEGAJUBDgEGAMQCEQEG
AIYODgEGAL0CEQEGAKMBDgEGAB8BDgEGAJMCEQEGAKICEQEGANgM7wAGANQADgEGAAEB7wAGAM0E
7wAGAPABDgEGALgJDgEGAPICDgEGAAINDgEGACwBDgEGAAcFDgEGANwK7wAGAAAKDgEGAL4KDgFQ
IAAAAADGAJYEBgABAFggAAAAAMYAoQQGAAEAYCAAAAAAxgA6DhUBAQCEIgAAAACGAAQKGwECAHQk
AAAAAIYAHQ4jAQQAHyYAAAAAhhhlCwYABgAyJgAAAACGGGULaQAGAD0mAAAAAIYI/AkqAQkAUiYA
AAAAhghPCGUACQBbJgAAAACGCP4MKgEJAHAmAAAAAIYIOQllAAkAeSYAAAAAhgjQACoBCQCOJgAA
AACGCLIFZQAJAJcmAAAAAIYICAAqAQkArCYAAAAAhghjBWUACQC1JgAAAACGCCsAKgEJAMomAAAA
AIYIiwVlAAkA0yYAAAAAhgiCDioBCQDoJgAAAACGCG4JZQAJAPEmAAAAAIYI7gIqAQkABicAAAAA
hgiKB2UACQAPJwAAAACGCLoKKgEJACQnAAAAAIYIgghlAAkALScAAAAAhgjYCj8ACQBCJwAAAACG
CKgIZQAJAEsnAAAAAIYIKAEqAQkAYScAAAAAhggdBmUACQBrJwAAAACGCAMFKgEJAIEnAAAAAIYI
1QdlAAkAiycAAAAAhgiRASoBCQChJwAAAACGCGEGZQAJAKsnAAAAAIYInwEqAQkAwScAAAAAhgh2
BmUACQDLJwAAAACGCBsBKgEJAOEnAAAAAIYICQZlAAkA6ycAAAAAhgi5Ai4BCQABKAAAAACGCFwH
ZQAJAAsoAAAAAIYIqgIuAQkAISgAAAAAhghGB2UACQArKAAAAACGCJ4CLgEJAEEoAAAAAIYIMwdl
AAkASygAAAAAhgiPAi4BCQBhKAAAAACGCB0HZQAJAGsoAAAAAIYItAkqAQkAgSgAAAAAhggaCGUA
CQCLKAAAAACGCNQMPwAJAKEoAAAAAIYIDwllAAkAqygAAAAAhgj9AD8ACQDBKAAAAACGCN0FZQAJ
AMsoAAAAAIYIyQQ/AAkA4SgAAAAAhgi4B2UACQDrKAAAAACGCOwBKgEJAAEpAAAAAIYIpAZlAAkA
CykAAAAAhghVACoBCQAhKQAAAACGCJ8FZQAJACspAAAAAIYAUQ5lAAkAMykAAAAAhgBJDWUACQAy
JgAAAACGGGULaQAJADspAAAAAIYIbwoQAAwARSkAAAAAhgheCDMBDQBcKQAAAACGCKUNEAAOAGYp
AAAAAIYISwkzAQ8AfSkAAAAAhgimCRAAEACHKQAAAACGCAUIMwERAJ4pAAAAAIYI8wwQABIAqCkA
AAAAhggnCTMBEwC/KQAAAACGCEoLEAAUAMkpAAAAAIYIvwgzARUA4CkAAAAAhgieDBAAFgDqKQAA
AACGCOQIMwEXAAEqAAAAAIYIHgAQABgACyoAAAAAhgh3BTMBGQAiKgAAAACGCHkOEAAaACwqAAAA
AIYIXgkzARsAQyoAAAAAhgjPAhAAHABNKgAAAACGCHkHMwEdAGQqAAAAAIYIsgoQAB4AbyoAAAAA
hghzCDMBHwCHKgAAAACGCM4JEAAgAJIqAAAAAIYILwgzASEAqioAAAAAhgh4ARAAIgC1KgAAAACG
CEsGMwEjAM0qAAAAAIYI3AEQACQA2CoAAAAAhgiNBjMBJQDwKgAAAACGCMMMAQAmAAArAAAAAIYI
9wgzAScAGCsAAAAAhgjsAAEAKAAoKwAAAACGCMUFMwEpAEArAAAAAIYIswQBACoAUCsAAAAAhgib
BzMBKwBoKwAAAACGCMIKAQAsAHgrAAAAAIYIkQgzAS0AkCsAAAAAhgg4ARAALgCbKwAAAACGCDQG
MwEvALMrAAAAAIYIFAUQADAAvisAAAAAhgjtBzMBMQDWKwAAAACGCPIJEAAyAOErAAAAAIYIPggz
ATMA+SsAAAAAhggOARAANAAELAAAAACGCPUFMwE1ABwsAAAAAIYIUgI4ATYALCwAAAAAhgjLBjMB
NwBELAAAAACGCEMCOAE4AFQsAAAAAIYItQYzATkAbCwAAAAAhghkAjgBOgB8LAAAAACGCOQGMwE7
AJQsAAAAAIYIeQI4ATwApCwAAAAAhggABzMBPQC8LAAAAACGCEsMEAA+AMcsAAAAAIYI0wgzAT8A
3ywAAAAAhgAzDgYAQADnLAAAAACGAEYNBgBAADMpAAAAAIYASQ1lAEAA7ywAAAAAhhhlCwYAQAAQ
LQAAAADGAP4NPgFAAGstAAAAAMYB5QwGAEQAbS0AAAAAgQC8AAYARACMLQAAAADGABEOSAFEAGst
AAAAAMYBFA0GAEgA1S0AAAAAxgH3DRUBSABrLQAAAADGAToOFQFJAOgtAAAAAIYYZQtUAUoA9y0A
AAAAhhhlC1QBSwAGLgAAAACDGGULBgBMAA4uAAAAAJMIHwtaAUwAOi4AAAAAkwj7AV8BTABBLgAA
AACTCAcCZAFMAEkuAAAAAJYIVQ1qAU0AUC4AAAAAhhhlCwYATQBYLgAAAACRGGsLbwFNAGQuAAAA
AIYA1glzAU0Ady4AAAAAhgAzC3MBTgCMLgAAAACGAKoMcwFPALwuAAAAAIYYZQsGAFAAAAABAFUO
AAABAFkOAAACAAsOAAABAF0OAAACAHYKAAABABgLAAACAFUMAAADAKgKAAABABgLAAACAFUMAAAD
AKgKAAABAK0EAAABAK0EAAABAK0EAAABAK0EAAABAK0EAAABAK0EAAABAK0EAAABAK0EAAABAK0E
AAABAK0EAAABAK0EAAABAK0EAAABAK0EAAABAK0EAAABAK0EAAABAK0EAAABAK0EAAABAK0EAAAB
AK0EAAABAK0EAAABAK0EAAABAK0EAAABAK0EAAABAK0EAAABAK0EAAABAK0EAAABAK0EAAABAK0E
AAABAK0EAAABAK0EAAABAK0EAAABAK0EAAABAK0EAAABAK0EAAABAK0EAAABAK0EAAABAK0EAAAB
AK0EAAABAK0EAAABAK0EAAABAK0EAAABAK0EAAABAK0EAAABAK0EAAABAK0EAAABAK0EAAABAK0E
AAABAK0EAAABAK0EAAABAK0EAAABAK0EAAABAK0EAAABAEEAAAACAIcBAAADABgLAAAEAKgKAAAB
AOsMAAACAHILAAADAJYMAAAEAKgKAAABABgLAAABAFUOAAABAIUNAAABAIUNAAABAK0EAAABAN8J
AAABAD8LAAABALcMCQBlCwEAEQBlCwYAGQBlCwoAKQBlCxAAMQBlCxAAOQBlCxAAQQBlCxAASQBl
CxAAUQBlCxAAWQBlCxAAYQBlCxAAaQBlCwYAsQBlCwYA0QBlCxUA4QBlCwYAqQCWBAYAqQChBAYA
DACGCTkADACbDT8ADACpAEMA6QAoDUkADABXC1AAFACPDWAAFAAqDmUA8QA7AgYADADSCgYADABl
CwYAkQBlC2kAkQAYC3MAkQBVDHcAmQD5BHsAkQB3CYAAmQAVAIUAmQCvAYoAkQBRDmUAkQBJDWUA
kQCPCZAAkQB+CQEA+QBlCxAAkQAzDgYAkQBGDQYAqQBlCwYA6QCDDJYAqQBpDJ4AmQA2DWUAqQBJ
AKgAgQBlCwYAEQFmAa8AEQFsDrgAuQBlC74A2QBlCwYA6QCLDsYAiQBiDtAALgALAJgBLgATAKEB
LgAbAMABLgAjAMkBLgArAPIBLgAzAPIBLgA7APIBLgBDAMkBLgBLAPgBLgBTAPIBLgBbAA8CQwBj
AFkCAwFrAFkCYQF7AFkCqQxzAMAByQxzAMABGwCkAMwAAwABAAQAMQAIAGUACQBnAAAAAAp4AQAA
Uwh8AQAAAg14AQAAPQl8AQAA1AB4AQAAtgV8AQAADAB4AQAAZwV8AQAALwB4AQAAjwV8AQAAhg54
AQAAcgl8AQAA8gJ4AQAAjgd8AQAAvgp4AQAAhgh8AQAA3AqAAQAArAh8AQAALAF4AQAAIQZ8AQAA
BwV4AQAA2Qd8AQAAlQF4AQAAZQZ8AQAAowF4AQAAegZ8AQAAHwF4AQAADQZ8AQAAvQKEAQAAYAd8
AQAAxAKEAQAAZwd8AQAAogKEAQAANwd8AQAAkwKEAQAAIQd8AQAAuAl4AQAAHgh8AQAA2AyAAQAA
Ewl8AQAAAQGAAQAA4QV8AQAAzQSAAQAAvAd8AQAA8AF4AQAAqAZ8AQAAWQB4AQAAowV8AQAAcwp4
AQAAYgh8AQAAqQ14AQAATwl8AQAAqgl4AQAACQh8AQAA9wx4AQAAKwl8AQAATgt4AQAAwwh8AQAA
uwx4AQAA6Ah8AQAAIgB4AQAAewV8AQAAfQ54AQAAYgl8AQAA6AJ4AQAAfQd8AQAAtgp4AQAAdwh8
AQAA4wl4AQAAMwh8AQAAfAF4AQAATwZ8AQAA4AF4AQAAkQZ8AQAAxwyAAQAA+wh8AQAA8ACAAQAA
yQV8AQAAtwSAAQAAnwd8AQAAxgqAAQAAlQh8AQAAPAF4AQAAOAZ8AQAAGAV4AQAA8Qd8AQAA9gl4
AQAAQgh8AQAAEgF4AQAA+QV8AQAAVgKEAQAAzwZ8AQAARwKEAQAAuQZ8AQAAaAKEAQAA6AZ8AQAA
fQKEAQAABAd8AQAATwx4AQAA1wh8AQAAIwuJAQAAGwKOAQAAWQ2TAQIACAADAAIACQAFAAIACgAH
AAIACwAJAAIADAALAAIADQANAAIADgAPAAIADwARAAIAEAATAAIAEQAVAAIAEgAXAAIAEwAZAAIA
FAAbAAIAFQAdAAIAFgAfAAIAFwAhAAIAGAAjAAIAGQAlAAIAGgAnAAIAGwApAAIAHAArAAIAHQAt
AAIAHgAvAAIAHwAxAAIAIAAzAAIAIQA1AAIAIgA3AAIAIwA5AAIAJAA7AAIAJQA9AAIAJgA/AAIA
JwBBAAIAKABDAAIAKQBFAAIAKgBHAAIAKwBJAAIALABLAAIALQBNAAIALgBPAAIALwBRAAIAMABT
AAIAMQBVAAIAMgBXAAIAMwBZAAIANABbAAIANQBdAAIANgBfAAIANwBhAAEAOwBjAAEAPABlAAEA
PQBnAAEAPgBpAAEAPwBrAAEAQABtAAEAQQBvAAEAQgBxAAEAQwBzAAEARAB1AAEARQB3AAEARgB5
AAEARwB7AAEASAB9AAEASQB/AAEASgCBAAEASwCDAAEATACFAAEATQCHAAEATgCJAAEATwCLAAEA
UACNAAEAUQCPAAEAUgCRAAEAUwCTAAEAVACVAAEAVQCXAAEAVgCZAAEAVwCbAAEAWACdAAEAWQCf
AAEAWgChAAEAWwCjAAEAXAClAAEAXQCnAAEAXgCpAAEAXwCrAAEAYACtAAEAYQCvAAEAYgCxAAEA
YwCzAAEAZAC1AAEAZQC3AAEAZgC5AAEAZwC7AAEAaAC9AAEAaQC/AAEAagDBAAEAawDDAAEAbADF
AAEAbQDHAAEAbgDJAAIAfQDLAAIAfgDNAAEAfwDNAAIAgADPADIAWQAEgAAAAQAAAAAAAAAAAAAA
AABhAAAABAAAAAAAAAAAAAAA1QCFAAAAAAAOAAAAAAAAAAAAAADeALENAAAAAA4AAAAAAAAAAAAA
AN4A1g0AAAAABAAAAAAAAAAAAAAA1QCYCQAAAAAAAAAAAQAAAMALAAAKAAIAAAAATGlzdGAxAGdl
dF9hZGRyZXNzMQBHZXRJbnQzMgBzZXRfQWRkcmVzczIAZ2V0X2FkZHJlc3MyADxNb2R1bGU+AElu
cHV0SUQAR2V0T3V0cHV0SUQAZ2V0X0FDQ1ROVU0AU0NfNDUzNDMwZjU0Yzg1NDNkMWIwOWZmOTk4
ZGYwYzg2Y2IAbXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAQWRkAElucHV0c0Zp
bmlzaGVkAE1hcmtPdXRwdXRzRmluaXNoZWQAZ2V0X2luc3VyZWQAZGVmYXVsdEluc3RhbmNlAHNl
dF9QYXltZW50c01hZGUAZ2V0X3BheW1lbnRzbWFkZQBzZXRfQ292ZXJhZ2UAZ2V0X2NvdmVyYWdl
AGdldF9WRUhJQ0xFTWFrZQBzZXRfVmVoaWNsZU1ha2UASURpc3Bvc2FibGUAUnVudGltZVR5cGVI
YW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAc2V0X1NlbGxlck5hbWUASW5wdXROYW1lAGdldF9hZ2Vu
dG5hbWUAZ2V0X2NvbXBhbnluYW1lAEdldERhdGVUaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRz
LlBpcGVsaW5lAHNldF9TZWxsZXJQaG9uZQBnZXRfcGhvbmUAVHlwZQBnZXRfQ3VsdHVyZQBzZXRf
Q3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARGlzcG9zZQBz
ZXRfQ3JlYXRlRGF0ZQBzZXRfRWZmZWN0aXZlRGF0ZQBzZXRfTm9uUGF5Q2FuY2VsRGF0ZQBzZXRf
Q29tcGFueUNhbmNlbERhdGUAZ2V0X2NyZWF0ZWRhdGUAZ2V0X2VmZmRhdGUAZ2V0X2NhbmNlbGRh
dGUAZ2V0X2NvbXBhbnljYW5jZWxkYXRlAHNldF9TdGF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBn
ZXRfc3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0
dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3Nl
bWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1l
d29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNj
cmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5
UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29t
cG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGlt
ZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQB2YWx1ZQBzZXRf
UGF5bWVudHNSZW1haW5pbmcAZ2V0X3BheW1lbnRzcmVtYWluaW5nAFN5c3RlbS5SdW50aW1lLlZl
cnNpb25pbmcAR2V0U3RyaW5nAGdldF9WRUhJQ0xFTW9kZWwAc2V0X1ZlaGljbGVNb2RlbABTeXN0
ZW0uQ29tcG9uZW50TW9kZWwAU0NfNDUzNDMwZjU0Yzg1NDNkMWIwOWZmOTk4ZGYwYzg2Y2IuZGxs
AGdldF9hZGRyZXNzMV9Jc051bGwAc2V0X0FkZHJlc3MyX0lzTnVsbABnZXRfYWRkcmVzczJfSXNO
dWxsAGdldF9BQ0NUTlVNX0lzTnVsbABnZXRfaW5zdXJlZF9Jc051bGwAc2V0X1BheW1lbnRzTWFk
ZV9Jc051bGwAZ2V0X3BheW1lbnRzbWFkZV9Jc051bGwAc2V0X0NvdmVyYWdlX0lzTnVsbABnZXRf
Y292ZXJhZ2VfSXNOdWxsAGdldF9WRUhJQ0xFTWFrZV9Jc051bGwAc2V0X1ZlaGljbGVNYWtlX0lz
TnVsbABzZXRfU2VsbGVyTmFtZV9Jc051bGwAZ2V0X2FnZW50bmFtZV9Jc051bGwAZ2V0X2NvbXBh
bnluYW1lX0lzTnVsbABzZXRfU2VsbGVyUGhvbmVfSXNOdWxsAGdldF9waG9uZV9Jc051bGwAc2V0
X0NyZWF0ZURhdGVfSXNOdWxsAHNldF9FZmZlY3RpdmVEYXRlX0lzTnVsbABzZXRfTm9uUGF5Q2Fu
Y2VsRGF0ZV9Jc051bGwAc2V0X0NvbXBhbnlDYW5jZWxEYXRlX0lzTnVsbABnZXRfY3JlYXRlZGF0
ZV9Jc051bGwAZ2V0X2VmZmRhdGVfSXNOdWxsAGdldF9jYW5jZWxkYXRlX0lzTnVsbABnZXRfY29t
cGFueWNhbmNlbGRhdGVfSXNOdWxsAHNldF9TdGF0ZV9Jc051bGwAZ2V0X3N0YXRlX0lzTnVsbABz
ZXRfUGF5bWVudHNSZW1haW5pbmdfSXNOdWxsAGdldF9wYXltZW50c3JlbWFpbmluZ19Jc051bGwA
Z2V0X1ZFSElDTEVNb2RlbF9Jc051bGwAc2V0X1ZlaGljbGVNb2RlbF9Jc051bGwAc2V0X1BvbGlj
eU51bV9Jc051bGwAZ2V0X3BvbGljeW51bV9Jc051bGwAc2V0X1Zpbl9Jc051bGwAc2V0X0FkbWlu
X0lzTnVsbABnZXRfdmluX0lzTnVsbABzZXRfRHVwUmVhc29uX0lzTnVsbABzZXRfWmlwX0lzTnVs
bABnZXRfemlwX0lzTnVsbABzZXRfVmVoaWNsZVllYXJfSXNOdWxsAGdldF92ZWhpY2xleWVhcl9J
c051bGwAc2V0X0N1c3RvbWVyX0lzTnVsbABzZXRfTm90ZXNfSXNOdWxsAHNldF9BZGRyZXNzX0lz
TnVsbABzZXRfSW5zdGFsbG1lbnRzX0lzTnVsbABnZXRfaW5zdGFsbG1lbnRzX0lzTnVsbABzZXRf
U3RhdHVzX0lzTnVsbABnZXRfc3RhdHVzX0lzTnVsbABzZXRfQWNjb3VudF9Jc051bGwAc2V0X0Np
dHlfSXNOdWxsAGdldF9jaXR5X0lzTnVsbABTZXROdWxsAGdldF9JdGVtAHNldF9JdGVtAFN5c3Rl
bQBSb3dOdW0Ac2V0X1BvbGljeU51bQBnZXRfcG9saWN5bnVtAHJlc291cmNlTWFuAHNldF9WaW4A
Y2hlY2tWaW4Ac2VudFZpbgBTY3JpcHRNYWluAHNldF9BZG1pbgBnZXRfdmluAHVwZGF0ZVJvd0lu
Zm9ybWF0aW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3Rl
bS5SZWZsZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24Ac2V0X0R1cFJlYXNvbgBTdHJp
bmdDb21wYXJpc29uAEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAHNldF9aaXAA
Z2V0X3ppcABzZXRfVmVoaWNsZVllYXIAQ2xlYXIAZ2V0X3ZlaGljbGV5ZWFyAElucHV0MEJ1ZmZl
cgBPdXRwdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VN
YW5hZ2VyAGNoZWNrU2VsbGVyAHNlbnRTZWxsZXIAc2V0X0N1c3RvbWVyAEdldEVudW1lcmF0b3IA
LmN0b3IALmNjdG9yAE91dHB1dElEcwBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUu
Q29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzQ1MzQzMGY1NGM4NTQzZDFiMDlm
Zjk5OGRmMGM4NmNiLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2Rl
cwBTQ180NTM0MzBmNTRjODU0M2QxYjA5ZmY5OThkZjBjODZjYi5Qcm9wZXJ0aWVzAFZhcmlhYmxl
cwBzZXRfTm90ZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdz
AEVxdWFscwBDb25uZWN0aW9ucwBCdWZmZXJzAHNldF9BZGRyZXNzAGNoZWNrQWRkcmVzcwBzZW50
QWRkcmVzcwBzZXRfSW5zdGFsbG1lbnRzAGdldF9pbnN0YWxsbWVudHMARmluaXNoT3V0cHV0cwBz
ZXRfU3RhdHVzAGdldF9zdGF0dXMATGlzdG9mUm93cwBDcmVhdGVOZXdPdXRwdXRSb3dzAENvbmNh
dABPYmplY3QAZ2V0X0VuZE9mUm93c2V0AFNldEVuZE9mUm93c2V0AGdldF9EZWZhdWx0AFVzZXJD
b21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABnZXRfQ3VycmVudABnZXRf
Q291bnQAc2V0X0FjY291bnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABSb3dMaXN0AE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AElucHV0MF9Qcm9jZXNzSW5wdXQAaW5wdXQA
UHJpbWVPdXRwdXQAVXBkYXRlT3V0cHV0AE1vdmVOZXh0AEFkZFJvdwBJbnB1dDBfUHJvY2Vzc0lu
cHV0Um93AE5leHRSb3cAcm93AHJvd3gAZ2V0X1RvZGF5AGdldF9Bc3NlbWJseQBzZXRfQ2l0eQBn
ZXRfY2l0eQBvcF9FcXVhbGl0eQAAAAMxAAADIAAAI0QAaQBmAGYAZQByAGUAbgB0ACAAQQBkAGQA
cgBlAHMAcwAAF1MAYQBtAGUAIABTAGUAbABsAGUAcgAAIUQAaQBmAGYAZQByAGUAbgB0ACAAUwBl
AGwAbABlAHIAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAg
AGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEA
bAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBu
AHAAdQB0ACAAMAAAEU8AdQB0AHAAdQB0ACAAMAAAcVMAQwBfADQANQAzADQAMwAwAGYANQA0AGMA
OAA1ADQAMwBkADEAYgAwADkAZgBmADkAOQA4AGQAZgAwAGMAOAA2AGMAYgAuAFAAcgBvAHAAZQBy
AHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAQAAAJ4ESHxYcfRIppAFqtmXxP0ABCABAQgD
IAABBSABARERBCABAQ4FIAEBEWUWBwkSKBIoAhIoFRE9ARIoEigCEigSKAYVEjkBEigFIAETAAgD
IAAIBSABARMABgADDg4ODgggABURPQETAAYVET0BEigEIAATAAMgAAIJIAMBEk0dCBJRAwYSTQMG
HQgEIAEOCAQgAQIIBCABCAgFIAERRQgFIAIBCBwHIAICDhGAhQUgAR0ICAMHAQgGAAIIElEOCAAB
EoCJEYCNBSAAEoCRByACAQ4SgJEFAAICDg4DBwEOBAAAEUUIt3pcVhk04IkIiYRdzYCAzJEHBhUS
OQESKAIGCAMGEhgDBhIcAwYSEAMGElUDBhJdAwYSYQMGEiQCBg4DBhFFBSABARIMByACARIoEgwG
IAIBEigOAyAADgQgABFFBCABAQIFIAEBEUUJIAQBCA4STRJRCyAEAQgdCB0STRJRBSABARJVBAAA
El0EAAASYQUAAQESYQQAABIkAwAAAQQgAQIOAygADgMoAAIDKAAIBCgAEUUECAASXQQIABJhBAgA
EiQIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1ND
XzQ1MzQzMGY1NGM4NTQzZDFiMDlmZjk5OGRmMGM4NmNiAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAg
IDIwMTcAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxh
eU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41BAEAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJl
c291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVy
ZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJj
ZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABwVgAAAAAAAAAAAACK
VgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfFYAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2Nv
cmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAA
AAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADsAwAAAAAAAAAA
AADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEAAAAA
AAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUA
SQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAETAMAAAEAUwB0
AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAwAAAAGgABAAEA
QwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAAAAAA
AHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwA0ADUAMwA0ADMA
MABmADUANABjADgANQA0ADMAZAAxAGIAMAA5AGYAZgA5ADkAOABkAGYAMABjADgANgBjAGIAAAAw
AAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABwACgAAQBJAG4A
dABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADQANQAzADQAMwAwAGYANQA0AGMAOAA1ADQAMwBk
ADEAYgAwADkAZgBmADkAOQA4AGQAZgAwAGMAOAA2AGMAYgAuAGQAbABsAAAASAASAAEATABlAGcA
YQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA3
AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIA
aQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8ANAA1ADMANAAzADAAZgA1ADQAYwA4
ADUANAAzAGQAMQBiADAAOQBmAGYAOQA5ADgAZABmADAAYwA4ADYAYwBiAC4AZABsAGwAAABoACQA
AQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADQANQAzADQAMwAwAGYANQA0AGMAOAA1
ADQAMwBkADEAYgAwADkAZgBmADkAOQA4AGQAZgAwAGMAOAA2AGMAYgAAADQACAABAFAAcgBvAGQA
dQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBlAG0AYgBs
AHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAMAAAAnDYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_453430f54c8543d1b09ff998df0c86cb</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">DF</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[vin]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="vin"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[vin]"
                      name="vin" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[status]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="status"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[status]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[insured]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="insured"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[insured]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[address1]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="address1"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[address1]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[address2]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="address2"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[address2]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[city]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="city"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[city]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[state]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="state"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[state]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[zip]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="zip"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[zip]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[vehicle_year]"
                      cachedDataType="i4"
                      cachedName="vehicle_year"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[vehicle_year]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[VEHICLE_Make]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="VEHICLE_Make"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[VEHICLE_Make]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[VEHICLE_Model]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="VEHICLE_Model"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[VEHICLE_Model]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[agent_name]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="agent_name"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[agent_name]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[company_name]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="company_name"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[company_name]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[coverage]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="coverage"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[coverage]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[company_cancel_date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="company_cancel_date"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[company_cancel_date]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[cancel_date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="cancel_date"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[cancel_date]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[eff_date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="eff_date"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[eff_date]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[create_date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="create_date"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[create_date]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[policy_num]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="policy_num"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[policy_num]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[installments]"
                      cachedDataType="i4"
                      cachedName="installments"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[installments]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[payments_made]"
                      cachedDataType="i4"
                      cachedName="payments_made"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[payments_made]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[payments_remaining]"
                      cachedDataType="i4"
                      cachedName="payments_remaining"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[payments_remaining]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[phone]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="phone"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[phone]" />
                    <inputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0].Columns[ACCT_NUM]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ACCT_NUM"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output].Columns[ACCT_NUM]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0]"
                  hasSideEffects="true"
                  name="Output 0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Dup Reason]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Dup Reason]"
                      name="Dup Reason" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Account]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Account]"
                      name="Account" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Policy Num]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Policy Num]"
                      name="Policy Num" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Status]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Status]"
                      name="Status" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Customer]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Customer]"
                      name="Customer" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Address]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Address]"
                      name="Address" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Address 2]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Address 2]"
                      name="Address 2" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[City]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[City]"
                      name="City" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[State]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[State]"
                      name="State" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Zip]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Zip]"
                      name="Zip" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Vin]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Vin]"
                      name="Vin" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Seller Name]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Seller Name]"
                      name="Seller Name" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Seller Phone]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Seller Phone]"
                      name="Seller Phone" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Installments]"
                      dataType="i4"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Installments]"
                      name="Installments" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Payments Made]"
                      dataType="i4"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Payments Made]"
                      name="Payments Made" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Payments Remaining]"
                      dataType="i4"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Payments Remaining]"
                      name="Payments Remaining" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Vehicle Year]"
                      dataType="i4"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Vehicle Year]"
                      name="Vehicle Year" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Vehicle Make]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Vehicle Make]"
                      name="Vehicle Make" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Vehicle Model]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Vehicle Model]"
                      name="Vehicle Model" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Admin]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Admin]"
                      name="Admin" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Coverage]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Coverage]"
                      name="Coverage" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Effective Date]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Effective Date]"
                      name="Effective Date" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Create Date]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Create Date]"
                      name="Create Date" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Non Pay Cancel Date]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Non Pay Cancel Date]"
                      name="Non Pay Cancel Date" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Company Cancel Date]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Company Cancel Date]"
                      name="Company Cancel Date" />
                    <outputColumn
                      refId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Notes]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Notes]"
                      name="Notes" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Create Group 2 Dup Vin Excel.Paths[Different Address]"
              endId="Package\Create Group 2 Dup Vin Excel\Different Address.Inputs[Flat File Destination Input]"
              name="Different Address"
              startId="Package\Create Group 2 Dup Vin Excel\Conditional Split.Outputs[Different Address]" />
            <path
              refId="Package\Create Group 2 Dup Vin Excel.Paths[Not Same Seller]"
              endId="Package\Create Group 2 Dup Vin Excel\Different Seller File.Inputs[Flat File Destination Input]"
              name="Not Same Seller"
              startId="Package\Create Group 2 Dup Vin Excel\Conditional Split.Outputs[Not Same Seller]" />
            <path
              refId="Package\Create Group 2 Dup Vin Excel.Paths[OLE DB Source Output]"
              endId="Package\Create Group 2 Dup Vin Excel\Script Component.Inputs[Input 0]"
              name="OLE DB Source Output"
              startId="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Create Group 2 Dup Vin Excel.Paths[Output 0]"
              endId="Package\Create Group 2 Dup Vin Excel\Conditional Split.Inputs[Conditional Split Input]"
              name="Output 0"
              startId="Package\Create Group 2 Dup Vin Excel\Script Component.Outputs[Output 0]" />
            <path
              refId="Package\Create Group 2 Dup Vin Excel.Paths[Same Seller]"
              endId="Package\Create Group 2 Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input]"
              name="Same Seller"
              startId="Package\Create Group 2 Dup Vin Excel\Conditional Split.Outputs[Same Seller]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Create Group 3 or More Dup Vin Excel"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{D2AE6667-EE72-4E1B-A485-680D3C9B3336}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create Group 3 or More Dup Vin Excel"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Create Group 3 or More Dup Vin Excel\Conditional Split"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Conditional Split"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Create Group 3 or More Dup Vin Excel\Conditional Split.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Conditional Split.Inputs[Conditional Split Input].Columns[Dup Reason]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Dup Reason"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Dup Reason]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create Group 3 or More Dup Vin Excel\Conditional Split.Outputs[Same Seller]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Same Seller"
                  synchronousInputId="Package\Create Group 3 or More Dup Vin Excel\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Dup Reason]} == "Same Seller"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">[Dup Reason] == "Same Seller"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Create Group 3 or More Dup Vin Excel\Conditional Split.Outputs[Different Seller]"
                  description="Output 2 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Different Seller"
                  synchronousInputId="Package\Create Group 3 or More Dup Vin Excel\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Dup Reason]} == "Different Seller"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">[Dup Reason] == "Different Seller"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">1</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Create Group 3 or More Dup Vin Excel\Conditional Split.Outputs[Different Address]"
                  description="Output 3 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Different Address"
                  synchronousInputId="Package\Create Group 3 or More Dup Vin Excel\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Dup Reason]} == "Different Address"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">[Dup Reason] == "Different Address"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">2</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Create Group 3 or More Dup Vin Excel\Conditional Split.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Create Group 3 or More Dup Vin Excel\Conditional Split.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Create Group 3 or More Dup Vin Excel\Conditional Split.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Create Group 3 or More Dup Vin Excel\Conditional Split.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File"
              componentClassID="Microsoft.FlatFileDestination"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Flat File Destination"
              localeId="1033"
              name="Different Address File">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">true</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
              </properties>
              <connections>
                <connection
                  refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Different Address File 3 or More]"
                  connectionManagerRefId="Package.ConnectionManagers[Different Address File 3 or More]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].Columns[Account]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Account"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Account]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Account]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].Columns[Policy Num]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Policy Num"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Policy Num]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Policy Num]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].Columns[Status]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Status"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Status]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Status]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].Columns[Customer]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Customer"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Customer]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Customer]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].Columns[Address]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Address"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Address]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Address]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].Columns[Address 2]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Address 2"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Address 2]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Address 2]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].Columns[City]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="City"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[City]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[City]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].Columns[State]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="State"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[State]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[State]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].Columns[Zip]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Zip"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Zip]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Zip]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].Columns[Vin]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Vin"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Vin]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Vin]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].Columns[Seller Name]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Seller Name"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Seller Name]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Seller Name]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].Columns[Seller Phone]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Seller Phone"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Seller Phone]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Seller Phone]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].Columns[Installments]"
                      cachedDataType="i4"
                      cachedName="Installments"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Installments]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Installments]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].Columns[Payments Made]"
                      cachedDataType="i4"
                      cachedName="Payments Made"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Payments Made]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Payments Made]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].Columns[Payments Remaining]"
                      cachedDataType="i4"
                      cachedName="Payments Remaining"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Payments Remaining]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Payments Remaining]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].Columns[Vehicle Year]"
                      cachedDataType="i4"
                      cachedName="Vehicle Year"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Vehicle Year]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Vehicle Year]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].Columns[Vehicle Make]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Vehicle Make"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Vehicle Make]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Vehicle Make]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].Columns[Vehicle Model]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Vehicle Model"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Vehicle Model]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Vehicle Model]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].Columns[Admin]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Admin"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Admin]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Admin]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].Columns[Coverage]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Coverage"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Coverage]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Coverage]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].Columns[Effective Date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Effective Date"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Effective Date]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Effective Date]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].Columns[Create Date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Create Date"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Create Date]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Create Date]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].Columns[Non Payment Cancel Date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Non Payment Cancel Date"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Non Payment Cancel Date]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Non Payment Cancel Date]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].Columns[Company Cancel Date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Company Cancel Date"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Company Cancel Date]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Company Cancel Date]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].Columns[Notes]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Notes"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Notes]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Notes]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Account]"
                      dataType="wstr"
                      length="4000"
                      name="Account" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Policy Num]"
                      dataType="wstr"
                      length="4000"
                      name="Policy Num" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Status]"
                      dataType="wstr"
                      length="4000"
                      name="Status" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Customer]"
                      dataType="wstr"
                      length="4000"
                      name="Customer" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Address]"
                      dataType="wstr"
                      length="4000"
                      name="Address" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Address 2]"
                      dataType="wstr"
                      length="4000"
                      name="Address 2" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[City]"
                      dataType="wstr"
                      length="4000"
                      name="City" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[State]"
                      dataType="wstr"
                      length="4000"
                      name="State" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Zip]"
                      dataType="wstr"
                      length="4000"
                      name="Zip" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Vin]"
                      dataType="wstr"
                      length="4000"
                      name="Vin" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Seller Name]"
                      dataType="wstr"
                      length="4000"
                      name="Seller Name" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Seller Phone]"
                      dataType="wstr"
                      length="4000"
                      name="Seller Phone" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Installments]"
                      dataType="i4"
                      name="Installments" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Payments Made]"
                      dataType="i4"
                      name="Payments Made" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Payments Remaining]"
                      dataType="i4"
                      name="Payments Remaining" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Vehicle Year]"
                      dataType="i4"
                      name="Vehicle Year" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Vehicle Make]"
                      dataType="wstr"
                      length="4000"
                      name="Vehicle Make" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Vehicle Model]"
                      dataType="wstr"
                      length="4000"
                      name="Vehicle Model" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Admin]"
                      dataType="wstr"
                      length="4000"
                      name="Admin" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Coverage]"
                      dataType="wstr"
                      length="4000"
                      name="Coverage" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Effective Date]"
                      dataType="dbTimeStamp"
                      name="Effective Date" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Create Date]"
                      dataType="dbTimeStamp"
                      name="Create Date" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Non Payment Cancel Date]"
                      dataType="dbTimeStamp"
                      name="Non Payment Cancel Date" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Company Cancel Date]"
                      dataType="dbTimeStamp"
                      name="Company Cancel Date" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input].ExternalColumns[Notes]"
                      dataType="wstr"
                      length="4000"
                      name="Notes" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file"
              componentClassID="Microsoft.FlatFileDestination"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Flat File Destination"
              localeId="1033"
              name="Different Seller file">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">true</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
              </properties>
              <connections>
                <connection
                  refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Different Seller File 3 or More]"
                  connectionManagerRefId="Package.ConnectionManagers[Different Seller File 3 or More]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].Columns[Account]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Account"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Account]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Account]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].Columns[Policy Num]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Policy Num"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Policy Num]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Policy Num]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].Columns[Status]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Status"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Status]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Status]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].Columns[Customer]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Customer"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Customer]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Customer]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].Columns[Address]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Address"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Address]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Address]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].Columns[Address 2]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Address 2"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Address 2]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Address 2]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].Columns[City]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="City"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[City]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[City]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].Columns[State]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="State"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[State]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[State]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].Columns[Zip]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Zip"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Zip]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Zip]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].Columns[Vin]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Vin"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Vin]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Vin]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].Columns[Seller Name]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Seller Name"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Seller Name]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Seller Name]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].Columns[Seller Phone]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Seller Phone"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Seller Phone]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Seller Phone]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].Columns[Installments]"
                      cachedDataType="i4"
                      cachedName="Installments"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Installments]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Installments]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].Columns[Payments Made]"
                      cachedDataType="i4"
                      cachedName="Payments Made"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Payments Made]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Payments Made]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].Columns[Payments Remaining]"
                      cachedDataType="i4"
                      cachedName="Payments Remaining"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Payments Remaining]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Payments Remaining]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].Columns[Vehicle Year]"
                      cachedDataType="i4"
                      cachedName="Vehicle Year"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Vehicle Year]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Vehicle Year]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].Columns[Vehicle Make]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Vehicle Make"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Vehicle Make]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Vehicle Make]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].Columns[Vehicle Model]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Vehicle Model"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Vehicle Model]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Vehicle Model]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].Columns[Admin]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Admin"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Admin]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Admin]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].Columns[Coverage]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Coverage"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Coverage]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Coverage]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].Columns[Effective Date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Effective Date"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Effective Date]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Effective Date]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].Columns[Create Date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Create Date"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Create Date]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Create Date]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].Columns[Non Payment Cancel Date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Non Payment Cancel Date"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Non Payment Cancel Date]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Non Payment Cancel Date]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].Columns[Company Cancel Date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Company Cancel Date"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Company Cancel Date]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Company Cancel Date]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].Columns[Notes]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Notes"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Notes]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Notes]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Account]"
                      dataType="wstr"
                      length="4000"
                      name="Account" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Policy Num]"
                      dataType="wstr"
                      length="4000"
                      name="Policy Num" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Status]"
                      dataType="wstr"
                      length="4000"
                      name="Status" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Customer]"
                      dataType="wstr"
                      length="4000"
                      name="Customer" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Address]"
                      dataType="wstr"
                      length="4000"
                      name="Address" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Address 2]"
                      dataType="wstr"
                      length="4000"
                      name="Address 2" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[City]"
                      dataType="wstr"
                      length="4000"
                      name="City" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[State]"
                      dataType="wstr"
                      length="4000"
                      name="State" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Zip]"
                      dataType="wstr"
                      length="4000"
                      name="Zip" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Vin]"
                      dataType="wstr"
                      length="4000"
                      name="Vin" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Seller Name]"
                      dataType="wstr"
                      length="4000"
                      name="Seller Name" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Seller Phone]"
                      dataType="wstr"
                      length="4000"
                      name="Seller Phone" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Installments]"
                      dataType="i4"
                      name="Installments" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Payments Made]"
                      dataType="i4"
                      name="Payments Made" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Payments Remaining]"
                      dataType="i4"
                      name="Payments Remaining" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Vehicle Year]"
                      dataType="i4"
                      name="Vehicle Year" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Vehicle Make]"
                      dataType="wstr"
                      length="4000"
                      name="Vehicle Make" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Vehicle Model]"
                      dataType="wstr"
                      length="4000"
                      name="Vehicle Model" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Admin]"
                      dataType="wstr"
                      length="4000"
                      name="Admin" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Coverage]"
                      dataType="wstr"
                      length="4000"
                      name="Coverage" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Effective Date]"
                      dataType="dbTimeStamp"
                      name="Effective Date" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Create Date]"
                      dataType="dbTimeStamp"
                      name="Create Date" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Non Payment Cancel Date]"
                      dataType="dbTimeStamp"
                      name="Non Payment Cancel Date" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Company Cancel Date]"
                      dataType="dbTimeStamp"
                      name="Company Cancel Date" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input].ExternalColumns[Notes]"
                      dataType="wstr"
                      length="4000"
                      name="Notes" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Get Group 3 or More Dup Vin Data"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable">User::Dup_Vin_Three_or_More</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[PLINKDB1.WF_AccountNet]"
                  connectionManagerRefId="Package.ConnectionManagers[PLINKDB1.WF_AccountNet]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[vin]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[vin]"
                      length="50"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[vin]"
                      name="vin"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[ACCT_NUM]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[ACCT_NUM]"
                      length="10"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[ACCT_NUM]"
                      name="ACCT_NUM"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[status]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[status]"
                      length="50"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[status]"
                      name="status"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[insured]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[insured]"
                      length="100"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[insured]"
                      name="insured"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[address1]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[address1]"
                      length="150"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[address1]"
                      name="address1"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[address2]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[address2]"
                      length="150"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[address2]"
                      name="address2"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[city]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[city]"
                      length="50"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[city]"
                      name="city"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[state]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[state]"
                      length="50"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[state]"
                      name="state"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[zip]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[zip]"
                      length="50"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[zip]"
                      name="zip"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[vehicle_year]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[vehicle_year]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[vehicle_year]"
                      name="vehicle_year"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[VEHICLE_Make]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[VEHICLE_Make]"
                      length="50"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[VEHICLE_Make]"
                      name="VEHICLE_Make"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[VEHICLE_Model]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[VEHICLE_Model]"
                      length="50"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[VEHICLE_Model]"
                      name="VEHICLE_Model"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[agent_name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[agent_name]"
                      length="100"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[agent_name]"
                      name="agent_name"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[company_name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[company_name]"
                      length="100"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[company_name]"
                      name="company_name"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[coverage]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[coverage]"
                      length="50"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[coverage]"
                      name="coverage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[company_cancel_date]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[company_cancel_date]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[company_cancel_date]"
                      name="company_cancel_date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[cancel_date]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[cancel_date]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[cancel_date]"
                      name="cancel_date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[eff_date]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[eff_date]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[eff_date]"
                      name="eff_date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[create_date]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[create_date]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[create_date]"
                      name="create_date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[policy_num]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[policy_num]"
                      length="50"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[policy_num]"
                      name="policy_num"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[installments]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[installments]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[installments]"
                      name="installments"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[payments_made]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[payments_made]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[payments_made]"
                      name="payments_made"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[payments_remaining]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[payments_remaining]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[payments_remaining]"
                      name="payments_remaining"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[phone]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[phone]"
                      length="50"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[phone]"
                      name="phone"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[vin]"
                      dataType="wstr"
                      length="50"
                      name="vin" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[ACCT_NUM]"
                      dataType="wstr"
                      length="10"
                      name="ACCT_NUM" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[status]"
                      dataType="wstr"
                      length="50"
                      name="status" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[insured]"
                      dataType="wstr"
                      length="100"
                      name="insured" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[address1]"
                      dataType="wstr"
                      length="150"
                      name="address1" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[address2]"
                      dataType="wstr"
                      length="150"
                      name="address2" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[city]"
                      dataType="wstr"
                      length="50"
                      name="city" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[state]"
                      dataType="wstr"
                      length="50"
                      name="state" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[zip]"
                      dataType="wstr"
                      length="50"
                      name="zip" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[vehicle_year]"
                      dataType="i4"
                      name="vehicle_year" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[VEHICLE_Make]"
                      dataType="wstr"
                      length="50"
                      name="VEHICLE_Make" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[VEHICLE_Model]"
                      dataType="wstr"
                      length="50"
                      name="VEHICLE_Model" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[agent_name]"
                      dataType="wstr"
                      length="100"
                      name="agent_name" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[company_name]"
                      dataType="wstr"
                      length="100"
                      name="company_name" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[coverage]"
                      dataType="wstr"
                      length="50"
                      name="coverage" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[company_cancel_date]"
                      dataType="dbTimeStamp"
                      name="company_cancel_date" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[cancel_date]"
                      dataType="dbTimeStamp"
                      name="cancel_date" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[eff_date]"
                      dataType="dbTimeStamp"
                      name="eff_date" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[create_date]"
                      dataType="dbTimeStamp"
                      name="create_date" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[policy_num]"
                      dataType="wstr"
                      length="50"
                      name="policy_num" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[installments]"
                      dataType="i4"
                      name="installments" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[payments_made]"
                      dataType="i4"
                      name="payments_made" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[payments_remaining]"
                      dataType="i4"
                      name="payments_remaining" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].ExternalColumns[phone]"
                      dataType="wstr"
                      length="50"
                      name="phone" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[vin]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[vin]"
                      name="vin" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[ACCT_NUM]"
                      dataType="wstr"
                      length="10"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[ACCT_NUM]"
                      name="ACCT_NUM" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[status]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[status]"
                      name="status" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[insured]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[insured]"
                      name="insured" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[address1]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[address1]"
                      name="address1" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[address2]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[address2]"
                      name="address2" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[city]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[city]"
                      name="city" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[state]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[state]"
                      name="state" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[zip]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[zip]"
                      name="zip" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[vehicle_year]"
                      dataType="i4"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[vehicle_year]"
                      name="vehicle_year" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[VEHICLE_Make]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[VEHICLE_Make]"
                      name="VEHICLE_Make" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[VEHICLE_Model]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[VEHICLE_Model]"
                      name="VEHICLE_Model" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[agent_name]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[agent_name]"
                      name="agent_name" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[company_name]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[company_name]"
                      name="company_name" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[coverage]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[coverage]"
                      name="coverage" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[company_cancel_date]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[company_cancel_date]"
                      name="company_cancel_date" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[cancel_date]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[cancel_date]"
                      name="cancel_date" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[eff_date]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[eff_date]"
                      name="eff_date" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[create_date]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[create_date]"
                      name="create_date" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[policy_num]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[policy_num]"
                      name="policy_num" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[installments]"
                      dataType="i4"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[installments]"
                      name="installments" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[payments_made]"
                      dataType="i4"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[payments_made]"
                      name="payments_made" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[payments_remaining]"
                      dataType="i4"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[payments_remaining]"
                      name="payments_remaining" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[phone]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[phone]"
                      name="phone" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File"
              componentClassID="Microsoft.FlatFileDestination"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Flat File Destination"
              localeId="1033"
              name="Same Seller File">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">true</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
              </properties>
              <connections>
                <connection
                  refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Same Seller File 3 Or More]"
                  connectionManagerRefId="Package.ConnectionManagers[Same Seller File 3 Or More]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Account]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Account"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Account]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Account]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Policy Num]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Policy Num"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Policy Num]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Policy Num]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Status]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Status"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Status]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Status]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Customer]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Customer"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Customer]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Customer]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Address]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Address"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Address]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Address]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Address 2]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Address 2"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Address 2]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Address 2]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[City]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="City"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[City]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[City]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[State]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="State"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[State]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[State]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Zip]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Zip"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Zip]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Zip]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Vin]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Vin"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Vin]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Vin]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Seller Name]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Seller Name"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Seller Name]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Seller Name]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Seller Phone]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Seller Phone"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Seller Phone]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Seller Phone]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Installments]"
                      cachedDataType="i4"
                      cachedName="Installments"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Installments]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Installments]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Payments Made]"
                      cachedDataType="i4"
                      cachedName="Payments Made"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Payments Made]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Payments Made]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Payments Remaining]"
                      cachedDataType="i4"
                      cachedName="Payments Remaining"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Payments Remaining]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Payments Remaining]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Vehicle Year]"
                      cachedDataType="i4"
                      cachedName="Vehicle Year"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Vehicle Year]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Vehicle Year]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Vehicle Make]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Vehicle Make"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Vehicle Make]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Vehicle Make]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Vehicle Model]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Vehicle Model"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Vehicle Model]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Vehicle Model]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Admin]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Admin"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Admin]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Admin]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Coverage]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Coverage"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Coverage]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Coverage]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Effective Date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Effective Date"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Effective Date]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Effective Date]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Create Date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Create Date"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Create Date]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Create Date]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Non Payment Cancel Date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Non Payment Cancel Date"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Non Payment Cancel Date]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Non Payment Cancel Date]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Company Cancel Date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Company Cancel Date"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Company Cancel Date]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Company Cancel Date]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].Columns[Notes]"
                      cachedDataType="wstr"
                      cachedLength="4000"
                      cachedName="Notes"
                      externalMetadataColumnId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Notes]"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Notes]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Account]"
                      dataType="wstr"
                      length="4000"
                      name="Account" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Policy Num]"
                      dataType="wstr"
                      length="4000"
                      name="Policy Num" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Status]"
                      dataType="wstr"
                      length="4000"
                      name="Status" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Customer]"
                      dataType="wstr"
                      length="4000"
                      name="Customer" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Address]"
                      dataType="wstr"
                      length="4000"
                      name="Address" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Address 2]"
                      dataType="wstr"
                      length="4000"
                      name="Address 2" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[City]"
                      dataType="wstr"
                      length="4000"
                      name="City" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[State]"
                      dataType="wstr"
                      length="4000"
                      name="State" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Zip]"
                      dataType="wstr"
                      length="4000"
                      name="Zip" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Vin]"
                      dataType="wstr"
                      length="4000"
                      name="Vin" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Seller Name]"
                      dataType="wstr"
                      length="4000"
                      name="Seller Name" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Seller Phone]"
                      dataType="wstr"
                      length="4000"
                      name="Seller Phone" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Installments]"
                      dataType="i4"
                      name="Installments" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Payments Made]"
                      dataType="i4"
                      name="Payments Made" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Payments Remaining]"
                      dataType="i4"
                      name="Payments Remaining" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Vehicle Year]"
                      dataType="i4"
                      name="Vehicle Year" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Vehicle Make]"
                      dataType="wstr"
                      length="4000"
                      name="Vehicle Make" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Vehicle Model]"
                      dataType="wstr"
                      length="4000"
                      name="Vehicle Model" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Admin]"
                      dataType="wstr"
                      length="4000"
                      name="Admin" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Coverage]"
                      dataType="wstr"
                      length="4000"
                      name="Coverage" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Effective Date]"
                      dataType="dbTimeStamp"
                      name="Effective Date" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Create Date]"
                      dataType="dbTimeStamp"
                      name="Create Date" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Non Payment Cancel Date]"
                      dataType="dbTimeStamp"
                      name="Non Payment Cancel Date" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Company Cancel Date]"
                      dataType="dbTimeStamp"
                      name="Company Cancel Date" />
                    <externalMetadataColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input].ExternalColumns[Notes]"
                      dataType="wstr"
                      length="4000"
                      name="Notes" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Create Group 3 or More Dup Vin Excel\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="11">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Collections.Generic;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    List<RowList> ListofRows = new List<RowList>();
    bool sameSeller = false;
    bool differentSeller = false;
    bool differentAddress = false;
    int RowNum = 0;
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        RowList RowTemp = new RowList();

        if (RowNum != 0) RowTemp = ListofRows[0];

        if (ListofRows.Count == 0)
        {
            RowList tempRow = new RowList();
            updateRowInformation(tempRow, Row);

            ListofRows.Add(tempRow);
            RowNum++;
        }
        else if (RowTemp.checkVin(Row.vin))
        {
            RowList tempRow = new RowList();
            updateRowInformation(tempRow, Row);

            ListofRows.Add(tempRow);
            RowNum++;

            foreach(RowList rowx in ListofRows)
            {
                if (!RowTemp.checkAddress(rowx.address1 + " " + rowx.address2))
                    differentAddress = true;
                if (!RowTemp.checkSeller(rowx.agentname))
                    differentSeller = true;
                else
                    sameSeller = true;
            }
        }
        else if (!RowTemp.checkVin(Row.vin))
        {
            foreach (RowList rowx in ListofRows)
            {
                if (differentAddress)
                    UpdateOutput(rowx, "Different Address");
                else if (differentSeller)
                    UpdateOutput(rowx, "Different Seller");
                else if (sameSeller)
                    UpdateOutput(rowx, "Same Seller");
            }

            ListofRows.Clear();
            RowNum = 0;

            RowList tempRow = new RowList();
            updateRowInformation(tempRow, Row);

            ListofRows.Add(tempRow);
            RowNum++;
        }
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
    }

    public class RowList
    {
        public string ACCTNUM = "";
        public string address1 = "";
        public string address2 = "";
        public string agentname = "";
        public DateTime canceldate = DateTime.Today;
        public string city = "";
        public DateTime companycanceldate = DateTime.Today;
        public string companyname = "";
        public string coverage = "";
        public DateTime createdate = DateTime.Today;
        public DateTime effdate = DateTime.Today;
        public int installments = 0;
        public string insured = "";
        public int paymentsmade = 0;
        public int paymentsremaining = 0;
        public string phone = "";
        public string policynum = "";
        public string state = "";
        public string status = "";
        public string VEHICLEMake = "";
        public string VEHICLEModel = "";
        public int vehicleyear = 0;
        public string vin = "";
        public string zip = "";

        public bool checkVin(string sentVin)
        {
            return sentVin == this.vin ? true : false;
        }

        public bool checkSeller(string sentSeller)
        {
            return sentSeller == this.agentname ? true : false;
        }

        public bool checkAddress(string sentAddress)
        {
            string combinedAddress = this.address1 + " " + this.address2;
            return sentAddress == combinedAddress ? true : false;
        }
    }

    public void updateRowInformation(RowList row, Input0Buffer input)
    {
        if (!input.ACCTNUM_IsNull)
            row.ACCTNUM = input.ACCTNUM;
        if (!input.address1_IsNull)
            row.address1 = input.address1;
        if (!input.address2_IsNull)
            row.address2 = input.address2;
        if (!input.agentname_IsNull)
            row.agentname = input.agentname;
        if (!input.canceldate_IsNull)
            row.canceldate = input.canceldate;
        if (!input.city_IsNull)
            row.city = input.city;
        if (!input.companycanceldate_IsNull)
            row.companycanceldate = input.companycanceldate;
        if (!input.companyname_IsNull)
            row.companyname = input.companyname;
        if (!input.coverage_IsNull)
            row.coverage = input.coverage;
        if (!input.createdate_IsNull)
            row.createdate = input.createdate;
        if (!input.effdate_IsNull)
            row.effdate = input.effdate;
        if (!input.installments_IsNull)
            row.installments = input.installments;
        if (!input.insured_IsNull)
            row.insured = input.insured;
        if (!input.paymentsmade_IsNull)
            row.paymentsmade = input.paymentsmade;
        if (!input.paymentsremaining_IsNull)
            row.paymentsremaining = input.paymentsremaining;
        if (!input.phone_IsNull)
            row.phone = input.phone;
        if (!input.policynum_IsNull)
            row.policynum = input.policynum;
        if (!input.state_IsNull)
            row.state = input.state;
        if (!input.status_IsNull)
            row.status = input.status;
        if (!input.VEHICLEMake_IsNull)
            row.VEHICLEMake = input.VEHICLEMake;
        if (!input.VEHICLEModel_IsNull)
            row.VEHICLEModel = input.VEHICLEModel;
        if (!input.vehicleyear_IsNull)
            row.vehicleyear = input.vehicleyear;
        if (!input.vin_IsNull)
            row.vin = input.vin;
        if (!input.zip_IsNull)
            row.zip = input.zip;
    }

    public void UpdateOutput(RowList rowx, string Reason)
    {
        Output0Buffer.AddRow();
        Output0Buffer.Account = rowx.ACCTNUM;
        Output0Buffer.Address = rowx.address1;
        Output0Buffer.Address2 = rowx.address2;
        Output0Buffer.SellerName = rowx.agentname;
        Output0Buffer.NonPaymentCancelDate = rowx.canceldate;
        Output0Buffer.City = rowx.city;
        Output0Buffer.CompanyCancelDate = rowx.companycanceldate;
        Output0Buffer.Admin = rowx.companyname;
        Output0Buffer.Coverage = rowx.coverage;
        Output0Buffer.CreateDate = rowx.createdate;
        Output0Buffer.EffectiveDate = rowx.effdate;
        Output0Buffer.Installments = rowx.installments;
        Output0Buffer.PaymentsMade = rowx.paymentsmade;
        Output0Buffer.PaymentsRemaining = rowx.paymentsremaining;
        Output0Buffer.PolicyNum = rowx.policynum;
        Output0Buffer.SellerPhone = rowx.phone;
        Output0Buffer.State = rowx.state;
        Output0Buffer.Status= rowx.status;
        Output0Buffer.VehicleMake = rowx.VEHICLEMake;
        Output0Buffer.VehicleModel = rowx.VEHICLEModel;
        Output0Buffer.VehicleYear = rowx.vehicleyear;
        Output0Buffer.Vin = rowx.vin;
        Output0Buffer.Zip = rowx.zip;
        Output0Buffer.DupReason = Reason;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String vin
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool vin_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String ACCTNUM
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool ACCTNUM_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String status
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool status_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String insured
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool insured_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String address1
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool address1_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String address2
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool address2_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String city
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool city_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public String state
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[7]);
        }
    }
    public bool state_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    public String zip
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[8]);
        }
    }
    public bool zip_IsNull
    {
        get
        {
            return IsNull(8);
        }
    }

    public Int32 vehicleyear
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[9]);
        }
    }
    public bool vehicleyear_IsNull
    {
        get
        {
            return IsNull(9);
        }
    }

    public String VEHICLEMake
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[10]);
        }
    }
    public bool VEHICLEMake_IsNull
    {
        get
        {
            return IsNull(10);
        }
    }

    public String VEHICLEModel
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[11]);
        }
    }
    public bool VEHICLEModel_IsNull
    {
        get
        {
            return IsNull(11);
        }
    }

    public String agentname
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[12]);
        }
    }
    public bool agentname_IsNull
    {
        get
        {
            return IsNull(12);
        }
    }

    public String companyname
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[13]);
        }
    }
    public bool companyname_IsNull
    {
        get
        {
            return IsNull(13);
        }
    }

    public String coverage
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[14]);
        }
    }
    public bool coverage_IsNull
    {
        get
        {
            return IsNull(14);
        }
    }

    public DateTime companycanceldate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[15]);
        }
    }
    public bool companycanceldate_IsNull
    {
        get
        {
            return IsNull(15);
        }
    }

    public DateTime canceldate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[16]);
        }
    }
    public bool canceldate_IsNull
    {
        get
        {
            return IsNull(16);
        }
    }

    public DateTime effdate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[17]);
        }
    }
    public bool effdate_IsNull
    {
        get
        {
            return IsNull(17);
        }
    }

    public DateTime createdate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[18]);
        }
    }
    public bool createdate_IsNull
    {
        get
        {
            return IsNull(18);
        }
    }

    public String policynum
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[19]);
        }
    }
    public bool policynum_IsNull
    {
        get
        {
            return IsNull(19);
        }
    }

    public Int32 installments
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[20]);
        }
    }
    public bool installments_IsNull
    {
        get
        {
            return IsNull(20);
        }
    }

    public Int32 paymentsmade
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[21]);
        }
    }
    public bool paymentsmade_IsNull
    {
        get
        {
            return IsNull(21);
        }
    }

    public Int32 paymentsremaining
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[22]);
        }
    }
    public bool paymentsremaining_IsNull
    {
        get
        {
            return IsNull(22);
        }
    }

    public String phone
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[23]);
        }
    }
    public bool phone_IsNull
    {
        get
        {
            return IsNull(23);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Account
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Account_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String PolicyNum
    {
        set
        {
            this[1] = value;
        }
    }
    public bool PolicyNum_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Status
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Status_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Customer
    {
        set
        {
            this[3] = value;
        }
    }
    public bool Customer_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Address
    {
        set
        {
            this[4] = value;
        }
    }
    public bool Address_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Address2
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Address2_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String City
    {
        set
        {
            this[6] = value;
        }
    }
    public bool City_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String State
    {
        set
        {
            this[7] = value;
        }
    }
    public bool State_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Zip
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Zip_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Vin
    {
        set
        {
            this[9] = value;
        }
    }
    public bool Vin_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String SellerName
    {
        set
        {
            this[10] = value;
        }
    }
    public bool SellerName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String SellerPhone
    {
        set
        {
            this[11] = value;
        }
    }
    public bool SellerPhone_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Installments
    {
        set
        {
            this[12] = value;
        }
    }
    public bool Installments_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 PaymentsMade
    {
        set
        {
            this[13] = value;
        }
    }
    public bool PaymentsMade_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 PaymentsRemaining
    {
        set
        {
            this[14] = value;
        }
    }
    public bool PaymentsRemaining_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 VehicleYear
    {
        set
        {
            this[15] = value;
        }
    }
    public bool VehicleYear_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String VehicleMake
    {
        set
        {
            this[16] = value;
        }
    }
    public bool VehicleMake_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String VehicleModel
    {
        set
        {
            this[17] = value;
        }
    }
    public bool VehicleModel_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(17);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Admin
    {
        set
        {
            this[18] = value;
        }
    }
    public bool Admin_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(18);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Coverage
    {
        set
        {
            this[19] = value;
        }
    }
    public bool Coverage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(19);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime EffectiveDate
    {
        set
        {
            this[20] = value;
        }
    }
    public bool EffectiveDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(20);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime CreateDate
    {
        set
        {
            this[21] = value;
        }
    }
    public bool CreateDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(21);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime NonPaymentCancelDate
    {
        set
        {
            this[22] = value;
        }
    }
    public bool NonPaymentCancelDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(22);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime CompanyCancelDate
    {
        set
        {
            this[23] = value;
        }
    }
    public bool CompanyCancelDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(23);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Notes
    {
        set
        {
            this[24] = value;
        }
    }
    public bool Notes_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(24);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String DupReason
    {
        set
        {
            this[25] = value;
        }
    }
    public bool DupReason_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(25);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7fc34cba62d741e197e7d32604e64cc5.Properties.Settings.get_Default():SC_7fc34cba62d741e197e7d32604e64cc5.Properties.Sett" +
    "ings")]

namespace SC_7fc34cba62d741e197e7d32604e64cc5.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7fc34cba62d741e197e7d32604e64cc5.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7fc34cba62d741e197e7d32604e64cc5.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7fc34cba62d741e197e7d32604e64cc5.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_7fc34cba62d741e197e7d32604e64cc5.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_7fc34cba62d741e197e7d32604e64cc5.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_7fc34cba62d741e197e7d32604e64cc5</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_7fc34cba62d741e197e7d32604e64cc5</msb:DisplayName>
		<msb:ProjectId>{F50E8EAB-9765-4CB1-BE00-011F7200B790}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_7fc34cba62d741e197e7d32604e64cc5.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_7fc34cba62d741e197e7d32604e64cc5")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_7fc34cba62d741e197e7d32604e64cc5")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_7fc34cba62d741e197e7d32604e64cc5.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{ef4943b7-7334-49d7-b3ab-70102d21c7a9}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_7fc34cba62d741e197e7d32604e64cc5</RootNamespace>
    <AssemblyName>SC_7fc34cba62d741e197e7d32604e64cc5</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_7fc34cba62d741e197e7d32604e64cc5" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_7fc34cba62d741e197e7d32604e64cc5.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDABOd71kAAAAAAAAAAOAAIiALATAAADgAAAAIAAAAAAAAtlYA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAGRWAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAvDYAAAAgAAAAOAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAA6AAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAQAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACY
VgAAAAAAAEgAAAACAAUAeC8AADQmAAABAAAAAAAAAKxVAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACiobMAQAxQEAAAEAABFzhwAABgoC
ewUAAAQsDQJ7AQAABBZvEgAACgoCewEAAARvEwAACi0pc4cAAAYLAgcDKAUAAAYCewEAAAQHbxQA
AAoCAnsFAAAEF1h9BQAABCoGA28JAAAGb4QAAAY5oQAAAHOHAAAGDAIIAygFAAAGAnsBAAAECG8U
AAAKAgJ7BQAABBdYfQUAAAQCewEAAARvFQAACg0rTxIDKBYAAAoTBAYRBHsQAAAEcgEAAHARBHsR
AAAEKBcAAApvhgAABi0HAhd9BAAABAYRBHsSAAAEb4UAAAYtCQIXfQMAAAQrBwIXfQIAAAQSAygY
AAAKLajdzwAAABID/hYCAAAbbxkAAArcBgNvCQAABm+EAAAGOrAAAAACewEAAARvFQAACg0rTBID
KBYAAAoTBgJ7BAAABCwPAhEGcgUAAHAoBgAABissAnsDAAAELA8CEQZyKQAAcCgGAAAGKxUCewIA
AAQsDQIRBnJLAABwKAYAAAYSAygYAAAKLaveDhID/hYCAAAbbxkAAArcAnsBAAAEbxoAAAoCFn0F
AAAEc4cAAAYTBQIRBQMoBQAABgJ7AQAABBEFbxQAAAoCAnsFAAAEF1h9BQAABCoAAAABHAAAAgCW
AF/1AA4AAAAAAgAgAVl5AQ4AAAAABioAABMwAgDhAQAAAAAAAARvDAAABi0MAwRvCwAABn0PAAAE
BG8SAAAGLQwDBG8RAAAGfRAAAAQEbxQAAAYtDAMEbxMAAAZ9EQAABARvIgAABi0MAwRvIQAABn0S
AAAEBG8qAAAGLQwDBG8pAAAGfRMAAAQEbxYAAAYtDAMEbxUAAAZ9FAAABARvKAAABi0MAwRvJwAA
Bn0VAAAEBG8kAAAGLQwDBG8jAAAGfRYAAAQEbyYAAAYtDAMEbyUAAAZ9FwAABARvLgAABi0MAwRv
LQAABn0YAAAEBG8sAAAGLQwDBG8rAAAGfRkAAAQEbzIAAAYtDAMEbzEAAAZ9GgAABARvEAAABi0M
AwRvDwAABn0bAAAEBG80AAAGLQwDBG8zAAAGfRwAAAQEbzYAAAYtDAMEbzUAAAZ9HQAABARvOAAA
Bi0MAwRvNwAABn0eAAAEBG8wAAAGLQwDBG8vAAAGfR8AAAQEbxgAAAYtDAMEbxcAAAZ9IAAABARv
DgAABi0MAwRvDQAABn0hAAAEBG8eAAAGLQwDBG8dAAAGfSIAAAQEbyAAAAYtDAMEbx8AAAZ9IwAA
BARvHAAABi0MAwRvGwAABn0kAAAEBG8KAAAGLQwDBG8JAAAGfSUAAAQEbxoAAAYtDAMEbxkAAAZ9
JgAABCoAAAATMAIAnwEAAAAAAAACewgAAARvcAAABgJ7CAAABAN7DwAABG88AAAGAnsIAAAEA3sQ
AAAEb0QAAAYCewgAAAQDexEAAARvRgAABgJ7CAAABAN7EgAABG9QAAAGAnsIAAAEA3sTAAAEb2gA
AAYCewgAAAQDexQAAARvSAAABgJ7CAAABAN7FQAABG9qAAAGAnsIAAAEA3sWAAAEb2AAAAYCewgA
AAQDexcAAARvYgAABgJ7CAAABAN7GAAABG9mAAAGAnsIAAAEA3sZAAAEb2QAAAYCewgAAAQDexoA
AARvVAAABgJ7CAAABAN7HAAABG9WAAAGAnsIAAAEA3sdAAAEb1gAAAYCewgAAAQDex8AAARvPgAA
BgJ7CAAABAN7HgAABG9SAAAGAnsIAAAEA3sgAAAEb0oAAAYCewgAAAQDeyEAAARvQAAABgJ7CAAA
BAN7IgAABG9cAAAGAnsIAAAEA3sjAAAEb14AAAYCewgAAAQDeyQAAARvWgAABgJ7CAAABAN7JQAA
BG9OAAAGAnsIAAAEA3smAAAEb0wAAAYCewgAAAQEb24AAAYqSgJzGwAACn0BAAAEAihzAAAGKioC
AwQFKBwAAAoqUgJ7HQAACgJ7HgAAChaUbx8AAAoqIgIWKCAAAAoqUgJ7HQAACgJ7HgAACheUbx8A
AAoqIgIXKCAAAAoqUgJ7HQAACgJ7HgAAChiUbx8AAAoqIgIYKCAAAAoqUgJ7HQAACgJ7HgAAChmU
bx8AAAoqIgIZKCAAAAoqUgJ7HQAACgJ7HgAAChqUbx8AAAoqIgIaKCAAAAoqUgJ7HQAACgJ7HgAA
ChuUbx8AAAoqIgIbKCAAAAoqUgJ7HQAACgJ7HgAAChyUbx8AAAoqIgIcKCAAAAoqUgJ7HQAACgJ7
HgAACh2Ubx8AAAoqIgIdKCAAAAoqUgJ7HQAACgJ7HgAACh6Ubx8AAAoqIgIeKCAAAAoqVgJ7HQAA
CgJ7HgAACh8JlG8hAAAKKiYCHwkoIAAACipWAnsdAAAKAnseAAAKHwqUbx8AAAoqJgIfCiggAAAK
KlYCex0AAAoCex4AAAofC5RvHwAACiomAh8LKCAAAAoqVgJ7HQAACgJ7HgAACh8MlG8fAAAKKiYC
HwwoIAAACipWAnsdAAAKAnseAAAKHw2Ubx8AAAoqJgIfDSggAAAKKlYCex0AAAoCex4AAAofDpRv
HwAACiomAh8OKCAAAAoqVgJ7HQAACgJ7HgAACh8PlG8iAAAKKiYCHw8oIAAACipWAnsdAAAKAnse
AAAKHxCUbyIAAAoqJgIfECggAAAKKlYCex0AAAoCex4AAAofEZRvIgAACiomAh8RKCAAAAoqVgJ7
HQAACgJ7HgAACh8SlG8iAAAKKiYCHxIoIAAACipWAnsdAAAKAnseAAAKHxOUbx8AAAoqJgIfEygg
AAAKKlYCex0AAAoCex4AAAofFJRvIQAACiomAh8UKCAAAAoqVgJ7HQAACgJ7HgAACh8VlG8hAAAK
KiYCHxUoIAAACipWAnsdAAAKAnseAAAKHxaUbyEAAAoqJgIfFiggAAAKKlYCex0AAAoCex4AAAof
F5RvHwAACiomAh8XKCAAAAoqHgIoIwAACioeAigkAAAKKiYCFgMoJQAACipaAywIAhYoJgAACipy
YwAAcHMnAAAKeiYCFwMoJQAACipaAywIAhcoJgAACipyYwAAcHMnAAAKeiYCGAMoJQAACipaAywI
AhgoJgAACipyYwAAcHMnAAAKeiYCGQMoJQAACipaAywIAhkoJgAACipyYwAAcHMnAAAKeiYCGgMo
JQAACipaAywIAhooJgAACipyYwAAcHMnAAAKeiYCGwMoJQAACipaAywIAhsoJgAACipyYwAAcHMn
AAAKeiYCHAMoJQAACipaAywIAhwoJgAACipyYwAAcHMnAAAKeiYCHQMoJQAACipaAywIAh0oJgAA
CipyYwAAcHMnAAAKeiYCHgMoJQAACipaAywIAh4oJgAACipyYwAAcHMnAAAKeioCHwkDKCUAAAoq
XgMsCQIfCSgmAAAKKnJjAABwcycAAAp6KgIfCgMoJQAACipeAywJAh8KKCYAAAoqcmMAAHBzJwAA
CnoqAh8LAyglAAAKKl4DLAkCHwsoJgAACipyYwAAcHMnAAAKej4CHwwDjCAAAAEoJQAACipeAywJ
Ah8MKCYAAAoqcmMAAHBzJwAACno+Ah8NA4wgAAABKCUAAAoqXgMsCQIfDSgmAAAKKnJjAABwcycA
AAp6PgIfDgOMIAAAASglAAAKKl4DLAkCHw4oJgAACipyYwAAcHMnAAAKej4CHw8DjCAAAAEoJQAA
CipeAywJAh8PKCYAAAoqcmMAAHBzJwAACnoqAh8QAyglAAAKKl4DLAkCHxAoJgAACipyYwAAcHMn
AAAKeioCHxEDKCUAAAoqXgMsCQIfESgmAAAKKnJjAABwcycAAAp6KgIfEgMoJQAACipeAywJAh8S
KCYAAAoqcmMAAHBzJwAACnoqAh8TAyglAAAKKl4DLAkCHxMoJgAACipyYwAAcHMnAAAKej4CHxQD
jBEAAAEoJQAACipeAywJAh8UKCYAAAoqcmMAAHBzJwAACno+Ah8VA4wRAAABKCUAAAoqXgMsCQIf
FSgmAAAKKnJjAABwcycAAAp6PgIfFgOMEQAAASglAAAKKl4DLAkCHxYoJgAACipyYwAAcHMnAAAK
ej4CHxcDjBEAAAEoJQAACipeAywJAh8XKCYAAAoqcmMAAHBzJwAACnoqAh8YAyglAAAKKl4DLAkC
HxgoJgAACipyYwAAcHMnAAAKeioCHxkDKCUAAAoqXgMsCQIfGSgmAAAKKnJjAABwcycAAAp6HgIo
KAAACioeAigpAAAKKn4CKCoAAAoCAnN7AAAGfQYAAAQCAnN8AAAGfQcAAAQqABMwBABPAAAAAAAA
AARyAAEAcBpvKwAACiwVAgUCAygsAAAKDgRzCAAABm95AAAGBW8tAAAKLCMCAnsJAAAEF1h9CQAA
BAJ7CQAABBczDAJvdQAABgIodgAABipuAnsIAAAELBICewgAAARvcQAABgIUfQgAAAQqABMwBQA9
AAAAAgAAERYKKy4EBpQOBHIQAQBwKC4AAAozGQIFBpoCBAaUKCwAAAoOBHM7AAAGfQgAAAQGF1gK
BgMyzgJveAAABipKKwcCA296AAAGA285AAAGLfEqOgIoLwAACgIDfQoAAAQqOgIoLwAACgIDfQsA
AAQqHgIoLwAACiqufgwAAAQtHnIiAQBw0AgAAAIoMAAACm8xAAAKczIAAAqADAAABH4MAAAEKhp+
DQAABCoeAoANAAAEKhp+DgAABCoeAigzAAAKKi5zggAABoAOAAAEKkoDAnslAAAEKDQAAAotAhYq
FypKAwJ7EgAABCg0AAAKLQIWKhcqAAATMAMAJAAAAAMAABECexAAAARyAQAAcAJ7EQAABCgXAAAK
CgMGKDQAAAotAhYqFyoTMAIA4wAAAAAAAAACcpQBAHB9DwAABAJylAEAcH0QAAAEAnKUAQBwfREA
AAQCcpQBAHB9EgAABAIoNQAACn0TAAAEAnKUAQBwfRQAAAQCKDUAAAp9FQAABAJylAEAcH0WAAAE
AnKUAQBwfRcAAAQCKDUAAAp9GAAABAIoNQAACn0ZAAAEAnKUAQBwfRsAAAQCcpQBAHB9HgAABAJy
lAEAcH0fAAAEAnKUAQBwfSAAAAQCcpQBAHB9IQAABAJylAEAcH0iAAAEAnKUAQBwfSMAAAQCcpQB
AHB9JQAABAJylAEAcH0mAAAEAigvAAAKKgBCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAF
AGwAAAD0EgAAI34AAGATAADMDgAAI1N0cmluZ3MAAAAALCIAAJgBAAAjVVMAxCMAABAAAAAjR1VJ
RAAAANQjAABgAgAAI0Jsb2IAAAAAAAAAAgAAAVcVogkJAwAAAPoBMwAWAAABAAAAJAAAAAoAAAAm
AAAAhwAAAE8AAAA1AAAAEAAAAAMAAAAEAAAAZwAAAGgAAAACAAAAAQAAAAQAAAABAAAAAQAAAAAA
PwUBAAAAAAAGAOgDsgsGAHwEsgsGADQDnwsPACYMAAAGAGEDSwoGAMsDSwoGAKwDSwoGAGMESwoG
AAgESwoGACEESwoGAHgDSwoGAJMD4wQKADwEuwEGAAEAjgA7AH0LAAAGAGMNoAkGALIBoAkKABoL
uwEOAAsLuwEKAKIKuwEKALMNuwEGABcDnwsGACsL0gsGAJYKNgoSAN0CKQUSAEgDKQUSACMCIQoG
APwCsgsGAAAFoAkGAEgBoAkGAF0KoAkGABgAoAkGAIUKoAkGAPYBoAkGAFQBoAkGAKQOSwoAAAAA
XAAAAAAAAQABAAEAEADvCQAAFAABAAEAAQAQAPAKAABJAAYACAABABAA/QoAAEkABgA7AAEAEACV
DQAAVQAGAHMAAQAQAK0MAABBAAoAewABABAAZAwAAEEACwB8AAAAEADZCzUMQQAMAH0AAAEQAJ0M
NQxtAA4AgQACABAAAg4AAEEADwCEAAEAPQ3lAAEAOwvtAAEAUgvtAAEA2gztAAEApwnwAAYArQzz
AAYAZAz3AAYA/Qr7AAEArQDwAAEAow3/AAEAow3/ABEAygkDAREAEwIHAREA3AALAQYAfQAPAQYA
DAAPAQYALwAPAQYAlQEPAQYAyAISAQYAug4PAQYAwQISAQYAowEPAQYAHwEPAQYAlwISAQYApgIS
AQYADA3wAAYA1AAPAQYAAQHwAAYA0QTwAAYA8AEPAQYAwAkPAQYA9gIPAQYANg0PAQYALAEPAQYA
CwUPAQYA5ArwAAYACAoPAQYAxgoPAVAgAAAAAMYAmgQGAAEAWCAAAAAAxgClBAYAAQBgIAAAAADG
AG4OFgEBAFAiAAAAAMYASA0GAAIAVCIAAAAAhgAMChwBAgBEJAAAAACGAFEOJAEEAO8lAAAAAIYY
iAsGAAYAAiYAAAAAhhiIC2cABgANJgAAAACGCAQKKwEJACImAAAAAIYIVwhjAAkAKyYAAAAAhgh5
ACsBCQBAJgAAAACGCKMFYwAJAEkmAAAAAIYIMg0rAQkAXiYAAAAAhghBCWMACQBnJgAAAACGCNAA
KwEJAHwmAAAAAIYItgVjAAkAhSYAAAAAhggIACsBCQCaJgAAAACGCGcFYwAJAKMmAAAAAIYIKwAr
AQkAuCYAAAAAhgiPBWMACQDBJgAAAACGCLYOKwEJANYmAAAAAIYIdgljAAkA3yYAAAAAhgjyAisB
CQD0JgAAAACGCJIHYwAJAP0mAAAAAIYIwgorAQkAEicAAAAAhgiKCGMACQAbJwAAAACGCOAKPQAJ
ADEnAAAAAIYIsAhjAAkAOycAAAAAhggoASsBCQBRJwAAAACGCCEGYwAJAFsnAAAAAIYIBwUrAQkA
cScAAAAAhgjdB2MACQB7JwAAAACGCJEBKwEJAJEnAAAAAIYIZQZjAAkAmycAAAAAhgifASsBCQCx
JwAAAACGCHoGYwAJALsnAAAAAIYIGwErAQkA0ScAAAAAhggNBmMACQDbJwAAAACGCL0CLwEJAPEn
AAAAAIYIZAdjAAkA+ycAAAAAhgiuAi8BCQARKAAAAACGCE4HYwAJABsoAAAAAIYIogIvAQkAMSgA
AAAAhgg7B2MACQA7KAAAAACGCJMCLwEJAFEoAAAAAIYIJQdjAAkAWygAAAAAhgi8CSsBCQBxKAAA
AACGCCIIYwAJAHsoAAAAAIYICA09AAkAkSgAAAAAhggXCWMACQCbKAAAAACGCP0APQAJALEoAAAA
AIYI4QVjAAkAuygAAAAAhgjNBD0ACQDRKAAAAACGCMAHYwAJANsoAAAAAIYI7AErAQkA8SgAAAAA
hgioBmMACQD7KAAAAACGAIUOYwAJAAMpAAAAAIYAfQ1jAAkAAiYAAAAAhhiIC2cACQALKQAAAACG
CNkNEAAMABUpAAAAAIYIUwk0AQ0ALCkAAAAAhgiuCRAADgA2KQAAAACGCA0INAEPAE0pAAAAAIYI
Jw0QABAAVykAAAAAhggvCTQBEQBuKQAAAACGCG0LEAASAHgpAAAAAIYIxwg0ARMAjykAAAAAhgjB
DBAAFACZKQAAAACGCOwINAEVALApAAAAAIYIHgAQABYAuikAAAAAhgh7BTQBFwDRKQAAAACGCK0O
EAAYANspAAAAAIYIZgk0ARkA8ikAAAAAhgjTAhAAGgD8KQAAAACGCIEHNAEbABMqAAAAAIYIugoQ
ABwAHSoAAAAAhgh7CDQBHQA0KgAAAACGCNYJEAAeAD8qAAAAAIYINwg0AR8AVyoAAAAAhgh4ARAA
IABiKgAAAACGCE8GNAEhAHoqAAAAAIYI3AEQACIAhSoAAAAAhgiRBjQBIwCdKgAAAACGCPcMAQAk
AK0qAAAAAIYI/wg0ASUAxSoAAAAAhgjsAAEAJgDVKgAAAACGCMkFNAEnAO0qAAAAAIYItwQBACgA
/SoAAAAAhgijBzQBKQAVKwAAAACGCMoKAQAqACUrAAAAAIYImQg0ASsAPSsAAAAAhgg4ARAALABI
KwAAAACGCDgGNAEtAGArAAAAAIYIGAUQAC4AaysAAAAAhgj1BzQBLwCDKwAAAACGCPoJEAAwAI4r
AAAAAIYIRgg0ATEApisAAAAAhggOARAAMgCxKwAAAACGCPkFNAEzAMkrAAAAAIYIUgI5ATQA2SsA
AAAAhgjPBjQBNQDxKwAAAACGCEMCOQE2AAEsAAAAAIYIuQY0ATcAGSwAAAAAhghkAjkBOAApLAAA
AACGCOgGNAE5AEEsAAAAAIYIfQI5AToAUSwAAAAAhggIBzQBOwBpLAAAAACGCG4MEAA8AHQsAAAA
AIYI2wg0AT0AjCwAAAAAhgh3ChAAPgCXLAAAAACGCGYINAE/AK8sAAAAAIYAZw4GAEAAtywAAAAA
hgB6DQYAQAADKQAAAACGAH0NYwBAAL8sAAAAAIYYiAsGAEAA4CwAAAAAxgAyDj8BQABQIgAAAADG
ARkNBgBEADstAAAAAIEAvAAGAEQAWC0AAAAAxgBFDkkBRABQIgAAAADGAUgNBgBIAKEtAAAAAMYB
Kw4WAUgAUCIAAAAAxgFuDhYBSQC0LQAAAACGGIgLVQFKAMMtAAAAAIYYiAtVAUsA0i0AAAAAgxiI
CwYATADaLQAAAACTCCcLWwFMAAYuAAAAAJMI+wFgAUwADS4AAAAAkwgHAmUBTAAVLgAAAACWCIkN
awFNABwuAAAAAIYYiAsGAE0AJC4AAAAAkRiOC3ABTQAwLgAAAACGAN4JdAFNAEMuAAAAAIYARgt0
AU4AWC4AAAAAhgDNDHQBTwCILgAAAACGGIgLBgBQAAAAAQCJDgAAAQCNDgAAAgA/DgAAAQCRDgAA
AgB+CgAAAQAgCwAAAgB4DAAAAwCwCgAAAQAgCwAAAgB4DAAAAwCwCgAAAQCxBAAAAQCxBAAAAQCx
BAAAAQCxBAAAAQCxBAAAAQCxBAAAAQCxBAAAAQCxBAAAAQCxBAAAAQCxBAAAAQCxBAAAAQCxBAAA
AQCxBAAAAQCxBAAAAQCxBAAAAQCxBAAAAQCxBAAAAQCxBAAAAQCxBAAAAQCxBAAAAQCxBAAAAQCx
BAAAAQCxBAAAAQCxBAAAAQCxBAAAAQCxBAAAAQCxBAAAAQCxBAAAAQCxBAAAAQCxBAAAAQCxBAAA
AQCxBAAAAQCxBAAAAQCxBAAAAQCxBAAAAQCxBAAAAQCxBAAAAQCxBAAAAQCxBAAAAQCxBAAAAQCx
BAAAAQCxBAAAAQCxBAAAAQCxBAAAAQCxBAAAAQCxBAAAAQCxBAAAAQCxBAAAAQCxBAAAAQCxBAAA
AQCxBAAAAQCxBAAAAQBlAAAAAgCHAQAAAwAgCwAABACwCgAAAQAfDQAAAgCVCwAAAwC5DAAABACw
CgAAAQAgCwAAAQCJDgAAAQC5DQAAAQC5DQAAAQCxBAAAAQDnCQAAAQBiCwAAAQDrDAkAiAsBABEA
iAsGABkAiAsKACkAiAsQADEAiAsQADkAiAsQAEEAiAsQAEkAiAsQAFEAiAsQAFkAiAsQAGEAiAsQ
AGkAiAsGALEAiAsGANEAiAsVAOEAiAsGAKkAmgQGAKkApQQGAAwAjgk3AAwAzw09AAwAqQBBAAwA
egtHABQAww1XAOkAXA1cABQAXg5jAPEAOwIGAAwA2goGAAwAiAsGAJEAiAtnAJEAIAtxAJEAeAx1
AJkA/QR5AJEAfwl+AJkAFQCDAJkArwGIAJEAhQ5jAJEAfQ1jAJEAlwmOAJEAhgkBAPkAiAsQAJEA
Zw4GAJEAeg0GAKkAiAsGAOkApgyUAKkAjAycAJkAag1jAKkAbQCmAIEAiAsGABEBZgGtABEBoA62
ALkAiAu8ANkAiAsGAOkAvw7EAIkAlg7OAC4ACwCZAS4AEwCiAS4AGwDBAS4AIwDKAS4AKwDzAS4A
MwDzAS4AOwDzAS4AQwDKAS4ASwD5AS4AUwDzAS4AWwAQAkMAYwBaAgMBawBaAsEBewBaAqkMcwDB
AckMcwDBARsAogDKAAMAAQAEADEACABlAAkAZwAAAAgKeQEAAFsIfQEAAH0AeQEAAKcFfQEAADYN
eQEAAEUJfQEAANQAeQEAALoFfQEAAAwAeQEAAGsFfQEAAC8AeQEAAJMFfQEAALoOeQEAAHoJfQEA
APYCeQEAAJYHfQEAAMYKeQEAAI4IfQEAAOQKgQEAALQIfQEAACwBeQEAACUGfQEAAAsFeQEAAOEH
fQEAAJUBeQEAAGkGfQEAAKMBeQEAAH4GfQEAAB8BeQEAABEGfQEAAMEChQEAAGgHfQEAAMgChQEA
AG8HfQEAAKYChQEAAD8HfQEAAJcChQEAACkHfQEAAMAJeQEAACYIfQEAAAwNgQEAABsJfQEAAAEB
gQEAAOUFfQEAANEEgQEAAMQHfQEAAPABeQEAAKwGfQEAAN0NeQEAAFcJfQEAALIJeQEAABEIfQEA
ACsNeQEAADMJfQEAAHELeQEAAMsIfQEAAO8MeQEAAPAIfQEAACIAeQEAAH8FfQEAALEOeQEAAGoJ
fQEAAOwCeQEAAIUHfQEAAL4KeQEAAH8IfQEAAOsJeQEAADsIfQEAAHwBeQEAAFMGfQEAAOABeQEA
AJUGfQEAAPsMgQEAAAMJfQEAAPAAgQEAAM0FfQEAALsEgQEAAKcHfQEAAM4KgQEAAJ0IfQEAADwB
eQEAADwGfQEAABwFeQEAAPkHfQEAAP4JeQEAAEoIfQEAABIBeQEAAP0FfQEAAFYChQEAANMGfQEA
AEcChQEAAL0GfQEAAGgChQEAAOwGfQEAAIEChQEAAAwHfQEAAHIMeQEAAN8IfQEAAHsKeQEAAGoI
fQEAACsLigEAABsCjwEAAI0NlAECAAkAAwACAAoABQACAAsABwACAAwACQACAA0ACwACAA4ADQAC
AA8ADwACABAAEQACABEAEwACABIAFQACABMAFwACABQAGQACABUAGwACABYAHQACABcAHwACABgA
IQACABkAIwACABoAJQACABsAJwACABwAKQACAB0AKwACAB4ALQACAB8ALwACACAAMQACACEAMwAC
ACIANQACACMANwACACQAOQACACUAOwACACYAPQACACcAPwACACgAQQACACkAQwACACoARQACACsA
RwACACwASQACAC0ASwACAC4ATQACAC8ATwACADAAUQACADEAUwACADIAVQACADMAVwACADQAWQAC
ADUAWwACADYAXQACADcAXwACADgAYQABADwAYwABAD0AZQABAD4AZwABAD8AaQABAEAAawABAEEA
bQABAEIAbwABAEMAcQABAEQAcwABAEUAdQABAEYAdwABAEcAeQABAEgAewABAEkAfQABAEoAfwAB
AEsAgQABAEwAgwABAE0AhQABAE4AhwABAE8AiQABAFAAiwABAFEAjQABAFIAjwABAFMAkQABAFQA
kwABAFUAlQABAFYAlwABAFcAmQABAFgAmwABAFkAnQABAFoAnwABAFsAoQABAFwAowABAF0ApQAB
AF4ApwABAF8AqQABAGAAqwABAGEArQABAGIArwABAGMAsQABAGQAswABAGUAtQABAGYAtwABAGcA
uQABAGgAuwABAGkAvQABAGoAvwABAGsAwQABAGwAwwABAG0AxQABAG4AxwABAG8AyQACAH4AywAC
AH8AzQABAIAAzQACAIEAzwAwAFAABIAAAAEAAAAAAAAAAAAAAAAAOAAAAAQAAAAAAAAAAAAAANMA
hQAAAAAADgAAAAAAAAAAAAAA3ADlDQAAAAAOAAAAAAAAAAAAAADcAAoOAAAAAAQAAAAAAAAAAAAA
ANMAoAkAAAAAAAAAAAEAAADjCwAACgACAAAAAExpc3RgMQBnZXRfYWRkcmVzczEAR2V0SW50MzIA
c2V0X0FkZHJlc3MyAGdldF9hZGRyZXNzMgBTQ183ZmMzNGNiYTYyZDc0MWUxOTdlN2QzMjYwNGU2
NGNjNQA8TW9kdWxlPgBJbnB1dElEAEdldE91dHB1dElEAGdldF9BQ0NUTlVNAG1zY29ybGliAFN5
c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAEFkZABJbnB1dHNGaW5pc2hlZABNYXJrT3V0cHV0c0Zp
bmlzaGVkAGdldF9pbnN1cmVkAGRlZmF1bHRJbnN0YW5jZQBzZXRfUGF5bWVudHNNYWRlAGdldF9w
YXltZW50c21hZGUAc2V0X0NvdmVyYWdlAGdldF9jb3ZlcmFnZQBnZXRfVkVISUNMRU1ha2UAc2V0
X1ZlaGljbGVNYWtlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFu
ZGxlAHNldF9TZWxsZXJOYW1lAElucHV0TmFtZQBnZXRfYWdlbnRuYW1lAGdldF9jb21wYW55bmFt
ZQBHZXREYXRlVGltZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBzZXRfU2VsbGVy
UGhvbmUAZ2V0X3Bob25lAFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0
dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAERpc3Bvc2UAc2V0X0NyZWF0ZURhdGUAc2V0X0Vm
ZmVjdGl2ZURhdGUAc2V0X05vblBheW1lbnRDYW5jZWxEYXRlAHNldF9Db21wYW55Q2FuY2VsRGF0
ZQBnZXRfY3JlYXRlZGF0ZQBnZXRfZWZmZGF0ZQBnZXRfY2FuY2VsZGF0ZQBnZXRfY29tcGFueWNh
bmNlbGRhdGUAc2V0X1N0YXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAGdldF9zdGF0ZQBDb21waWxl
ckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2Fi
bGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1
dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFz
c2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRl
AENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRl
AEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50
QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0
dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVlAHNldF9QYXltZW50c1JlbWFpbmlu
ZwBnZXRfcGF5bWVudHNyZW1haW5pbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBHZXRTdHJp
bmcAZ2V0X1ZFSElDTEVNb2RlbABzZXRfVmVoaWNsZU1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2Rl
bABTQ183ZmMzNGNiYTYyZDc0MWUxOTdlN2QzMjYwNGU2NGNjNS5kbGwAZ2V0X2FkZHJlc3MxX0lz
TnVsbABzZXRfQWRkcmVzczJfSXNOdWxsAGdldF9hZGRyZXNzMl9Jc051bGwAZ2V0X0FDQ1ROVU1f
SXNOdWxsAGdldF9pbnN1cmVkX0lzTnVsbABzZXRfUGF5bWVudHNNYWRlX0lzTnVsbABnZXRfcGF5
bWVudHNtYWRlX0lzTnVsbABzZXRfQ292ZXJhZ2VfSXNOdWxsAGdldF9jb3ZlcmFnZV9Jc051bGwA
Z2V0X1ZFSElDTEVNYWtlX0lzTnVsbABzZXRfVmVoaWNsZU1ha2VfSXNOdWxsAHNldF9TZWxsZXJO
YW1lX0lzTnVsbABnZXRfYWdlbnRuYW1lX0lzTnVsbABnZXRfY29tcGFueW5hbWVfSXNOdWxsAHNl
dF9TZWxsZXJQaG9uZV9Jc051bGwAZ2V0X3Bob25lX0lzTnVsbABzZXRfQ3JlYXRlRGF0ZV9Jc051
bGwAc2V0X0VmZmVjdGl2ZURhdGVfSXNOdWxsAHNldF9Ob25QYXltZW50Q2FuY2VsRGF0ZV9Jc051
bGwAc2V0X0NvbXBhbnlDYW5jZWxEYXRlX0lzTnVsbABnZXRfY3JlYXRlZGF0ZV9Jc051bGwAZ2V0
X2VmZmRhdGVfSXNOdWxsAGdldF9jYW5jZWxkYXRlX0lzTnVsbABnZXRfY29tcGFueWNhbmNlbGRh
dGVfSXNOdWxsAHNldF9TdGF0ZV9Jc051bGwAZ2V0X3N0YXRlX0lzTnVsbABzZXRfUGF5bWVudHNS
ZW1haW5pbmdfSXNOdWxsAGdldF9wYXltZW50c3JlbWFpbmluZ19Jc051bGwAZ2V0X1ZFSElDTEVN
b2RlbF9Jc051bGwAc2V0X1ZlaGljbGVNb2RlbF9Jc051bGwAc2V0X1BvbGljeU51bV9Jc051bGwA
Z2V0X3BvbGljeW51bV9Jc051bGwAc2V0X1Zpbl9Jc051bGwAc2V0X0FkbWluX0lzTnVsbABnZXRf
dmluX0lzTnVsbABzZXRfRHVwUmVhc29uX0lzTnVsbABzZXRfWmlwX0lzTnVsbABnZXRfemlwX0lz
TnVsbABzZXRfVmVoaWNsZVllYXJfSXNOdWxsAGdldF92ZWhpY2xleWVhcl9Jc051bGwAc2V0X0N1
c3RvbWVyX0lzTnVsbABzZXRfTm90ZXNfSXNOdWxsAHNldF9BZGRyZXNzX0lzTnVsbABzZXRfSW5z
dGFsbG1lbnRzX0lzTnVsbABnZXRfaW5zdGFsbG1lbnRzX0lzTnVsbABzZXRfU3RhdHVzX0lzTnVs
bABnZXRfc3RhdHVzX0lzTnVsbABzZXRfQWNjb3VudF9Jc051bGwAc2V0X0NpdHlfSXNOdWxsAGdl
dF9jaXR5X0lzTnVsbABTZXROdWxsAGdldF9JdGVtAHNldF9JdGVtAFN5c3RlbQBSb3dOdW0Ac2V0
X1BvbGljeU51bQBnZXRfcG9saWN5bnVtAHJlc291cmNlTWFuAHNldF9WaW4AY2hlY2tWaW4Ac2Vu
dFZpbgBTY3JpcHRNYWluAHNldF9BZG1pbgBnZXRfdmluAHVwZGF0ZVJvd0luZm9ybWF0aW9uAFN5
c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9u
AEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24Ac2V0X0R1cFJlYXNvbgBTdHJpbmdDb21wYXJpc29u
AEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAHNldF9aaXAAZ2V0X3ppcABzZXRf
VmVoaWNsZVllYXIAQ2xlYXIAZ2V0X3ZlaGljbGV5ZWFyAElucHV0MEJ1ZmZlcgBPdXRwdXQwQnVm
ZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAHNhbWVT
ZWxsZXIAY2hlY2tTZWxsZXIAZGlmZmVyZW50U2VsbGVyAHNlbnRTZWxsZXIAc2V0X0N1c3RvbWVy
AEdldEVudW1lcmF0b3IALmN0b3IALmNjdG9yAE91dHB1dElEcwBTeXN0ZW0uRGlhZ25vc3RpY3MA
U3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzdmYzM0
Y2JhNjJkNzQxZTE5N2U3ZDMyNjA0ZTY0Y2M1LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNl
cwBEZWJ1Z2dpbmdNb2RlcwBTQ183ZmMzNGNiYTYyZDc0MWUxOTdlN2QzMjYwNGU2NGNjNS5Qcm9w
ZXJ0aWVzAFZhcmlhYmxlcwBzZXRfTm90ZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5J
bmRleGVzAFNldHRpbmdzAEVxdWFscwBDb25uZWN0aW9ucwBCdWZmZXJzAHNldF9BZGRyZXNzAGNo
ZWNrQWRkcmVzcwBkaWZmZXJlbnRBZGRyZXNzAHNlbnRBZGRyZXNzAHNldF9JbnN0YWxsbWVudHMA
Z2V0X2luc3RhbGxtZW50cwBGaW5pc2hPdXRwdXRzAHNldF9TdGF0dXMAZ2V0X3N0YXR1cwBMaXN0
b2ZSb3dzAENyZWF0ZU5ld091dHB1dFJvd3MAQ29uY2F0AE9iamVjdABnZXRfRW5kT2ZSb3dzZXQA
U2V0RW5kT2ZSb3dzZXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQA
U2NyaXB0Q29tcG9uZW50AGdldF9DdXJyZW50AGdldF9Db3VudABzZXRfQWNjb3VudABNaWNyb3Nv
ZnQuU3FsU2VydmVyLlR4U2NyaXB0AFJvd0xpc3QATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGlu
ZUhvc3QASW5wdXQwX1Byb2Nlc3NJbnB1dABpbnB1dABQcmltZU91dHB1dABVcGRhdGVPdXRwdXQA
TW92ZU5leHQAQWRkUm93AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cATmV4dFJvdwByb3cAcm93eABn
ZXRfVG9kYXkAZ2V0X0Fzc2VtYmx5AHNldF9DaXR5AGdldF9jaXR5AG9wX0VxdWFsaXR5AAAAAyAA
ACNEAGkAZgBmAGUAcgBlAG4AdAAgAEEAZABkAHIAZQBzAHMAACFEAGkAZgBmAGUAcgBlAG4AdAAg
AFMAZQBsAGwAZQByAAAXUwBhAG0AZQAgAFMAZQBsAGwAZQByAACAm0kAcwBOAHUAbABsACAAcABy
AG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMA
ZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1
AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAABFPAHUAdABwAHUAdAAgADAA
AHFTAEMAXwA3AGYAYwAzADQAYwBiAGEANgAyAGQANwA0ADEAZQAxADkANwBlADcAZAAzADIANgAw
ADQAZQA2ADQAYwBjADUALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMA
AAEAAACCED8dLoI2Q58BPVAlhqvUAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFlFAcHEigSKBIo
FRE9ARIoEigSKBIoBhUSOQESKAUgARMACAMgAAgFIAEBEwAIIAAVET0BEwAGFRE9ARIoBCAAEwAG
AAMODg4OAyAAAgkgAwESTR0IElEDBhJNAwYdCAQgAQ4IBCABAggEIAEICAUgARFFCAUgAgEIHAcg
AgIOEYCFBSABHQgIAwcBCAYAAggSUQ4IAAESgIkRgI0FIAASgJEHIAIBDhKAkQUAAgIODgMHAQ4E
AAARRQi3elxWGTTgiQiJhF3NgIDMkQcGFRI5ARIoAgYCAgYIAwYSGAMGEhwDBhIQAwYSVQMGEl0D
BhJhAwYSJAIGDgMGEUUFIAEBEgwHIAIBEigSDAYgAgESKA4DIAAOBCAAEUUEIAEBAgUgAQERRQkg
BAEIDhJNElELIAQBCB0IHRJNElEFIAEBElUEAAASXQQAABJhBQABARJhBAAAEiQDAAABBCABAg4D
KAAOAygAAgMoAAgEKAARRQQIABJdBAgAEmEECAASJAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4
Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfN2ZjMzRjYmE2MmQ3NDFlMTk3ZTdkMzI2MDRl
NjRjYzUAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNwAASQEAGi5ORVRGcmFtZXdvcmssVmVy
c2lvbj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUEAQAA
AAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29y
bGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3
YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAA
AAAAAFBBRFBBRFC0AAAAjFYAAAAAAAAAAAAAplYAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJhW
AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAA
AAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADsAwAAAAAAAAAA
AADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEAAAAA
AAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUA
SQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAETAMAAAEAUwB0
AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAwAAAAGgABAAEA
QwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAAAAAA
AHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwA3AGYAYwAzADQA
YwBiAGEANgAyAGQANwA0ADEAZQAxADkANwBlADcAZAAzADIANgAwADQAZQA2ADQAYwBjADUAAAAw
AAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABwACgAAQBJAG4A
dABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADcAZgBjADMANABjAGIAYQA2ADIAZAA3ADQAMQBl
ADEAOQA3AGUANwBkADMAMgA2ADAANABlADYANABjAGMANQAuAGQAbABsAAAASAASAAEATABlAGcA
YQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA3
AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIA
aQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8ANwBmAGMAMwA0AGMAYgBhADYAMgBk
ADcANAAxAGUAMQA5ADcAZQA3AGQAMwAyADYAMAA0AGUANgA0AGMAYwA1AC4AZABsAGwAAABoACQA
AQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADcAZgBjADMANABjAGIAYQA2ADIAZAA3
ADQAMQBlADEAOQA3AGUANwBkADMAMgA2ADAANABlADYANABjAGMANQAAADQACAABAFAAcgBvAGQA
dQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBlAG0AYgBs
AHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAMAAAAuDYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_7fc34cba62d741e197e7d32604e64cc5</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">93</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[vin]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="vin"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[vin]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[ACCT_NUM]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="ACCT_NUM"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[ACCT_NUM]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[status]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="status"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[status]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[insured]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="insured"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[insured]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[address1]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="address1"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[address1]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[address2]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="address2"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[address2]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[city]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="city"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[city]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[state]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="state"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[state]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[zip]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="zip"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[zip]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[vehicle_year]"
                      cachedDataType="i4"
                      cachedName="vehicle_year"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[vehicle_year]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[VEHICLE_Make]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="VEHICLE_Make"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[VEHICLE_Make]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[VEHICLE_Model]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="VEHICLE_Model"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[VEHICLE_Model]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[agent_name]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="agent_name"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[agent_name]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[company_name]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="company_name"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[company_name]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[coverage]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="coverage"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[coverage]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[company_cancel_date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="company_cancel_date"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[company_cancel_date]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[cancel_date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="cancel_date"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[cancel_date]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[eff_date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="eff_date"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[eff_date]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[create_date]"
                      cachedDataType="dbTimeStamp"
                      cachedName="create_date"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[create_date]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[policy_num]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="policy_num"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[policy_num]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[installments]"
                      cachedDataType="i4"
                      cachedName="installments"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[installments]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[payments_made]"
                      cachedDataType="i4"
                      cachedName="payments_made"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[payments_made]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[payments_remaining]"
                      cachedDataType="i4"
                      cachedName="payments_remaining"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[payments_remaining]" />
                    <inputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0].Columns[phone]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="phone"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output].Columns[phone]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0]"
                  hasSideEffects="true"
                  name="Output 0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Account]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Account]"
                      name="Account" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Policy Num]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Policy Num]"
                      name="Policy Num" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Status]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Status]"
                      name="Status" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Customer]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Customer]"
                      name="Customer" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Address]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Address]"
                      name="Address" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Address 2]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Address 2]"
                      name="Address 2" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[City]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[City]"
                      name="City" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[State]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[State]"
                      name="State" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Zip]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Zip]"
                      name="Zip" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Vin]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Vin]"
                      name="Vin" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Seller Name]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Seller Name]"
                      name="Seller Name" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Seller Phone]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Seller Phone]"
                      name="Seller Phone" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Installments]"
                      dataType="i4"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Installments]"
                      name="Installments" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Payments Made]"
                      dataType="i4"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Payments Made]"
                      name="Payments Made" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Payments Remaining]"
                      dataType="i4"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Payments Remaining]"
                      name="Payments Remaining" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Vehicle Year]"
                      dataType="i4"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Vehicle Year]"
                      name="Vehicle Year" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Vehicle Make]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Vehicle Make]"
                      name="Vehicle Make" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Vehicle Model]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Vehicle Model]"
                      name="Vehicle Model" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Admin]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Admin]"
                      name="Admin" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Coverage]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Coverage]"
                      name="Coverage" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Effective Date]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Effective Date]"
                      name="Effective Date" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Create Date]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Create Date]"
                      name="Create Date" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Non Payment Cancel Date]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Non Payment Cancel Date]"
                      name="Non Payment Cancel Date" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Company Cancel Date]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Company Cancel Date]"
                      name="Company Cancel Date" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Notes]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Notes]"
                      name="Notes" />
                    <outputColumn
                      refId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Dup Reason]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0].Columns[Dup Reason]"
                      name="Dup Reason" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Create Group 3 or More Dup Vin Excel.Paths[Different Address]"
              endId="Package\Create Group 3 or More Dup Vin Excel\Different Address File.Inputs[Flat File Destination Input]"
              name="Different Address"
              startId="Package\Create Group 3 or More Dup Vin Excel\Conditional Split.Outputs[Different Address]" />
            <path
              refId="Package\Create Group 3 or More Dup Vin Excel.Paths[Different Seller]"
              endId="Package\Create Group 3 or More Dup Vin Excel\Different Seller file.Inputs[Flat File Destination Input]"
              name="Different Seller"
              startId="Package\Create Group 3 or More Dup Vin Excel\Conditional Split.Outputs[Different Seller]" />
            <path
              refId="Package\Create Group 3 or More Dup Vin Excel.Paths[OLE DB Source Output]"
              endId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Inputs[Input 0]"
              name="OLE DB Source Output"
              startId="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Create Group 3 or More Dup Vin Excel.Paths[Output 0]"
              endId="Package\Create Group 3 or More Dup Vin Excel\Conditional Split.Inputs[Conditional Split Input]"
              name="Output 0"
              startId="Package\Create Group 3 or More Dup Vin Excel\Script Component.Outputs[Output 0]" />
            <path
              refId="Package\Create Group 3 or More Dup Vin Excel.Paths[Same Seller]"
              endId="Package\Create Group 3 or More Dup Vin Excel\Same Seller File.Inputs[Flat File Destination Input]"
              name="Same Seller"
              startId="Package\Create Group 3 or More Dup Vin Excel\Conditional Split.Outputs[Same Seller]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Update Query String"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{C2C9862F-148E-44D0-8439-33FE1170A5ED}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Update Query String"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Update Query String\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="11">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String DupVinQueryTwo
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["Dup_Vin_Query_Two"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["Dup_Vin_Query_Two"].Value = value;
        }
    }

    public String DupVinThreeorMore
    {
        get
        {
            return (String)(ParentComponent.ReadWriteVariables["Dup_Vin_Three_or_More"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
        set
        {
            ParentComponent.ReadWriteVariables["Dup_Vin_Three_or_More"].Value = value;
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    string DupVinQueryfor2;
    string DupVinQueryfor3;
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {

        Variables.DupVinQueryTwo = DupVinQueryfor2;
        Variables.DupVinThreeorMore = DupVinQueryfor3;
        base.PostExecute();
    }

    public override void CreateNewOutputRows()
    {
        DateTime To = DateTime.Today.AddDays(-1);
        DateTime From = DateTime.Today.AddDays(-7);
        DupVinQueryfor2 = "select " +
                                "w3.vin, " +
                                "v2.ACCT_NUM, " +
                                "asd.description as status, " +
                                "v2.insured, " +
                                "v2.address1, " +
                                "v2.address2, " +
                                "v2.city, " +
                                "v2.state, " +
                                "v2.zip, " +
                                "w3.vehicle_year, " +
                                "w3.VEHICLE_Make, " +
                                "w3.VEHICLE_Model, " +
                                "v2.agent_name, " +
                                "p2.company_name, " +
                                "p2.coverage, " +
                                "p2.company_cancel_date, " +
                                "c2.cancel_date, " +
                                "p2.eff_date, " +
                                "v2.create_date, " +
                                "p2.policy_num, " +
                                "c2.installments, " +
                                "c2.payments_made, " +
                                "c2.payments_remaining, " +
                                "a2.phone " +

                                "from(" +

                                "select distinct x.vin from(" +
                                "select w.vin, count(*) as total " +
                                "from a_ascii_war w with(noexpand) " +
                                "Inner join a_ascii_vit v with(noexpand) on w.acct_num = v.acct_num " +
                                "INNER JOIN Account_Status[as] with(nolock) on w.acct_num = [as].acct_num " +
                                "where " +
                                "[As].status_id in(1, 2, 3) and v.create_date <= \'" + To.Month + "/" + To.Day + "/" + To.Year + "\' " +
                                "group by  W.VIN " +
                                "having count(vin) = 2) as x " +
                                "inner join a_ascii_war w2 on w2.vin = x.vin " +
                                "inner join a_ascii_vit with(noexpand)on a_ascii_vit.acct_num = w2.acct_num " +
                                "where " +
                                "a_ascii_vit.create_date between \'" + From.Month + "/" + From.Day + "/" + From.Year + "\' and \'" +
                                    To.Month + "/" + To.Day + "/" + To.Year + "\') as y " +
                                "inner join a_ascii_war w3 with(noexpand) on w3.vin = y.vin " +
                                "inner join a_ascii_vit v2 with(noexpand) on v2.acct_num = w3.acct_num " +
                                "inner join a_ascii_con c2 with(noexpand) on c2.acct_num = w3.acct_num " +
                                "inner join a_ascii_pol p2 with(noexpand) on p2.acct_num = w3.acct_num " +
                                "inner join ascii_agt a2 with(nolock) on v2.business = a2.business and v2.agent_code = a2.code " +
                                "INNER JOIN Account_Status sts with(nolock) on v2.acct_num = sts.acct_num " +
                                "inner join AccountStatusDescription asd with(nolock) ON sts.Status_ID = asd.ID " +
                                "where sts.status_id not in(5,7) and create_date<= \'" + To.Month + "/" + To.Day + "/" + To.Year + "\' " +

                                "order by w3.vin";

        DupVinQueryfor3 = "select " +
                                "w3.vin, " +
                                "v2.ACCT_NUM, " +
                                "asd.description as status, " +
                                "v2.insured, " +
                                "v2.address1, " +
                                "v2.address2, " +
                                "v2.city, " +
                                "v2.state, " +
                                "v2.zip, " +
                                "w3.vehicle_year, " +
                                "w3.VEHICLE_Make, " +
                                "w3.VEHICLE_Model, " +
                                "v2.agent_name, " +
                                "p2.company_name, " +
                                "p2.coverage, " +
                                "p2.company_cancel_date, " +
                                "c2.cancel_date, " +
                                "p2.eff_date, " +
                                "v2.create_date, " +
                                "p2.policy_num, " +
                                "c2.installments, " +
                                "c2.payments_made, " +
                                "c2.payments_remaining, " +
                                "a2.phone " +

                                "from(" +

                                "select distinct x.vin from(" +
                                "select w.vin, count(*) as total " +
                                "from a_ascii_war w with(noexpand) " +
                                "Inner join a_ascii_vit v with(noexpand) on w.acct_num = v.acct_num " +
                                "INNER JOIN Account_Status[as] with(nolock) on w.acct_num = [as].acct_num " +
                                "where " +
                                "[As].status_id in(1, 2, 3) and v.create_date <= \'" + To.Month + "/" + To.Day + "/" + To.Year + "\' " +
                                "group by  W.VIN " +
                                "having count(vin) > 2) as x " +
                                "inner join a_ascii_war w2 on w2.vin = x.vin " +
                                "inner join a_ascii_vit with(noexpand)on a_ascii_vit.acct_num = w2.acct_num " +
                                "where " +
                                "a_ascii_vit.create_date between \'" + From.Month + "/" + From.Day + "/" + From.Year + "\' and \'" +
                                    To.Month + "/" + To.Day + "/" + To.Year + "\') as y " +
                                "inner join a_ascii_war w3 with(noexpand) on w3.vin = y.vin " +
                                "inner join a_ascii_vit v2 with(noexpand) on v2.acct_num = w3.acct_num " +
                                "inner join a_ascii_con c2 with(noexpand) on c2.acct_num = w3.acct_num " +
                                "inner join a_ascii_pol p2 with(noexpand) on p2.acct_num = w3.acct_num " +
                                "inner join ascii_agt a2 with(nolock) on v2.business = a2.business and v2.agent_code = a2.code " +
                                "INNER JOIN Account_Status sts with(nolock) on v2.acct_num = sts.acct_num " +
                                "inner join AccountStatusDescription asd with(nolock) ON sts.Status_ID = asd.ID " +
                                "where sts.status_id not in(5,7) and create_date<= \'" + To.Month + "/" + To.Day + "/" + To.Year + "\' " +

                                "order by w3.vin";
        Output0Buffer.AddRow();
        Output0Buffer.Dup2 = DupVinQueryfor2;
        Output0Buffer.Dup3 = DupVinQueryfor3;

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Dup3
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Dup3_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Dup2
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Dup2_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0bf4270fd3de413ca8f203f190e24858.Properties.Settings.get_Default():SC_0bf4270fd3de413ca8f203f190e24858.Properties.Sett" +
    "ings")]

namespace SC_0bf4270fd3de413ca8f203f190e24858.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0bf4270fd3de413ca8f203f190e24858.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0bf4270fd3de413ca8f203f190e24858.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0bf4270fd3de413ca8f203f190e24858.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_0bf4270fd3de413ca8f203f190e24858.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_0bf4270fd3de413ca8f203f190e24858.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_0bf4270fd3de413ca8f203f190e24858</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_0bf4270fd3de413ca8f203f190e24858</msb:DisplayName>
		<msb:ProjectId>{99409590-235E-4BA4-A6AA-98D2F774A33B}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_0bf4270fd3de413ca8f203f190e24858.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_0bf4270fd3de413ca8f203f190e24858")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_0bf4270fd3de413ca8f203f190e24858")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_0bf4270fd3de413ca8f203f190e24858.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{e78393b2-1b89-4098-a885-56f45fe655ee}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_0bf4270fd3de413ca8f203f190e24858</RootNamespace>
    <AssemblyName>SC_0bf4270fd3de413ca8f203f190e24858</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_0bf4270fd3de413ca8f203f190e24858" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_0bf4270fd3de413ca8f203f190e24858.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAPa55FkAAAAAAAAAAOAAIiALATAAACYAAAAIAAAAAAAAhkUA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADRFAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAjCUAAAAgAAAAJgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAoAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAALgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABo
RQAAAAAAAEgAAAACAAUAbCUAABAfAAABAAAAAAAAAHxEAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqpgJ7BAAABAJ7AQAABG8VAAAGAnsEAAAEAnsC
AAAEbxcAAAYCKBEAAAoqAAATMAUA2AIAAAEAABEoEgAACgwSAiMAAAAAAADwvygTAAAKCigSAAAK
DBICIwAAAAAAABzAKBMAAAoLAh8ZjRMAAAElFnIBAABwoiUXEgAoFAAACowbAAABoiUYci4FAHCi
JRkSACgVAAAKjBsAAAGiJRpyLgUAcKIlGxIAKBYAAAqMGwAAAaIlHHIyBQBwoiUdEgEoFAAACowb
AAABoiUeci4FAHCiJR8JEgEoFQAACowbAAABoiUfCnIuBQBwoiUfCxIBKBYAAAqMGwAAAaIlHwxy
zQYAcKIlHw0SACgUAAAKjBsAAAGiJR8Oci4FAHCiJR8PEgAoFQAACowbAAABoiUfEHIuBQBwoiUf
ERIAKBYAAAqMGwAAAaIlHxJy3QYAcKIlHxMSACgUAAAKjBsAAAGiJR8Uci4FAHCiJR8VEgAoFQAA
CowbAAABoiUfFnIuBQBwoiUfFxIAKBYAAAqMGwAAAaIlHxhyXAsAcKIoFwAACn0BAAAEAh8ZjRMA
AAElFnIBAABwoiUXEgAoFAAACowbAAABoiUYci4FAHCiJRkSACgVAAAKjBsAAAGiJRpyLgUAcKIl
GxIAKBYAAAqMGwAAAaIlHHKACwBwoiUdEgEoFAAACowbAAABoiUeci4FAHCiJR8JEgEoFQAACowb
AAABoiUfCnIuBQBwoiUfCxIBKBYAAAqMGwAAAaIlHwxyzQYAcKIlHw0SACgUAAAKjBsAAAGiJR8O
ci4FAHCiJR8PEgAoFQAACowbAAABoiUfEHIuBQBwoiUfERIAKBYAAAqMGwAAAaIlHxJy3QYAcKIl
HxMSACgUAAAKjBsAAAGiJR8Uci4FAHCiJR8VEgAoFQAACowbAAABoiUfFnIuBQBwoiUfFxIAKBYA
AAqMGwAAAaIlHxhyXAsAcKIoFwAACn0CAAAEAnsFAAAEbwoAAAYCewUAAAQCewEAAARvCAAABgJ7
BQAABAJ7AgAABG8GAAAGKh4CKA0AAAYqKgIDBAUoGAAACiomAhYDKBkAAAoqWgMsCAIWKBoAAAoq
chsNAHBzGwAACnomAhcDKBkAAAoqWgMsCAIXKBoAAAoqchsNAHBzGwAACnoeAigcAAAKKh4CKB0A
AAoqHgIoHgAACip+AigfAAAKAgJzEgAABn0DAAAEAgJzEwAABn0EAAAEKgYqbgJ7BQAABCwSAnsF
AAAEbwsAAAYCFH0FAAAEKgATMAUASQAAAAIAABEWCisuBAaUDgRyuA0AcCggAAAKMxkCBQaaAgQG
lCghAAAKDgRzBQAABn0FAAAEBhdYCgYDMs4CbxEAAAYCbw4AAAYCKA8AAAYqOgIoIgAACgIDfQYA
AAQqOgIoIgAACgIDfQcAAAQqlgJ7BwAABG8jAAAKcsoNAHBvJAAACiglAAAKbyYAAAp0HAAAASpy
AnsHAAAEbyMAAApyyg0AcG8kAAAKA28nAAAKKpYCewcAAARvIwAACnLuDQBwbyQAAAooJQAACm8m
AAAKdBwAAAEqcgJ7BwAABG8jAAAKcu4NAHBvJAAACgNvJwAACioeAigiAAAKKq5+CAAABC0echoO
AHDQBwAAAigoAAAKbykAAApzKgAACoAIAAAEfggAAAQqGn4JAAAEKh4CgAkAAAQqGn4KAAAEKh4C
KCsAAAoqLnMdAAAGgAoAAAQqAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAGQG
AAAjfgAA0AYAANAHAAAjU3RyaW5ncwAAAACgDgAAjA4AACNVUwAsHQAAEAAAACNHVUlEAAAAPB0A
ANQBAAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA+gEzABYAAAEAAAAkAAAACAAAAAoAAAAeAAAA
EAAAACsAAAAQAAAAAgAAAAQAAAAJAAAADAAAAAEAAAAFAAAAAQAAAAAAsgMBAAAAAAAGAJgCjgUG
ACwDjgUGAOQBewUPAAIGAAAGABECXAQGAHsCXAQGAFwCXAQGABMDXAQGALgCXAQGANECXAQGACgC
XAQGAEMCcQMKAOwCBQEGAPwAFAQKABsFBQEOAAwFBQEKALoEBQEKAAoHBQEGAMoGFAQGAMcBewUG
ACwFrgUGAIgERwQSAJcBnAMSAPgBnAMSAH8BMgQGAKwBjgUGADoAFAQGAIsDFAQGAG4EFAQWABEA
PAUWAAEAPAVLAHgHAAAWACIAPAUGACYBFAQGANgAFAQGAMUHXAQAAAAAlgAAAAAAAQABAAEAEAAn
BAAAEAABAAEAAQAQAP4EAAA9AAMABQABABAA7AYAAEkAAwANAAEAEACFBgAATQAGABIAAQAQAE0G
AABNAAcAEwAAABAAtQURBk0ACAAYAAABEAB8BhEGZQAKABwAAQBJAKQAAQBiAKQABgCFBqcABgBN
BqsABgD+BK8AAQD6BrMAAQD6BrMAEQAbBLcAEQBvAbsAEQDIAL8AUCAAAAAAxgBKAwYAAQBYIAAA
AADGAFUDBgABAIQgAAAAAMYApwYGAAEAaCMAAAAAhhhkBQYAAQBwIwAAAACGGGQFOQABAHsjAAAA
AIYIWQAQAAQAhSMAAAAAhgjqA8MABQCcIwAAAACGCEAAEAAGAKYjAAAAAIYI2gPDAAcAvSMAAAAA
hgCoBwYACADFIwAAAACGANEGBgAIAM0jAAAAAIYA1AZJAAgA1SMAAAAAhhhkBQYACAD1IwAAAADG
AZkGBgAIAPcjAAAAAIEAtAAGAAgAFCQAAAAAxgBYB8gACAD1IwAAAADGAacGBgAMAGkkAAAAAIYY
ZAXUAAwAeCQAAAAAhhhkBdQADQCHJAAAAACGCJQE2gAOAK0kAAAAAIYIpwQQAA4AyiQAAAAAhggr
AdoADwDwJAAAAACGCEEBEAAPAA0lAAAAAIMYZAUGABAAFSUAAAAAkwgoBd4AEABBJQAAAACTCFcB
4wAQAEglAAAAAJMIYwHoABAAUCUAAAAAlgjgBu4AEQBXJQAAAACGGGQFBgARAF8lAAAAAJEYagXz
ABEAAAABACEFAAACAFcGAAADAMgEAAABAGsDAAABAGsDAAABAGsDAAABAGsDAAABAJ8GAAACAHEF
AAADAJEGAAAEAMgEAAABABAHAAABABAHAAABAGsDAAABAGsDAAABAGsDCQBkBQEAEQBkBQYAGQBk
BQoAKQBkBRAAMQBkBRAAOQBkBRAAQQBkBRAASQBkBRAAUQBkBRAAWQBkBRAAYQBkBRAAaQBkBQYA
oQBkBQYAwQBkBRUA0QBkBQYAkQBKAwYAkQBVAwYAcQC3ByQAcQC7BikAcQCSAy8AcQCvBy8AcQD1
BC8A4QDDBjMAeQBkBTkAeQALBEMAeQD6AwEA6QBkBRAAeQCoBwYAeQDRBgYAeQDUBkkAkQBkBQYA
kQCfAFEAkQBrBlgAmQBkBQYAkQBABl4A8QACBGMAkQCTB2kA+QBkB28A+QBhA3YAEQHqAHsAEQHB
B4QAqQBkBYoAyQBkBQYALgALAA4BLgATABcBLgAbADYBLgAjAD8BLgArAGgBLgAzAGgBLgA7AGgB
LgBDAD8BLgBLAG4BLgBTAGgBLgBbAIUBQwBjAM8B4wBrAM8B6QBzADYBCQFzADYBQQF7AM8BGwBN
AAMAAQAGAAUABwAHAAgACQAAAF0A9wAAAO4D+wAAAEQA9wAAAN4D+wAAAKsE9wAAAEUB9wAAACwF
/wAAAHcBBAEAAOQGCQEBAAYAAwABAAcABQABAAgABwABAAkACQACABQACwABABUACwACABYADQAB
ABcADQACABkADwACABoAEQABABsAEQACABwAEwAEgAAAAQAAAAAAAAAAAAAAAAByAAAABAAAAAAA
AAAAAAAAkgCrAAAAAAAOAAAAAAAAAAAAAACbABoHAAAAAA4AAAAAAAAAAAAAAJsANwcAAAAABAAA
AAAAAAAAAAAAkgAUBAAAAAAOAAAAAAAAAAAAAACbANIEAAAAAAAAAAABAAAAvwUAAAAAAAAASURU
U1ZhcmlhYmxlMTAwAElEVFNWYXJpYWJsZXMxMDAASURUU0V2YWx1YXRvckNvbnRleHQxMDAASW50
MzIAc2V0X0R1cDIARHVwVmluUXVlcnlmb3IyAHNldF9EdXAzAER1cFZpblF1ZXJ5Zm9yMwBTQ18w
YmY0MjcwZmQzZGU0MTNjYThmMjAzZjE5MGUyNDg1OAA8TW9kdWxlPgBHZXRPdXRwdXRJRABtc2Nv
cmxpYgBNYXJrT3V0cHV0c0ZpbmlzaGVkAGRlZmF1bHRJbnN0YW5jZQBSdW50aW1lVHlwZUhhbmRs
ZQBHZXRUeXBlRnJvbUhhbmRsZQBEYXRlVGltZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBl
bGluZQBUeXBlAGdldF9EdXBWaW5UaHJlZW9yTW9yZQBzZXRfRHVwVmluVGhyZWVvck1vcmUAZ2V0
X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NC
YXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVn
Z2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2Fi
bGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJp
YnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmli
dXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0
dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1
dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55
QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4
ZWN1dGUAc2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAU3RyaW5nAGdl
dF9Nb250aABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfMGJmNDI3MGZkM2RlNDEzY2E4ZjIwM2Yx
OTBlMjQ4NTguZGxsAHNldF9EdXAyX0lzTnVsbABzZXRfRHVwM19Jc051bGwAU2V0TnVsbABnZXRf
SXRlbQBzZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmln
dXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZhbGlkT3Bl
cmF0aW9uRXhjZXB0aW9uAEN1bHR1cmVJbmZvAGdldF9EdXBWaW5RdWVyeVR3bwBzZXRfRHVwVmlu
UXVlcnlUd28AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNS
dW50aW1lV3JhcABnZXRfWWVhcgBPdXRwdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1
ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUu
V3JhcHBlcgAuY3RvcgAuY2N0b3IAT3V0cHV0SURzAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0u
UnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfMGJmNDI3MGZkM2Rl
NDEzY2E4ZjIwM2YxOTBlMjQ4NTguUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVn
Z2luZ01vZGVzAFNDXzBiZjQyNzBmZDNkZTQxM2NhOGYyMDNmMTkwZTI0ODU4LlByb3BlcnRpZXMA
Z2V0X1JlYWRXcml0ZVZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4
ZXMAU2V0dGluZ3MAQ29ubmVjdGlvbnMAQnVmZmVycwBGaW5pc2hPdXRwdXRzAENyZWF0ZU5ld091
dHB1dFJvd3MAQWRkRGF5cwBDb25jYXQAT2JqZWN0AFNldEVuZE9mUm93c2V0AGdldF9EZWZhdWx0
AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQu
U3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AFByaW1l
T3V0cHV0AEdldFZhbHVlV2l0aENvbnRleHQAU2NyaXB0Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0
X0V2YWx1YXRvckNvbnRleHQAQWRkUm93AGdldF9EYXkAZ2V0X1RvZGF5AGdldF9Bc3NlbWJseQAA
AACFK3MAZQBsAGUAYwB0ACAAdwAzAC4AdgBpAG4ALAAgAHYAMgAuAEEAQwBDAFQAXwBOAFUATQAs
ACAAYQBzAGQALgBkAGUAcwBjAHIAaQBwAHQAaQBvAG4AIABhAHMAIABzAHQAYQB0AHUAcwAsACAA
dgAyAC4AaQBuAHMAdQByAGUAZAAsACAAdgAyAC4AYQBkAGQAcgBlAHMAcwAxACwAIAB2ADIALgBh
AGQAZAByAGUAcwBzADIALAAgAHYAMgAuAGMAaQB0AHkALAAgAHYAMgAuAHMAdABhAHQAZQAsACAA
dgAyAC4AegBpAHAALAAgAHcAMwAuAHYAZQBoAGkAYwBsAGUAXwB5AGUAYQByACwAIAB3ADMALgBW
AEUASABJAEMATABFAF8ATQBhAGsAZQAsACAAdwAzAC4AVgBFAEgASQBDAEwARQBfAE0AbwBkAGUA
bAAsACAAdgAyAC4AYQBnAGUAbgB0AF8AbgBhAG0AZQAsACAAcAAyAC4AYwBvAG0AcABhAG4AeQBf
AG4AYQBtAGUALAAgAHAAMgAuAGMAbwB2AGUAcgBhAGcAZQAsACAAcAAyAC4AYwBvAG0AcABhAG4A
eQBfAGMAYQBuAGMAZQBsAF8AZABhAHQAZQAsACAAYwAyAC4AYwBhAG4AYwBlAGwAXwBkAGEAdABl
ACwAIABwADIALgBlAGYAZgBfAGQAYQB0AGUALAAgAHYAMgAuAGMAcgBlAGEAdABlAF8AZABhAHQA
ZQAsACAAcAAyAC4AcABvAGwAaQBjAHkAXwBuAHUAbQAsACAAYwAyAC4AaQBuAHMAdABhAGwAbABt
AGUAbgB0AHMALAAgAGMAMgAuAHAAYQB5AG0AZQBuAHQAcwBfAG0AYQBkAGUALAAgAGMAMgAuAHAA
YQB5AG0AZQBuAHQAcwBfAHIAZQBtAGEAaQBuAGkAbgBnACwAIABhADIALgBwAGgAbwBuAGUAIABm
AHIAbwBtACgAcwBlAGwAZQBjAHQAIABkAGkAcwB0AGkAbgBjAHQAIAB4AC4AdgBpAG4AIABmAHIA
bwBtACgAcwBlAGwAZQBjAHQAIAB3AC4AdgBpAG4ALAAgAGMAbwB1AG4AdAAoACoAKQAgAGEAcwAg
AHQAbwB0AGEAbAAgAGYAcgBvAG0AIABhAF8AYQBzAGMAaQBpAF8AdwBhAHIAIAB3ACAAdwBpAHQA
aAAoAG4AbwBlAHgAcABhAG4AZAApACAASQBuAG4AZQByACAAagBvAGkAbgAgAGEAXwBhAHMAYwBp
AGkAXwB2AGkAdAAgAHYAIAB3AGkAdABoACgAbgBvAGUAeABwAGEAbgBkACkAIABvAG4AIAB3AC4A
YQBjAGMAdABfAG4AdQBtACAAPQAgAHYALgBhAGMAYwB0AF8AbgB1AG0AIABJAE4ATgBFAFIAIABK
AE8ASQBOACAAQQBjAGMAbwB1AG4AdABfAFMAdABhAHQAdQBzAFsAYQBzAF0AIAB3AGkAdABoACgA
bgBvAGwAbwBjAGsAKQAgAG8AbgAgAHcALgBhAGMAYwB0AF8AbgB1AG0AIAA9ACAAWwBhAHMAXQAu
AGEAYwBjAHQAXwBuAHUAbQAgAHcAaABlAHIAZQAgAFsAQQBzAF0ALgBzAHQAYQB0AHUAcwBfAGkA
ZAAgAGkAbgAoADEALAAgADIALAAgADMAKQAgAGEAbgBkACAAdgAuAGMAcgBlAGEAdABlAF8AZABh
AHQAZQAgADwAPQAgACcAAQMvAACBmScAIABnAHIAbwB1AHAAIABiAHkAIAAgAFcALgBWAEkATgAg
AGgAYQB2AGkAbgBnACAAYwBvAHUAbgB0ACgAdgBpAG4AKQAgAD0AIAAyACkAIABhAHMAIAB4ACAA
aQBuAG4AZQByACAAagBvAGkAbgAgAGEAXwBhAHMAYwBpAGkAXwB3AGEAcgAgAHcAMgAgAG8AbgAg
AHcAMgAuAHYAaQBuACAAPQAgAHgALgB2AGkAbgAgAGkAbgBuAGUAcgAgAGoAbwBpAG4AIABhAF8A
YQBzAGMAaQBpAF8AdgBpAHQAIAB3AGkAdABoACgAbgBvAGUAeABwAGEAbgBkACkAbwBuACAAYQBf
AGEAcwBjAGkAaQBfAHYAaQB0AC4AYQBjAGMAdABfAG4AdQBtACAAPQAgAHcAMgAuAGEAYwBjAHQA
XwBuAHUAbQAgAHcAaABlAHIAZQAgAGEAXwBhAHMAYwBpAGkAXwB2AGkAdAAuAGMAcgBlAGEAdABl
AF8AZABhAHQAZQAgAGIAZQB0AHcAZQBlAG4AIAAnAAEPJwAgAGEAbgBkACAAJwABhH0nACkAIABh
AHMAIAB5ACAAaQBuAG4AZQByACAAagBvAGkAbgAgAGEAXwBhAHMAYwBpAGkAXwB3AGEAcgAgAHcA
MwAgAHcAaQB0AGgAKABuAG8AZQB4AHAAYQBuAGQAKQAgAG8AbgAgAHcAMwAuAHYAaQBuACAAPQAg
AHkALgB2AGkAbgAgAGkAbgBuAGUAcgAgAGoAbwBpAG4AIABhAF8AYQBzAGMAaQBpAF8AdgBpAHQA
IAB2ADIAIAB3AGkAdABoACgAbgBvAGUAeABwAGEAbgBkACkAIABvAG4AIAB2ADIALgBhAGMAYwB0
AF8AbgB1AG0AIAA9ACAAdwAzAC4AYQBjAGMAdABfAG4AdQBtACAAaQBuAG4AZQByACAAagBvAGkA
bgAgAGEAXwBhAHMAYwBpAGkAXwBjAG8AbgAgAGMAMgAgAHcAaQB0AGgAKABuAG8AZQB4AHAAYQBu
AGQAKQAgAG8AbgAgAGMAMgAuAGEAYwBjAHQAXwBuAHUAbQAgAD0AIAB3ADMALgBhAGMAYwB0AF8A
bgB1AG0AIABpAG4AbgBlAHIAIABqAG8AaQBuACAAYQBfAGEAcwBjAGkAaQBfAHAAbwBsACAAcAAy
ACAAdwBpAHQAaAAoAG4AbwBlAHgAcABhAG4AZAApACAAbwBuACAAcAAyAC4AYQBjAGMAdABfAG4A
dQBtACAAPQAgAHcAMwAuAGEAYwBjAHQAXwBuAHUAbQAgAGkAbgBuAGUAcgAgAGoAbwBpAG4AIABh
AHMAYwBpAGkAXwBhAGcAdAAgAGEAMgAgAHcAaQB0AGgAKABuAG8AbABvAGMAawApACAAbwBuACAA
dgAyAC4AYgB1AHMAaQBuAGUAcwBzACAAPQAgAGEAMgAuAGIAdQBzAGkAbgBlAHMAcwAgAGEAbgBk
ACAAdgAyAC4AYQBnAGUAbgB0AF8AYwBvAGQAZQAgAD0AIABhADIALgBjAG8AZABlACAASQBOAE4A
RQBSACAASgBPAEkATgAgAEEAYwBjAG8AdQBuAHQAXwBTAHQAYQB0AHUAcwAgAHMAdABzACAAdwBp
AHQAaAAoAG4AbwBsAG8AYwBrACkAIABvAG4AIAB2ADIALgBhAGMAYwB0AF8AbgB1AG0AIAA9ACAA
cwB0AHMALgBhAGMAYwB0AF8AbgB1AG0AIABpAG4AbgBlAHIAIABqAG8AaQBuACAAQQBjAGMAbwB1
AG4AdABTAHQAYQB0AHUAcwBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AIABhAHMAZAAgAHcAaQB0AGgA
KABuAG8AbABvAGMAawApACAATwBOACAAcwB0AHMALgBTAHQAYQB0AHUAcwBfAEkARAAgAD0AIABh
AHMAZAAuAEkARAAgAHcAaABlAHIAZQAgAHMAdABzAC4AcwB0AGEAdAB1AHMAXwBpAGQAIABuAG8A
dAAgAGkAbgAoADUALAA3ACkAIABhAG4AZAAgAGMAcgBlAGEAdABlAF8AZABhAHQAZQA8AD0AIAAn
AAEjJwAgAG8AcgBkAGUAcgAgAGIAeQAgAHcAMwAuAHYAaQBuAAGBmScAIABnAHIAbwB1AHAAIABi
AHkAIAAgAFcALgBWAEkATgAgAGgAYQB2AGkAbgBnACAAYwBvAHUAbgB0ACgAdgBpAG4AKQAgAD4A
IAAyACkAIABhAHMAIAB4ACAAaQBuAG4AZQByACAAagBvAGkAbgAgAGEAXwBhAHMAYwBpAGkAXwB3
AGEAcgAgAHcAMgAgAG8AbgAgAHcAMgAuAHYAaQBuACAAPQAgAHgALgB2AGkAbgAgAGkAbgBuAGUA
cgAgAGoAbwBpAG4AIABhAF8AYQBzAGMAaQBpAF8AdgBpAHQAIAB3AGkAdABoACgAbgBvAGUAeABw
AGEAbgBkACkAbwBuACAAYQBfAGEAcwBjAGkAaQBfAHYAaQB0AC4AYQBjAGMAdABfAG4AdQBtACAA
PQAgAHcAMgAuAGEAYwBjAHQAXwBuAHUAbQAgAHcAaABlAHIAZQAgAGEAXwBhAHMAYwBpAGkAXwB2
AGkAdAAuAGMAcgBlAGEAdABlAF8AZABhAHQAZQAgAGIAZQB0AHcAZQBlAG4AIAAnAAGAm0kAcwBO
AHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQA
bwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABo
AGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAEU8AdQB0AHAAdQB0ACAAMAAAI0QA
dQBwAF8AVgBpAG4AXwBRAHUAZQByAHkAXwBUAHcAbwAAK0QAdQBwAF8AVgBpAG4AXwBUAGgAcgBl
AGUAXwBvAHIAXwBNAG8AcgBlAABxUwBDAF8AMABiAGYANAAyADcAMABmAGQAMwBkAGUANAAxADMA
YwBhADgAZgAyADAAMwBmADEAOQAwAGUAMgA0ADgANQA4AC4AUAByAG8AcABlAHIAdABpAGUAcwAu
AFIAZQBzAG8AdQByAGMAZQBzAABF3cH0L1BqRLYMnAW7j48nAAQgAQEIAyAAAQUgAQEREQQgAQEO
BSABARFdCAcDETkRORE5BAAAETkFIAEROQ0DIAAIBQABDh0cCSADARJBHQgSRQUgAgEIHAMgAAID
BwEIBgACCBJFDgUgAR0ICAQgABJ5BSABEn0cBQAAEoCBBiABHBKAhQQgAQEcCAABEoCJEYCNBSAA
EoCRByACAQ4SgJEIt3pcVhk04IkIiYRdzYCAzJECBg4DBhIUAwYSGAMGEgwDBhJJAwYSVQMGElkD
BhIgBCABAQILIAQBCB0IHRJBEkUFIAEBEkkDIAAOBAAAElUEAAASWQUAAQESWQQAABIgAwAAAQMo
AA4DKAACBAgAElUECAASWQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhy
b3dzAQgBAAIAAAAAACgBACNTQ18wYmY0MjcwZmQzZGU0MTNjYThmMjAzZjE5MGUyNDg1OAAABQEA
AAAAFgEAEUNvcHlyaWdodCBAICAyMDE3AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUB
AFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNQQBAAAAtAAAAM7K774B
AAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lv
bj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUw
ODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQ
tAAAAFxFAAAAAAAAAAAAAHZFAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAABoRQAAAAAAAAAAAAAA
AF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADs
AwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
TAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAw
AAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0A
ZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwAw
AGIAZgA0ADIANwAwAGYAZAAzAGQAZQA0ADEAMwBjAGEAOABmADIAMAAzAGYAMQA5ADAAZQAyADQA
OAA1ADgAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABw
ACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADAAYgBmADQAMgA3ADAAZgBkADMA
ZABlADQAMQAzAGMAYQA4AGYAMgAwADMAZgAxADkAMABlADIANAA4ADUAOAAuAGQAbABsAAAASAAS
AAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAA
IAAyADAAMQA3AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4
ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AMABiAGYANAAyADcA
MABmAGQAMwBkAGUANAAxADMAYwBhADgAZgAyADAAMwBmADEAOQAwAGUAMgA0ADgANQA4AC4AZABs
AGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADAAYgBmADQAMgA3ADAA
ZgBkADMAZABlADQAMQAzAGMAYQA4AGYAMgAwADMAZgAxADkAMABlADIANAA4ADUAOAAAADQACAAB
AFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMA
cwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAiDUAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_0bf4270fd3de413ca8f203f190e24858</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg">User::Dup_Vin_Query_Two,User::Dup_Vin_Three_or_More</property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">63</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <outputs>
                <output
                  refId="Package\Update Query String\Script Component.Outputs[Output 0]"
                  hasSideEffects="true"
                  name="Output 0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Update Query String\Script Component.Outputs[Output 0].Columns[Dup 3]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Update Query String\Script Component.Outputs[Output 0].Columns[Dup 3]"
                      name="Dup 3" />
                    <outputColumn
                      refId="Package\Update Query String\Script Component.Outputs[Output 0].Columns[Dup 2]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Update Query String\Script Component.Outputs[Output 0].Columns[Dup 2]"
                      name="Dup 2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{9A9ADB9A-1A63-4F0C-8969-B85AA7125C88}"
      DTS:From="Package\Update Query String"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Create Group 2 Dup Vin Excel" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{7735FFD3-DEDF-40F3-880E-0C38094BB6C6}"
      DTS:From="Package\Create Group 2 Dup Vin Excel"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Create Group 3 or More Dup Vin Excel" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="219,42"
          Id="Package\Create Group 2 Dup Vin Excel"
          TopLeft="193.166662730277,123.099997745156" />
        <NodeLayout
          Size="259,42"
          Id="Package\Create Group 3 or More Dup Vin Excel"
          TopLeft="226,191" />
        <NodeLayout
          Size="176,42"
          Id="Package\Update Query String"
          TopLeft="162.166664332151,55.0333324654897" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="250.166664332151,97.0333324654897">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="52.4999983981261,26.0666652796663"
              Start="0,0"
              End="52.4999983981261,18.5666652796663">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.03333263983315" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.03333263983315"
                    Point2="0,13.0333326398331"
                    Point3="4,13.0333326398331" />
                  <mssgle:LineSegment
                    End="48.4999983981261,13.0333326398331" />
                  <mssgle:CubicBezierSegment
                    Point1="48.4999983981261,13.0333326398331"
                    Point2="52.4999983981261,13.0333326398331"
                    Point3="52.4999983981261,17.0333326398331" />
                  <mssgle:LineSegment
                    End="52.4999983981261,18.5666652796663" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="302.666662730277,165.099997745156">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="52.833337269723,25.900002254844"
              Start="0,0"
              End="52.833337269723,18.400002254844">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,8.950001127422" />
                  <mssgle:CubicBezierSegment
                    Point1="0,8.950001127422"
                    Point2="0,12.950001127422"
                    Point3="4,12.950001127422" />
                  <mssgle:LineSegment
                    End="48.833337269723,12.950001127422" />
                  <mssgle:CubicBezierSegment
                    Point1="48.833337269723,12.950001127422"
                    Point2="52.833337269723,12.950001127422"
                    Point3="52.833337269723,16.950001127422" />
                  <mssgle:LineSegment
                    End="52.833337269723,18.400002254844" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Create Group 2 Dup Vin Excel">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="155,43"
          Id="Package\Create Group 2 Dup Vin Excel\Same Seller File"
          TopLeft="96.4206334689544,249.617454995646" />
        <NodeLayout
          Size="225,42"
          Id="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two"
          TopLeft="251.499996833503,20.2333324887355" />
        <NodeLayout
          Size="169,43"
          Id="Package\Create Group 2 Dup Vin Excel\Different Seller File"
          TopLeft="280.726186054626,250.111106137246" />
        <NodeLayout
          Size="163,42"
          Id="Package\Create Group 2 Dup Vin Excel\Script Component"
          TopLeft="279,88" />
        <NodeLayout
          Size="161,43"
          Id="Package\Create Group 2 Dup Vin Excel\Different Address"
          TopLeft="477.499992363155,249.722216862771" />
        <NodeLayout
          Size="155,42"
          Id="Package\Create Group 2 Dup Vin Excel\Conditional Split"
          TopLeft="283,158" />
        <EdgeLayout
          Id="Package\Create Group 2 Dup Vin Excel.Paths[Same Seller]"
          TopLeft="323.75,200">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-149.829366531046,49.617454995646"
              Start="0,0"
              End="-149.829366531046,42.117454995646">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.0986155693241" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.0986155693241"
                    Point2="0,17.0986155693241"
                    Point3="-4,17.0986155693241" />
                  <mssgle:LineSegment
                    End="-145.829366531046,17.0986155693241" />
                  <mssgle:CubicBezierSegment
                    Point1="-145.829366531046,17.0986155693241"
                    Point2="-149.829366531046,17.0986155693241"
                    Point3="-149.829366531046,21.0986155693241" />
                  <mssgle:LineSegment
                    End="-149.829366531046,42.117454995646" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-101.644038734273,22.0986155693241,53.4587109375,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create Group 2 Dup Vin Excel.Paths[Output 0]"
          TopLeft="360.5,130">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,28"
              Start="0,0"
              End="0,20.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create Group 2 Dup Vin Excel.Paths[OLE DB Source Output]"
          TopLeft="362.249998416752,62.2333324887355">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,25.7666675112645"
              Start="0,0"
              End="0,18.2666675112645">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.2666675112645" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create Group 2 Dup Vin Excel.Paths[Not Same Seller]"
          TopLeft="362.863093027313,200">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,50.111106137246"
              Start="0,0"
              End="0,42.611106137246">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.611106137246" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-35.83369140625,16.431041349873,71.6673828125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create Group 2 Dup Vin Excel.Paths[Different Address]"
          TopLeft="416.25,200">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="141.749992363155,49.722216862771"
              Start="0,0"
              End="141.749992363155,42.222216862771">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.1347174389676" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.1347174389676"
                    Point2="0,17.1347174389676"
                    Point3="4,17.1347174389676" />
                  <mssgle:LineSegment
                    End="137.749992363155,17.1347174389676" />
                  <mssgle:CubicBezierSegment
                    Point1="137.749992363155,17.1347174389676"
                    Point2="141.749992363155,17.1347174389676"
                    Point3="141.749992363155,21.1347174389676" />
                  <mssgle:LineSegment
                    End="141.749992363155,42.222216862771" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="32.1174180565775,22.1347174389676,77.51515625,9.7978515625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Create Group 2 Dup Vin Excel\Get Dup Vins in Groups of Two">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Create Group 3 or More Dup Vin Excel">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="163,42"
          Id="Package\Create Group 3 or More Dup Vin Excel\Script Component"
          TopLeft="409,95" />
        <NodeLayout
          Size="166,42"
          Id="Package\Create Group 3 or More Dup Vin Excel\Different Seller file"
          TopLeft="405,297" />
        <NodeLayout
          Size="154,42"
          Id="Package\Create Group 3 or More Dup Vin Excel\Same Seller File"
          TopLeft="184,296" />
        <NodeLayout
          Size="180,42"
          Id="Package\Create Group 3 or More Dup Vin Excel\Different Address File"
          TopLeft="624,298" />
        <NodeLayout
          Size="242,42"
          Id="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data"
          TopLeft="374,19" />
        <NodeLayout
          Size="155,42"
          Id="Package\Create Group 3 or More Dup Vin Excel\Conditional Split"
          TopLeft="416,175" />
        <EdgeLayout
          Id="Package\Create Group 3 or More Dup Vin Excel.Paths[Same Seller]"
          TopLeft="456.75,217">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-195.75,79"
              Start="0,0"
              End="-195.75,71.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.2241014799154" />
                  <mssgle:CubicBezierSegment
                    Point1="0,23.2241014799154"
                    Point2="0,27.2241014799154"
                    Point3="-4,27.2241014799154" />
                  <mssgle:LineSegment
                    End="-191.75,27.2241014799154" />
                  <mssgle:CubicBezierSegment
                    Point1="-191.75,27.2241014799154"
                    Point2="-195.75,27.2241014799154"
                    Point3="-195.75,31.2241014799154" />
                  <mssgle:LineSegment
                    End="-195.75,71.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-124.60435546875,32.2241014799154,53.4587109375,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create Group 3 or More Dup Vin Excel.Paths[Output 0]"
          TopLeft="492,137">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38"
              Start="0,0"
              End="0,30.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create Group 3 or More Dup Vin Excel.Paths[OLE DB Source Output]"
          TopLeft="492.75,61">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34"
              Start="0,0"
              End="0,26.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create Group 3 or More Dup Vin Excel.Paths[Different Seller]"
          TopLeft="490.75,217">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,80"
              Start="0,0"
              End="0,72.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,72.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-33.54369140625,31.36083984375,67.0873828125,9.7783203125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create Group 3 or More Dup Vin Excel.Paths[Different Address]"
          TopLeft="530.25,217">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="183.75,81"
              Start="0,0"
              End="183.75,73.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.9133192389006" />
                  <mssgle:CubicBezierSegment
                    Point1="0,23.9133192389006"
                    Point2="0,27.9133192389006"
                    Point3="4,27.9133192389006" />
                  <mssgle:LineSegment
                    End="179.75,27.9133192389006" />
                  <mssgle:CubicBezierSegment
                    Point1="179.75,27.9133192389006"
                    Point2="183.75,27.9133192389006"
                    Point3="183.75,31.9133192389006" />
                  <mssgle:LineSegment
                    End="183.75,73.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="53.117421875,32.9133192389006,77.51515625,9.7978515625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Create Group 3 or More Dup Vin Excel\Get Group 3 or More Dup Vin Data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Update Query String">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="164,43"
          Id="Package\Update Query String\Script Component"
          TopLeft="226.333333333333,122.666666666667" />
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>